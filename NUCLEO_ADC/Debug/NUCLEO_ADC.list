
NUCLEO_ADC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003d48  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003dc  08003ee8  08003ee8  00013ee8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080042c4  080042c4  000201d0  2**0
                  CONTENTS
  4 .ARM          00000000  080042c4  080042c4  000201d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080042c4  080042c4  000201d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080042c4  080042c4  000142c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080042c8  080042c8  000142c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d0  20000000  080042cc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  200001d0  0800449c  000201d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000200  0800449c  00020200  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002340  00000000  00000000  00020200  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000007bd  00000000  00000000  00022540  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002b8  00000000  00000000  00022d00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000260  00000000  00000000  00022fb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001014c  00000000  00000000  00023218  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002846  00000000  00000000  00033364  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0005569f  00000000  00000000  00035baa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0008b249  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001adc  00000000  00000000  0008b29c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001d0 	.word	0x200001d0
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08003ed0 	.word	0x08003ed0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001d4 	.word	0x200001d4
 80001dc:	08003ed0 	.word	0x08003ed0

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <main>:
#ifdef MCAL_ADC
#include <mcalADC.h>
#endif

int main(void)
{
 8000bb8:	b580      	push	{r7, lr}
 8000bba:	b084      	sub	sp, #16
 8000bbc:	af00      	add	r7, sp, #0

    ADC_TypeDef   *adc    = ADC1;
 8000bbe:	4b30      	ldr	r3, [pc, #192]	; (8000c80 <main+0xc8>)
 8000bc0:	60fb      	str	r3, [r7, #12]
    uint16_t       result = 0;
 8000bc2:	2300      	movs	r3, #0
 8000bc4:	817b      	strh	r3, [r7, #10]

    const uint16_t threshold = 4095/2;		// Half of the full scale 12Bit value
 8000bc6:	f240 73ff 	movw	r3, #2047	; 0x7ff
 8000bca:	813b      	strh	r3, [r7, #8]
#define		LED_green		PIN4
#define		LED_blue		PIN10
#define 	Bit_red			(unsigned int) 1
#define		Bit_blue		(unsigned int) 2
#define		Bit_green		(unsigned int) 4
    gpioSelectPort(LED_GPIO);
 8000bcc:	482d      	ldr	r0, [pc, #180]	; (8000c84 <main+0xcc>)
 8000bce:	f000 fb2f 	bl	8001230 <gpioSelectPort>
    gpioSelectPinMode(LED_GPIO, LED_red, OUTPUT);
 8000bd2:	2201      	movs	r2, #1
 8000bd4:	2103      	movs	r1, #3
 8000bd6:	482b      	ldr	r0, [pc, #172]	; (8000c84 <main+0xcc>)
 8000bd8:	f000 fb8e 	bl	80012f8 <gpioSelectPinMode>
    gpioSelectPinMode(LED_GPIO, LED_green, OUTPUT);
 8000bdc:	2201      	movs	r2, #1
 8000bde:	2104      	movs	r1, #4
 8000be0:	4828      	ldr	r0, [pc, #160]	; (8000c84 <main+0xcc>)
 8000be2:	f000 fb89 	bl	80012f8 <gpioSelectPinMode>
    gpioSelectPinMode(LED_GPIO, LED_blue, OUTPUT);
 8000be6:	2201      	movs	r2, #1
 8000be8:	210a      	movs	r1, #10
 8000bea:	4826      	ldr	r0, [pc, #152]	; (8000c84 <main+0xcc>)
 8000bec:	f000 fb84 	bl	80012f8 <gpioSelectPinMode>

	gpioSetPin(LED_GPIO, LED_red);	 // switch off LED red
 8000bf0:	2103      	movs	r1, #3
 8000bf2:	4824      	ldr	r0, [pc, #144]	; (8000c84 <main+0xcc>)
 8000bf4:	f000 fbcb 	bl	800138e <gpioSetPin>
	gpioSetPin(LED_GPIO, LED_green);  // switch off LED green
 8000bf8:	2104      	movs	r1, #4
 8000bfa:	4822      	ldr	r0, [pc, #136]	; (8000c84 <main+0xcc>)
 8000bfc:	f000 fbc7 	bl	800138e <gpioSetPin>

#define 	ADC_GPIO		GPIOA
#define 	PA0				PIN0
    gpioSelectPort(ADC_GPIO);
 8000c00:	4821      	ldr	r0, [pc, #132]	; (8000c88 <main+0xd0>)
 8000c02:	f000 fb15 	bl	8001230 <gpioSelectPort>
    gpioSelectPinMode(ADC_GPIO, PA0, ANALOG); // PA0 : Analog-Modus
 8000c06:	2203      	movs	r2, #3
 8000c08:	2100      	movs	r1, #0
 8000c0a:	481f      	ldr	r0, [pc, #124]	; (8000c88 <main+0xd0>)
 8000c0c:	f000 fb74 	bl	80012f8 <gpioSelectPinMode>

#ifdef MCAL_ADC     // Beginn der MCAL-Version

    // Liste der ADC-Kanaele in einer Sequenz
    ADC_CHANNEL_t chnList[] = { ADC_CHN_0 };
 8000c10:	2300      	movs	r3, #0
 8000c12:	703b      	strb	r3, [r7, #0]

    // Anzahl der Listenelemente berechnen
    size_t         listSize = sizeof(chnList) / sizeof(chnList[0]);
 8000c14:	2301      	movs	r3, #1
 8000c16:	607b      	str	r3, [r7, #4]

    adcSelectADC(adc);                     // ADC1: Bustakt aktivieren
 8000c18:	68f8      	ldr	r0, [r7, #12]
 8000c1a:	f000 f927 	bl	8000e6c <adcSelectADC>

    // Konfiguration der Sequenz und Eintrag der Laenge von chnList[]
    adcSetChannelSequence(adc, chnList, listSize);
 8000c1e:	463b      	mov	r3, r7
 8000c20:	687a      	ldr	r2, [r7, #4]
 8000c22:	4619      	mov	r1, r3
 8000c24:	68f8      	ldr	r0, [r7, #12]
 8000c26:	f000 f959 	bl	8000edc <adcSetChannelSequence>
    adcEnableADC(adc);
 8000c2a:	68f8      	ldr	r0, [r7, #12]
 8000c2c:	f000 f938 	bl	8000ea0 <adcEnableADC>

    while (1)
    {
        adcStartConversion(adc);
 8000c30:	68f8      	ldr	r0, [r7, #12]
 8000c32:	f000 fa4f 	bl	80010d4 <adcStartConversion>
        gpioResetPin(LED_GPIO, LED_blue);	//switch LED blue on
 8000c36:	210a      	movs	r1, #10
 8000c38:	4812      	ldr	r0, [pc, #72]	; (8000c84 <main+0xcc>)
 8000c3a:	f000 fbd3 	bl	80013e4 <gpioResetPin>
        while (!(adcIsConversionFinished(adc)))
 8000c3e:	bf00      	nop
 8000c40:	68f8      	ldr	r0, [r7, #12]
 8000c42:	f000 fa57 	bl	80010f4 <adcIsConversionFinished>
 8000c46:	4603      	mov	r3, r0
 8000c48:	f083 0301 	eor.w	r3, r3, #1
 8000c4c:	b2db      	uxtb	r3, r3
 8000c4e:	2b00      	cmp	r3, #0
 8000c50:	d1f6      	bne.n	8000c40 <main+0x88>
        {
            ;
        }
        gpioSetPin(LED_GPIO, LED_blue);	//switch LED blue off
 8000c52:	210a      	movs	r1, #10
 8000c54:	480b      	ldr	r0, [pc, #44]	; (8000c84 <main+0xcc>)
 8000c56:	f000 fb9a 	bl	800138e <gpioSetPin>
        result = adcGetConversionResult(adc);
 8000c5a:	68f8      	ldr	r0, [r7, #12]
 8000c5c:	f000 f931 	bl	8000ec2 <adcGetConversionResult>
 8000c60:	4603      	mov	r3, r0
 8000c62:	817b      	strh	r3, [r7, #10]

        if (result > threshold)
 8000c64:	897a      	ldrh	r2, [r7, #10]
 8000c66:	893b      	ldrh	r3, [r7, #8]
 8000c68:	429a      	cmp	r2, r3
 8000c6a:	d904      	bls.n	8000c76 <main+0xbe>
              {
              	gpioSetPin(LED_GPIO, LED_red);			//LED off
 8000c6c:	2103      	movs	r1, #3
 8000c6e:	4805      	ldr	r0, [pc, #20]	; (8000c84 <main+0xcc>)
 8000c70:	f000 fb8d 	bl	800138e <gpioSetPin>
 8000c74:	e7dc      	b.n	8000c30 <main+0x78>
              }
              else
              {
              	gpioResetPin(LED_GPIO, LED_red);		// LED On
 8000c76:	2103      	movs	r1, #3
 8000c78:	4802      	ldr	r0, [pc, #8]	; (8000c84 <main+0xcc>)
 8000c7a:	f000 fbb3 	bl	80013e4 <gpioResetPin>
        adcStartConversion(adc);
 8000c7e:	e7d7      	b.n	8000c30 <main+0x78>
 8000c80:	40012000 	.word	0x40012000
 8000c84:	40020400 	.word	0x40020400
 8000c88:	40020000 	.word	0x40020000

08000c8c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000c8c:	b480      	push	{r7}
 8000c8e:	af00      	add	r7, sp, #0
	return 1;
 8000c90:	2301      	movs	r3, #1
}
 8000c92:	4618      	mov	r0, r3
 8000c94:	46bd      	mov	sp, r7
 8000c96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c9a:	4770      	bx	lr

08000c9c <_kill>:

int _kill(int pid, int sig)
{
 8000c9c:	b580      	push	{r7, lr}
 8000c9e:	b082      	sub	sp, #8
 8000ca0:	af00      	add	r7, sp, #0
 8000ca2:	6078      	str	r0, [r7, #4]
 8000ca4:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8000ca6:	f000 fbc9 	bl	800143c <__errno>
 8000caa:	4603      	mov	r3, r0
 8000cac:	2216      	movs	r2, #22
 8000cae:	601a      	str	r2, [r3, #0]
	return -1;
 8000cb0:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000cb4:	4618      	mov	r0, r3
 8000cb6:	3708      	adds	r7, #8
 8000cb8:	46bd      	mov	sp, r7
 8000cba:	bd80      	pop	{r7, pc}

08000cbc <_exit>:

void _exit (int status)
{
 8000cbc:	b580      	push	{r7, lr}
 8000cbe:	b082      	sub	sp, #8
 8000cc0:	af00      	add	r7, sp, #0
 8000cc2:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8000cc4:	f04f 31ff 	mov.w	r1, #4294967295
 8000cc8:	6878      	ldr	r0, [r7, #4]
 8000cca:	f7ff ffe7 	bl	8000c9c <_kill>
	while (1) {}		/* Make sure we hang here */
 8000cce:	e7fe      	b.n	8000cce <_exit+0x12>

08000cd0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000cd0:	b580      	push	{r7, lr}
 8000cd2:	b086      	sub	sp, #24
 8000cd4:	af00      	add	r7, sp, #0
 8000cd6:	60f8      	str	r0, [r7, #12]
 8000cd8:	60b9      	str	r1, [r7, #8]
 8000cda:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000cdc:	2300      	movs	r3, #0
 8000cde:	617b      	str	r3, [r7, #20]
 8000ce0:	e00a      	b.n	8000cf8 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000ce2:	f3af 8000 	nop.w
 8000ce6:	4601      	mov	r1, r0
 8000ce8:	68bb      	ldr	r3, [r7, #8]
 8000cea:	1c5a      	adds	r2, r3, #1
 8000cec:	60ba      	str	r2, [r7, #8]
 8000cee:	b2ca      	uxtb	r2, r1
 8000cf0:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000cf2:	697b      	ldr	r3, [r7, #20]
 8000cf4:	3301      	adds	r3, #1
 8000cf6:	617b      	str	r3, [r7, #20]
 8000cf8:	697a      	ldr	r2, [r7, #20]
 8000cfa:	687b      	ldr	r3, [r7, #4]
 8000cfc:	429a      	cmp	r2, r3
 8000cfe:	dbf0      	blt.n	8000ce2 <_read+0x12>
	}

return len;
 8000d00:	687b      	ldr	r3, [r7, #4]
}
 8000d02:	4618      	mov	r0, r3
 8000d04:	3718      	adds	r7, #24
 8000d06:	46bd      	mov	sp, r7
 8000d08:	bd80      	pop	{r7, pc}

08000d0a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000d0a:	b580      	push	{r7, lr}
 8000d0c:	b086      	sub	sp, #24
 8000d0e:	af00      	add	r7, sp, #0
 8000d10:	60f8      	str	r0, [r7, #12]
 8000d12:	60b9      	str	r1, [r7, #8]
 8000d14:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000d16:	2300      	movs	r3, #0
 8000d18:	617b      	str	r3, [r7, #20]
 8000d1a:	e009      	b.n	8000d30 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000d1c:	68bb      	ldr	r3, [r7, #8]
 8000d1e:	1c5a      	adds	r2, r3, #1
 8000d20:	60ba      	str	r2, [r7, #8]
 8000d22:	781b      	ldrb	r3, [r3, #0]
 8000d24:	4618      	mov	r0, r3
 8000d26:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000d2a:	697b      	ldr	r3, [r7, #20]
 8000d2c:	3301      	adds	r3, #1
 8000d2e:	617b      	str	r3, [r7, #20]
 8000d30:	697a      	ldr	r2, [r7, #20]
 8000d32:	687b      	ldr	r3, [r7, #4]
 8000d34:	429a      	cmp	r2, r3
 8000d36:	dbf1      	blt.n	8000d1c <_write+0x12>
	}
	return len;
 8000d38:	687b      	ldr	r3, [r7, #4]
}
 8000d3a:	4618      	mov	r0, r3
 8000d3c:	3718      	adds	r7, #24
 8000d3e:	46bd      	mov	sp, r7
 8000d40:	bd80      	pop	{r7, pc}

08000d42 <_close>:

int _close(int file)
{
 8000d42:	b480      	push	{r7}
 8000d44:	b083      	sub	sp, #12
 8000d46:	af00      	add	r7, sp, #0
 8000d48:	6078      	str	r0, [r7, #4]
	return -1;
 8000d4a:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000d4e:	4618      	mov	r0, r3
 8000d50:	370c      	adds	r7, #12
 8000d52:	46bd      	mov	sp, r7
 8000d54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d58:	4770      	bx	lr

08000d5a <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000d5a:	b480      	push	{r7}
 8000d5c:	b083      	sub	sp, #12
 8000d5e:	af00      	add	r7, sp, #0
 8000d60:	6078      	str	r0, [r7, #4]
 8000d62:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000d64:	683b      	ldr	r3, [r7, #0]
 8000d66:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000d6a:	605a      	str	r2, [r3, #4]
	return 0;
 8000d6c:	2300      	movs	r3, #0
}
 8000d6e:	4618      	mov	r0, r3
 8000d70:	370c      	adds	r7, #12
 8000d72:	46bd      	mov	sp, r7
 8000d74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d78:	4770      	bx	lr

08000d7a <_isatty>:

int _isatty(int file)
{
 8000d7a:	b480      	push	{r7}
 8000d7c:	b083      	sub	sp, #12
 8000d7e:	af00      	add	r7, sp, #0
 8000d80:	6078      	str	r0, [r7, #4]
	return 1;
 8000d82:	2301      	movs	r3, #1
}
 8000d84:	4618      	mov	r0, r3
 8000d86:	370c      	adds	r7, #12
 8000d88:	46bd      	mov	sp, r7
 8000d8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d8e:	4770      	bx	lr

08000d90 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000d90:	b480      	push	{r7}
 8000d92:	b085      	sub	sp, #20
 8000d94:	af00      	add	r7, sp, #0
 8000d96:	60f8      	str	r0, [r7, #12]
 8000d98:	60b9      	str	r1, [r7, #8]
 8000d9a:	607a      	str	r2, [r7, #4]
	return 0;
 8000d9c:	2300      	movs	r3, #0
}
 8000d9e:	4618      	mov	r0, r3
 8000da0:	3714      	adds	r7, #20
 8000da2:	46bd      	mov	sp, r7
 8000da4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000da8:	4770      	bx	lr
	...

08000dac <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000dac:	b580      	push	{r7, lr}
 8000dae:	b086      	sub	sp, #24
 8000db0:	af00      	add	r7, sp, #0
 8000db2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000db4:	4a14      	ldr	r2, [pc, #80]	; (8000e08 <_sbrk+0x5c>)
 8000db6:	4b15      	ldr	r3, [pc, #84]	; (8000e0c <_sbrk+0x60>)
 8000db8:	1ad3      	subs	r3, r2, r3
 8000dba:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000dbc:	697b      	ldr	r3, [r7, #20]
 8000dbe:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000dc0:	4b13      	ldr	r3, [pc, #76]	; (8000e10 <_sbrk+0x64>)
 8000dc2:	681b      	ldr	r3, [r3, #0]
 8000dc4:	2b00      	cmp	r3, #0
 8000dc6:	d102      	bne.n	8000dce <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000dc8:	4b11      	ldr	r3, [pc, #68]	; (8000e10 <_sbrk+0x64>)
 8000dca:	4a12      	ldr	r2, [pc, #72]	; (8000e14 <_sbrk+0x68>)
 8000dcc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000dce:	4b10      	ldr	r3, [pc, #64]	; (8000e10 <_sbrk+0x64>)
 8000dd0:	681a      	ldr	r2, [r3, #0]
 8000dd2:	687b      	ldr	r3, [r7, #4]
 8000dd4:	4413      	add	r3, r2
 8000dd6:	693a      	ldr	r2, [r7, #16]
 8000dd8:	429a      	cmp	r2, r3
 8000dda:	d207      	bcs.n	8000dec <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000ddc:	f000 fb2e 	bl	800143c <__errno>
 8000de0:	4603      	mov	r3, r0
 8000de2:	220c      	movs	r2, #12
 8000de4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000de6:	f04f 33ff 	mov.w	r3, #4294967295
 8000dea:	e009      	b.n	8000e00 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000dec:	4b08      	ldr	r3, [pc, #32]	; (8000e10 <_sbrk+0x64>)
 8000dee:	681b      	ldr	r3, [r3, #0]
 8000df0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000df2:	4b07      	ldr	r3, [pc, #28]	; (8000e10 <_sbrk+0x64>)
 8000df4:	681a      	ldr	r2, [r3, #0]
 8000df6:	687b      	ldr	r3, [r7, #4]
 8000df8:	4413      	add	r3, r2
 8000dfa:	4a05      	ldr	r2, [pc, #20]	; (8000e10 <_sbrk+0x64>)
 8000dfc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000dfe:	68fb      	ldr	r3, [r7, #12]
}
 8000e00:	4618      	mov	r0, r3
 8000e02:	3718      	adds	r7, #24
 8000e04:	46bd      	mov	sp, r7
 8000e06:	bd80      	pop	{r7, pc}
 8000e08:	20018000 	.word	0x20018000
 8000e0c:	00000400 	.word	0x00000400
 8000e10:	200001ec 	.word	0x200001ec
 8000e14:	20000200 	.word	0x20000200

08000e18 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000e18:	480d      	ldr	r0, [pc, #52]	; (8000e50 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000e1a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000e1c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000e20:	480c      	ldr	r0, [pc, #48]	; (8000e54 <LoopForever+0x6>)
  ldr r1, =_edata
 8000e22:	490d      	ldr	r1, [pc, #52]	; (8000e58 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000e24:	4a0d      	ldr	r2, [pc, #52]	; (8000e5c <LoopForever+0xe>)
  movs r3, #0
 8000e26:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000e28:	e002      	b.n	8000e30 <LoopCopyDataInit>

08000e2a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000e2a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000e2c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000e2e:	3304      	adds	r3, #4

08000e30 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000e30:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000e32:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000e34:	d3f9      	bcc.n	8000e2a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000e36:	4a0a      	ldr	r2, [pc, #40]	; (8000e60 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000e38:	4c0a      	ldr	r4, [pc, #40]	; (8000e64 <LoopForever+0x16>)
  movs r3, #0
 8000e3a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000e3c:	e001      	b.n	8000e42 <LoopFillZerobss>

08000e3e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000e3e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000e40:	3204      	adds	r2, #4

08000e42 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000e42:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000e44:	d3fb      	bcc.n	8000e3e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000e46:	f000 faff 	bl	8001448 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000e4a:	f7ff feb5 	bl	8000bb8 <main>

08000e4e <LoopForever>:

LoopForever:
  b LoopForever
 8000e4e:	e7fe      	b.n	8000e4e <LoopForever>
  ldr   r0, =_estack
 8000e50:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000e54:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000e58:	200001d0 	.word	0x200001d0
  ldr r2, =_sidata
 8000e5c:	080042cc 	.word	0x080042cc
  ldr r2, =_sbss
 8000e60:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 8000e64:	20000200 	.word	0x20000200

08000e68 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000e68:	e7fe      	b.n	8000e68 <ADC_IRQHandler>
	...

08000e6c <adcSelectADC>:
 *          <td rowspan="1">10...8</td>
 *      </tr>
 * </table>
 */
ADC_RETURN_CODE_t adcSelectADC(ADC_TypeDef *adc)
{
 8000e6c:	b480      	push	{r7}
 8000e6e:	b083      	sub	sp, #12
 8000e70:	af00      	add	r7, sp, #0
 8000e72:	6078      	str	r0, [r7, #4]
    if (ADC1 == adc)
 8000e74:	687b      	ldr	r3, [r7, #4]
 8000e76:	4a08      	ldr	r2, [pc, #32]	; (8000e98 <adcSelectADC+0x2c>)
 8000e78:	4293      	cmp	r3, r2
 8000e7a:	d105      	bne.n	8000e88 <adcSelectADC+0x1c>
    {
        RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 8000e7c:	4b07      	ldr	r3, [pc, #28]	; (8000e9c <adcSelectADC+0x30>)
 8000e7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e80:	4a06      	ldr	r2, [pc, #24]	; (8000e9c <adcSelectADC+0x30>)
 8000e82:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000e86:	6453      	str	r3, [r2, #68]	; 0x44
    }
    return ADC_OK;
 8000e88:	2300      	movs	r3, #0
}
 8000e8a:	4618      	mov	r0, r3
 8000e8c:	370c      	adds	r7, #12
 8000e8e:	46bd      	mov	sp, r7
 8000e90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e94:	4770      	bx	lr
 8000e96:	bf00      	nop
 8000e98:	40012000 	.word	0x40012000
 8000e9c:	40023800 	.word	0x40023800

08000ea0 <adcEnableADC>:
 *          <td rowspan="1">0</td>
 *      </tr>
 * </table>
 */
ADC_RETURN_CODE_t adcEnableADC(ADC_TypeDef *adc)
{
 8000ea0:	b480      	push	{r7}
 8000ea2:	b083      	sub	sp, #12
 8000ea4:	af00      	add	r7, sp, #0
 8000ea6:	6078      	str	r0, [r7, #4]
    adc->CR2 |= ADC_CR2_ADON;
 8000ea8:	687b      	ldr	r3, [r7, #4]
 8000eaa:	689b      	ldr	r3, [r3, #8]
 8000eac:	f043 0201 	orr.w	r2, r3, #1
 8000eb0:	687b      	ldr	r3, [r7, #4]
 8000eb2:	609a      	str	r2, [r3, #8]
    return ADC_OK;
 8000eb4:	2300      	movs	r3, #0
}
 8000eb6:	4618      	mov	r0, r3
 8000eb8:	370c      	adds	r7, #12
 8000eba:	46bd      	mov	sp, r7
 8000ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ec0:	4770      	bx	lr

08000ec2 <adcGetConversionResult>:
 *          <td rowspan="1">Reads conversion result from DR</td>
 *      </tr>
 * </table>
 */
uint16_t adcGetConversionResult(ADC_TypeDef *adc)
{
 8000ec2:	b480      	push	{r7}
 8000ec4:	b083      	sub	sp, #12
 8000ec6:	af00      	add	r7, sp, #0
 8000ec8:	6078      	str	r0, [r7, #4]
    return (adc->DR);
 8000eca:	687b      	ldr	r3, [r7, #4]
 8000ecc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000ece:	b29b      	uxth	r3, r3
}
 8000ed0:	4618      	mov	r0, r3
 8000ed2:	370c      	adds	r7, #12
 8000ed4:	46bd      	mov	sp, r7
 8000ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eda:	4770      	bx	lr

08000edc <adcSetChannelSequence>:
 *
 * @note
 * The sequence starts always at position 0 in the sequence list.
 */
ADC_RETURN_CODE_t adcSetChannelSequence(ADC_TypeDef *adc, ADC_CHANNEL_t *chnList, size_t seqLen)
{
 8000edc:	b480      	push	{r7}
 8000ede:	b087      	sub	sp, #28
 8000ee0:	af00      	add	r7, sp, #0
 8000ee2:	60f8      	str	r0, [r7, #12]
 8000ee4:	60b9      	str	r1, [r7, #8]
 8000ee6:	607a      	str	r2, [r7, #4]
     uint8_t i = 0;
 8000ee8:	2300      	movs	r3, #0
 8000eea:	75fb      	strb	r3, [r7, #23]

     if (seqLen > 16)
 8000eec:	687b      	ldr	r3, [r7, #4]
 8000eee:	2b10      	cmp	r3, #16
 8000ef0:	d902      	bls.n	8000ef8 <adcSetChannelSequence+0x1c>
     {
         return ADC_INVALID_SEQUENCE_LENGTH;
 8000ef2:	f06f 037b 	mvn.w	r3, #123	; 0x7b
 8000ef6:	e0e7      	b.n	80010c8 <adcSetChannelSequence+0x1ec>
     }

     adc->SQR1 |= ((seqLen - 1) << ADC_SQR1_L_Pos);
 8000ef8:	68fb      	ldr	r3, [r7, #12]
 8000efa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000efc:	687b      	ldr	r3, [r7, #4]
 8000efe:	3b01      	subs	r3, #1
 8000f00:	051b      	lsls	r3, r3, #20
 8000f02:	431a      	orrs	r2, r3
 8000f04:	68fb      	ldr	r3, [r7, #12]
 8000f06:	62da      	str	r2, [r3, #44]	; 0x2c

     for (i = 0; i < seqLen; i++)
 8000f08:	2300      	movs	r3, #0
 8000f0a:	75fb      	strb	r3, [r7, #23]
 8000f0c:	e0d6      	b.n	80010bc <adcSetChannelSequence+0x1e0>
     {
         switch (i)
 8000f0e:	7dfb      	ldrb	r3, [r7, #23]
 8000f10:	2b0f      	cmp	r3, #15
 8000f12:	f200 80d0 	bhi.w	80010b6 <adcSetChannelSequence+0x1da>
 8000f16:	a201      	add	r2, pc, #4	; (adr r2, 8000f1c <adcSetChannelSequence+0x40>)
 8000f18:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000f1c:	08000f5d 	.word	0x08000f5d
 8000f20:	08000f71 	.word	0x08000f71
 8000f24:	08000f87 	.word	0x08000f87
 8000f28:	08000f9d 	.word	0x08000f9d
 8000f2c:	08000fb3 	.word	0x08000fb3
 8000f30:	08000fc9 	.word	0x08000fc9
 8000f34:	08000fdf 	.word	0x08000fdf
 8000f38:	08000ff3 	.word	0x08000ff3
 8000f3c:	08001009 	.word	0x08001009
 8000f40:	0800101f 	.word	0x0800101f
 8000f44:	08001035 	.word	0x08001035
 8000f48:	0800104b 	.word	0x0800104b
 8000f4c:	08001061 	.word	0x08001061
 8000f50:	08001075 	.word	0x08001075
 8000f54:	0800108b 	.word	0x0800108b
 8000f58:	080010a1 	.word	0x080010a1
         {
             case 0:                                            // This is ADC Input Channel #1
                 adc->SQR3 |= (chnList[i] << ADC_SQR3_SQ1_Pos);
 8000f5c:	68fb      	ldr	r3, [r7, #12]
 8000f5e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000f60:	7dfa      	ldrb	r2, [r7, #23]
 8000f62:	68b9      	ldr	r1, [r7, #8]
 8000f64:	440a      	add	r2, r1
 8000f66:	7812      	ldrb	r2, [r2, #0]
 8000f68:	431a      	orrs	r2, r3
 8000f6a:	68fb      	ldr	r3, [r7, #12]
 8000f6c:	635a      	str	r2, [r3, #52]	; 0x34
                 break;
 8000f6e:	e0a2      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 1:                                            // This is ADC Input Channel #2
                 adc->SQR3 |= (chnList[i] << ADC_SQR3_SQ2_Pos);
 8000f70:	68fb      	ldr	r3, [r7, #12]
 8000f72:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000f74:	7dfa      	ldrb	r2, [r7, #23]
 8000f76:	68b9      	ldr	r1, [r7, #8]
 8000f78:	440a      	add	r2, r1
 8000f7a:	7812      	ldrb	r2, [r2, #0]
 8000f7c:	0152      	lsls	r2, r2, #5
 8000f7e:	431a      	orrs	r2, r3
 8000f80:	68fb      	ldr	r3, [r7, #12]
 8000f82:	635a      	str	r2, [r3, #52]	; 0x34
                 break;
 8000f84:	e097      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 2:                                            // This is ADC Input Channel #3
                 adc->SQR3 |= (chnList[i] << ADC_SQR3_SQ3_Pos);
 8000f86:	68fb      	ldr	r3, [r7, #12]
 8000f88:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000f8a:	7dfa      	ldrb	r2, [r7, #23]
 8000f8c:	68b9      	ldr	r1, [r7, #8]
 8000f8e:	440a      	add	r2, r1
 8000f90:	7812      	ldrb	r2, [r2, #0]
 8000f92:	0292      	lsls	r2, r2, #10
 8000f94:	431a      	orrs	r2, r3
 8000f96:	68fb      	ldr	r3, [r7, #12]
 8000f98:	635a      	str	r2, [r3, #52]	; 0x34
                 break;
 8000f9a:	e08c      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 3:                                            // This is ADC Input Channel #4
                 adc->SQR3 |= (chnList[i] << ADC_SQR3_SQ4_Pos);
 8000f9c:	68fb      	ldr	r3, [r7, #12]
 8000f9e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000fa0:	7dfa      	ldrb	r2, [r7, #23]
 8000fa2:	68b9      	ldr	r1, [r7, #8]
 8000fa4:	440a      	add	r2, r1
 8000fa6:	7812      	ldrb	r2, [r2, #0]
 8000fa8:	03d2      	lsls	r2, r2, #15
 8000faa:	431a      	orrs	r2, r3
 8000fac:	68fb      	ldr	r3, [r7, #12]
 8000fae:	635a      	str	r2, [r3, #52]	; 0x34
                 break;
 8000fb0:	e081      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 4:                                            // This is ADC Input Channel #5
                 adc->SQR3 |= (chnList[i] << ADC_SQR3_SQ5_Pos);
 8000fb2:	68fb      	ldr	r3, [r7, #12]
 8000fb4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000fb6:	7dfa      	ldrb	r2, [r7, #23]
 8000fb8:	68b9      	ldr	r1, [r7, #8]
 8000fba:	440a      	add	r2, r1
 8000fbc:	7812      	ldrb	r2, [r2, #0]
 8000fbe:	0512      	lsls	r2, r2, #20
 8000fc0:	431a      	orrs	r2, r3
 8000fc2:	68fb      	ldr	r3, [r7, #12]
 8000fc4:	635a      	str	r2, [r3, #52]	; 0x34
                 break;
 8000fc6:	e076      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 5:                                            // This is ADC Input Channel #6
                 adc->SQR3 |= (chnList[i] << ADC_SQR3_SQ6_Pos);
 8000fc8:	68fb      	ldr	r3, [r7, #12]
 8000fca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000fcc:	7dfa      	ldrb	r2, [r7, #23]
 8000fce:	68b9      	ldr	r1, [r7, #8]
 8000fd0:	440a      	add	r2, r1
 8000fd2:	7812      	ldrb	r2, [r2, #0]
 8000fd4:	0652      	lsls	r2, r2, #25
 8000fd6:	431a      	orrs	r2, r3
 8000fd8:	68fb      	ldr	r3, [r7, #12]
 8000fda:	635a      	str	r2, [r3, #52]	; 0x34
                 break;
 8000fdc:	e06b      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 6:                                            // This is ADC Input Channel #7
                 adc->SQR2 |= (chnList[i] << ADC_SQR2_SQ7_Pos);
 8000fde:	68fb      	ldr	r3, [r7, #12]
 8000fe0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fe2:	7dfa      	ldrb	r2, [r7, #23]
 8000fe4:	68b9      	ldr	r1, [r7, #8]
 8000fe6:	440a      	add	r2, r1
 8000fe8:	7812      	ldrb	r2, [r2, #0]
 8000fea:	431a      	orrs	r2, r3
 8000fec:	68fb      	ldr	r3, [r7, #12]
 8000fee:	631a      	str	r2, [r3, #48]	; 0x30
                 break;
 8000ff0:	e061      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 7:                                            // This is ADC Input Channel #8
                 adc->SQR2 |= (chnList[i] << ADC_SQR2_SQ8_Pos);
 8000ff2:	68fb      	ldr	r3, [r7, #12]
 8000ff4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ff6:	7dfa      	ldrb	r2, [r7, #23]
 8000ff8:	68b9      	ldr	r1, [r7, #8]
 8000ffa:	440a      	add	r2, r1
 8000ffc:	7812      	ldrb	r2, [r2, #0]
 8000ffe:	0152      	lsls	r2, r2, #5
 8001000:	431a      	orrs	r2, r3
 8001002:	68fb      	ldr	r3, [r7, #12]
 8001004:	631a      	str	r2, [r3, #48]	; 0x30
                 break;
 8001006:	e056      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 8:                                            // This is ADC Input Channel #9
                 adc->SQR2 |= (chnList[i] << ADC_SQR2_SQ9_Pos);
 8001008:	68fb      	ldr	r3, [r7, #12]
 800100a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800100c:	7dfa      	ldrb	r2, [r7, #23]
 800100e:	68b9      	ldr	r1, [r7, #8]
 8001010:	440a      	add	r2, r1
 8001012:	7812      	ldrb	r2, [r2, #0]
 8001014:	0292      	lsls	r2, r2, #10
 8001016:	431a      	orrs	r2, r3
 8001018:	68fb      	ldr	r3, [r7, #12]
 800101a:	631a      	str	r2, [r3, #48]	; 0x30
                 break;
 800101c:	e04b      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 9:                                            // This is ADC Input Channel #10
                 adc->SQR2 |= (chnList[i] << ADC_SQR2_SQ10_Pos);
 800101e:	68fb      	ldr	r3, [r7, #12]
 8001020:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001022:	7dfa      	ldrb	r2, [r7, #23]
 8001024:	68b9      	ldr	r1, [r7, #8]
 8001026:	440a      	add	r2, r1
 8001028:	7812      	ldrb	r2, [r2, #0]
 800102a:	03d2      	lsls	r2, r2, #15
 800102c:	431a      	orrs	r2, r3
 800102e:	68fb      	ldr	r3, [r7, #12]
 8001030:	631a      	str	r2, [r3, #48]	; 0x30
                 break;
 8001032:	e040      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 10:                                            // This is ADC Input Channel #11
                 adc->SQR2 |= (chnList[i] << ADC_SQR2_SQ11_Pos);
 8001034:	68fb      	ldr	r3, [r7, #12]
 8001036:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001038:	7dfa      	ldrb	r2, [r7, #23]
 800103a:	68b9      	ldr	r1, [r7, #8]
 800103c:	440a      	add	r2, r1
 800103e:	7812      	ldrb	r2, [r2, #0]
 8001040:	0512      	lsls	r2, r2, #20
 8001042:	431a      	orrs	r2, r3
 8001044:	68fb      	ldr	r3, [r7, #12]
 8001046:	631a      	str	r2, [r3, #48]	; 0x30
                 break;
 8001048:	e035      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 11:                                            // This is ADC Input Channel #12
                 adc->SQR2 |= (chnList[i] << ADC_SQR2_SQ12_Pos);
 800104a:	68fb      	ldr	r3, [r7, #12]
 800104c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800104e:	7dfa      	ldrb	r2, [r7, #23]
 8001050:	68b9      	ldr	r1, [r7, #8]
 8001052:	440a      	add	r2, r1
 8001054:	7812      	ldrb	r2, [r2, #0]
 8001056:	0652      	lsls	r2, r2, #25
 8001058:	431a      	orrs	r2, r3
 800105a:	68fb      	ldr	r3, [r7, #12]
 800105c:	631a      	str	r2, [r3, #48]	; 0x30
                 break;
 800105e:	e02a      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 12:                                            // This is ADC Input Channel #13
                 adc->SQR1 |= (chnList[i] << ADC_SQR1_SQ13_Pos);
 8001060:	68fb      	ldr	r3, [r7, #12]
 8001062:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001064:	7dfa      	ldrb	r2, [r7, #23]
 8001066:	68b9      	ldr	r1, [r7, #8]
 8001068:	440a      	add	r2, r1
 800106a:	7812      	ldrb	r2, [r2, #0]
 800106c:	431a      	orrs	r2, r3
 800106e:	68fb      	ldr	r3, [r7, #12]
 8001070:	62da      	str	r2, [r3, #44]	; 0x2c
                 break;
 8001072:	e020      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 13:                                            // This is ADC Input Channel #14
                 adc->SQR1 |= (chnList[i] << ADC_SQR1_SQ14_Pos);
 8001074:	68fb      	ldr	r3, [r7, #12]
 8001076:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001078:	7dfa      	ldrb	r2, [r7, #23]
 800107a:	68b9      	ldr	r1, [r7, #8]
 800107c:	440a      	add	r2, r1
 800107e:	7812      	ldrb	r2, [r2, #0]
 8001080:	0152      	lsls	r2, r2, #5
 8001082:	431a      	orrs	r2, r3
 8001084:	68fb      	ldr	r3, [r7, #12]
 8001086:	62da      	str	r2, [r3, #44]	; 0x2c
                 break;
 8001088:	e015      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 14:                                            // This is ADC Input Channel #15
                 adc->SQR1 |= (chnList[i] << ADC_SQR1_SQ15_Pos);
 800108a:	68fb      	ldr	r3, [r7, #12]
 800108c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800108e:	7dfa      	ldrb	r2, [r7, #23]
 8001090:	68b9      	ldr	r1, [r7, #8]
 8001092:	440a      	add	r2, r1
 8001094:	7812      	ldrb	r2, [r2, #0]
 8001096:	0292      	lsls	r2, r2, #10
 8001098:	431a      	orrs	r2, r3
 800109a:	68fb      	ldr	r3, [r7, #12]
 800109c:	62da      	str	r2, [r3, #44]	; 0x2c
                 break;
 800109e:	e00a      	b.n	80010b6 <adcSetChannelSequence+0x1da>

             case 15:                                            // This is ADC Input Channel #16
                 adc->SQR1 |= (chnList[i] << ADC_SQR1_SQ16_Pos);
 80010a0:	68fb      	ldr	r3, [r7, #12]
 80010a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80010a4:	7dfa      	ldrb	r2, [r7, #23]
 80010a6:	68b9      	ldr	r1, [r7, #8]
 80010a8:	440a      	add	r2, r1
 80010aa:	7812      	ldrb	r2, [r2, #0]
 80010ac:	03d2      	lsls	r2, r2, #15
 80010ae:	431a      	orrs	r2, r3
 80010b0:	68fb      	ldr	r3, [r7, #12]
 80010b2:	62da      	str	r2, [r3, #44]	; 0x2c
                 break;
 80010b4:	bf00      	nop
     for (i = 0; i < seqLen; i++)
 80010b6:	7dfb      	ldrb	r3, [r7, #23]
 80010b8:	3301      	adds	r3, #1
 80010ba:	75fb      	strb	r3, [r7, #23]
 80010bc:	7dfb      	ldrb	r3, [r7, #23]
 80010be:	687a      	ldr	r2, [r7, #4]
 80010c0:	429a      	cmp	r2, r3
 80010c2:	f63f af24 	bhi.w	8000f0e <adcSetChannelSequence+0x32>
         }
     }

     return ADC_OK;
 80010c6:	2300      	movs	r3, #0
}
 80010c8:	4618      	mov	r0, r3
 80010ca:	371c      	adds	r7, #28
 80010cc:	46bd      	mov	sp, r7
 80010ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010d2:	4770      	bx	lr

080010d4 <adcStartConversion>:
 *
 * @note
 * The sequence starts always at position 0 in the sequence list.
 */
void adcStartConversion(ADC_TypeDef *adc)
{
 80010d4:	b480      	push	{r7}
 80010d6:	b083      	sub	sp, #12
 80010d8:	af00      	add	r7, sp, #0
 80010da:	6078      	str	r0, [r7, #4]
    adc->CR2 |= ADC_CR2_SWSTART;
 80010dc:	687b      	ldr	r3, [r7, #4]
 80010de:	689b      	ldr	r3, [r3, #8]
 80010e0:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 80010e4:	687b      	ldr	r3, [r7, #4]
 80010e6:	609a      	str	r2, [r3, #8]
}
 80010e8:	bf00      	nop
 80010ea:	370c      	adds	r7, #12
 80010ec:	46bd      	mov	sp, r7
 80010ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010f2:	4770      	bx	lr

080010f4 <adcIsConversionFinished>:
 *
 * @note
 * The sequence starts always at position 0 in the sequence list.
 */
bool adcIsConversionFinished(ADC_TypeDef *adc)
{
 80010f4:	b480      	push	{r7}
 80010f6:	b083      	sub	sp, #12
 80010f8:	af00      	add	r7, sp, #0
 80010fa:	6078      	str	r0, [r7, #4]
    return (adc->SR & ADC_SR_EOC);
 80010fc:	687b      	ldr	r3, [r7, #4]
 80010fe:	681b      	ldr	r3, [r3, #0]
 8001100:	f003 0302 	and.w	r3, r3, #2
 8001104:	2b00      	cmp	r3, #0
 8001106:	bf14      	ite	ne
 8001108:	2301      	movne	r3, #1
 800110a:	2300      	moveq	r3, #0
 800110c:	b2db      	uxtb	r3, r3
}
 800110e:	4618      	mov	r0, r3
 8001110:	370c      	adds	r7, #12
 8001112:	46bd      	mov	sp, r7
 8001114:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001118:	4770      	bx	lr
	...

0800111c <gpioVerifyPort>:
 * Function to verify the integrity of the **port** parameter.
 *
 * @param *port : Pointer to the GPIO port
 */
bool gpioVerifyPort(GPIO_TypeDef *port)
{
 800111c:	b480      	push	{r7}
 800111e:	b083      	sub	sp, #12
 8001120:	af00      	add	r7, sp, #0
 8001122:	6078      	str	r0, [r7, #4]
    if ((GPIOA == port) || (GPIOB == port) || (GPIOC == port) ||
 8001124:	687b      	ldr	r3, [r7, #4]
 8001126:	4a10      	ldr	r2, [pc, #64]	; (8001168 <gpioVerifyPort+0x4c>)
 8001128:	4293      	cmp	r3, r2
 800112a:	d013      	beq.n	8001154 <gpioVerifyPort+0x38>
 800112c:	687b      	ldr	r3, [r7, #4]
 800112e:	4a0f      	ldr	r2, [pc, #60]	; (800116c <gpioVerifyPort+0x50>)
 8001130:	4293      	cmp	r3, r2
 8001132:	d00f      	beq.n	8001154 <gpioVerifyPort+0x38>
 8001134:	687b      	ldr	r3, [r7, #4]
 8001136:	4a0e      	ldr	r2, [pc, #56]	; (8001170 <gpioVerifyPort+0x54>)
 8001138:	4293      	cmp	r3, r2
 800113a:	d00b      	beq.n	8001154 <gpioVerifyPort+0x38>
 800113c:	687b      	ldr	r3, [r7, #4]
 800113e:	4a0d      	ldr	r2, [pc, #52]	; (8001174 <gpioVerifyPort+0x58>)
 8001140:	4293      	cmp	r3, r2
 8001142:	d007      	beq.n	8001154 <gpioVerifyPort+0x38>
        (GPIOD == port) || (GPIOE == port) || (GPIOH == port))
 8001144:	687b      	ldr	r3, [r7, #4]
 8001146:	4a0c      	ldr	r2, [pc, #48]	; (8001178 <gpioVerifyPort+0x5c>)
 8001148:	4293      	cmp	r3, r2
 800114a:	d003      	beq.n	8001154 <gpioVerifyPort+0x38>
 800114c:	687b      	ldr	r3, [r7, #4]
 800114e:	4a0b      	ldr	r2, [pc, #44]	; (800117c <gpioVerifyPort+0x60>)
 8001150:	4293      	cmp	r3, r2
 8001152:	d101      	bne.n	8001158 <gpioVerifyPort+0x3c>
    {
        return true;
 8001154:	2301      	movs	r3, #1
 8001156:	e000      	b.n	800115a <gpioVerifyPort+0x3e>
    }
    return false;
 8001158:	2300      	movs	r3, #0
}
 800115a:	4618      	mov	r0, r3
 800115c:	370c      	adds	r7, #12
 800115e:	46bd      	mov	sp, r7
 8001160:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001164:	4770      	bx	lr
 8001166:	bf00      	nop
 8001168:	40020000 	.word	0x40020000
 800116c:	40020400 	.word	0x40020400
 8001170:	40020800 	.word	0x40020800
 8001174:	40020c00 	.word	0x40020c00
 8001178:	40021000 	.word	0x40021000
 800117c:	40021c00 	.word	0x40021c00

08001180 <gpioVerifyPin>:
 * Function to verify the integrity of the **pin** parameter.
 *
 * @param pin : The pin number of any of the GPIO ports
 */
bool gpioVerifyPin(PIN_NUM_t pin)
{
 8001180:	b480      	push	{r7}
 8001182:	b083      	sub	sp, #12
 8001184:	af00      	add	r7, sp, #0
 8001186:	4603      	mov	r3, r0
 8001188:	71fb      	strb	r3, [r7, #7]
    if ((PIN0  == pin) || (PIN1  == pin) || (PIN2  == pin) || (PIN3  == pin) ||
 800118a:	79fb      	ldrb	r3, [r7, #7]
 800118c:	2b00      	cmp	r3, #0
 800118e:	d02c      	beq.n	80011ea <gpioVerifyPin+0x6a>
 8001190:	79fb      	ldrb	r3, [r7, #7]
 8001192:	2b01      	cmp	r3, #1
 8001194:	d029      	beq.n	80011ea <gpioVerifyPin+0x6a>
 8001196:	79fb      	ldrb	r3, [r7, #7]
 8001198:	2b02      	cmp	r3, #2
 800119a:	d026      	beq.n	80011ea <gpioVerifyPin+0x6a>
 800119c:	79fb      	ldrb	r3, [r7, #7]
 800119e:	2b03      	cmp	r3, #3
 80011a0:	d023      	beq.n	80011ea <gpioVerifyPin+0x6a>
 80011a2:	79fb      	ldrb	r3, [r7, #7]
 80011a4:	2b04      	cmp	r3, #4
 80011a6:	d020      	beq.n	80011ea <gpioVerifyPin+0x6a>
        (PIN4  == pin) || (PIN5  == pin) || (PIN6  == pin) || (PIN7  == pin) ||
 80011a8:	79fb      	ldrb	r3, [r7, #7]
 80011aa:	2b05      	cmp	r3, #5
 80011ac:	d01d      	beq.n	80011ea <gpioVerifyPin+0x6a>
 80011ae:	79fb      	ldrb	r3, [r7, #7]
 80011b0:	2b06      	cmp	r3, #6
 80011b2:	d01a      	beq.n	80011ea <gpioVerifyPin+0x6a>
 80011b4:	79fb      	ldrb	r3, [r7, #7]
 80011b6:	2b07      	cmp	r3, #7
 80011b8:	d017      	beq.n	80011ea <gpioVerifyPin+0x6a>
 80011ba:	79fb      	ldrb	r3, [r7, #7]
 80011bc:	2b08      	cmp	r3, #8
 80011be:	d014      	beq.n	80011ea <gpioVerifyPin+0x6a>
        (PIN8  == pin) || (PIN9  == pin) || (PIN10 == pin) || (PIN11 == pin) ||
 80011c0:	79fb      	ldrb	r3, [r7, #7]
 80011c2:	2b09      	cmp	r3, #9
 80011c4:	d011      	beq.n	80011ea <gpioVerifyPin+0x6a>
 80011c6:	79fb      	ldrb	r3, [r7, #7]
 80011c8:	2b0a      	cmp	r3, #10
 80011ca:	d00e      	beq.n	80011ea <gpioVerifyPin+0x6a>
 80011cc:	79fb      	ldrb	r3, [r7, #7]
 80011ce:	2b0b      	cmp	r3, #11
 80011d0:	d00b      	beq.n	80011ea <gpioVerifyPin+0x6a>
 80011d2:	79fb      	ldrb	r3, [r7, #7]
 80011d4:	2b0c      	cmp	r3, #12
 80011d6:	d008      	beq.n	80011ea <gpioVerifyPin+0x6a>
        (PIN12 == pin) || (PIN13 == pin) || (PIN14 == pin) || (PIN15 == pin))
 80011d8:	79fb      	ldrb	r3, [r7, #7]
 80011da:	2b0d      	cmp	r3, #13
 80011dc:	d005      	beq.n	80011ea <gpioVerifyPin+0x6a>
 80011de:	79fb      	ldrb	r3, [r7, #7]
 80011e0:	2b0e      	cmp	r3, #14
 80011e2:	d002      	beq.n	80011ea <gpioVerifyPin+0x6a>
 80011e4:	79fb      	ldrb	r3, [r7, #7]
 80011e6:	2b0f      	cmp	r3, #15
 80011e8:	d101      	bne.n	80011ee <gpioVerifyPin+0x6e>
    {
        return true;
 80011ea:	2301      	movs	r3, #1
 80011ec:	e000      	b.n	80011f0 <gpioVerifyPin+0x70>
    }
    return false;
 80011ee:	2300      	movs	r3, #0
}
 80011f0:	4618      	mov	r0, r3
 80011f2:	370c      	adds	r7, #12
 80011f4:	46bd      	mov	sp, r7
 80011f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011fa:	4770      	bx	lr

080011fc <gpioVerifyPinMode>:
 * Function to verify the integrity of the **pinMode** parameter.
 *
 * @param pinMode : The operational mode in which the GPIO pin shall work.
 */
bool gpioVerifyPinMode(PIN_MODE_t pinMode)
{
 80011fc:	b480      	push	{r7}
 80011fe:	b083      	sub	sp, #12
 8001200:	af00      	add	r7, sp, #0
 8001202:	4603      	mov	r3, r0
 8001204:	71fb      	strb	r3, [r7, #7]
    if ((INPUT == pinMode) || (OUTPUT == pinMode) || (ALTFUNC == pinMode) || (ANALOG == pinMode))
 8001206:	79fb      	ldrb	r3, [r7, #7]
 8001208:	2b00      	cmp	r3, #0
 800120a:	d008      	beq.n	800121e <gpioVerifyPinMode+0x22>
 800120c:	79fb      	ldrb	r3, [r7, #7]
 800120e:	2b01      	cmp	r3, #1
 8001210:	d005      	beq.n	800121e <gpioVerifyPinMode+0x22>
 8001212:	79fb      	ldrb	r3, [r7, #7]
 8001214:	2b02      	cmp	r3, #2
 8001216:	d002      	beq.n	800121e <gpioVerifyPinMode+0x22>
 8001218:	79fb      	ldrb	r3, [r7, #7]
 800121a:	2b03      	cmp	r3, #3
 800121c:	d101      	bne.n	8001222 <gpioVerifyPinMode+0x26>
    {
        return true;
 800121e:	2301      	movs	r3, #1
 8001220:	e000      	b.n	8001224 <gpioVerifyPinMode+0x28>
    }

    return false;
 8001222:	2300      	movs	r3, #0
}
 8001224:	4618      	mov	r0, r3
 8001226:	370c      	adds	r7, #12
 8001228:	46bd      	mov	sp, r7
 800122a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800122e:	4770      	bx	lr

08001230 <gpioSelectPort>:
 *          <td rowspan="1">7...0</td>
 *      </tr>
 * </table>
 */
GPIO_RETURN_CODE_t gpioSelectPort(GPIO_TypeDef *port)
{
 8001230:	b580      	push	{r7, lr}
 8001232:	b082      	sub	sp, #8
 8001234:	af00      	add	r7, sp, #0
 8001236:	6078      	str	r0, [r7, #4]
    if (gpioVerifyPort(port) != true)
 8001238:	6878      	ldr	r0, [r7, #4]
 800123a:	f7ff ff6f 	bl	800111c <gpioVerifyPort>
 800123e:	4603      	mov	r3, r0
 8001240:	f083 0301 	eor.w	r3, r3, #1
 8001244:	b2db      	uxtb	r3, r3
 8001246:	2b00      	cmp	r3, #0
 8001248:	d002      	beq.n	8001250 <gpioSelectPort+0x20>
    {
        return GPIO_INVALID_PORT;
 800124a:	f04f 33ff 	mov.w	r3, #4294967295
 800124e:	e041      	b.n	80012d4 <gpioSelectPort+0xa4>
    }

    if (GPIOA == port)
 8001250:	687b      	ldr	r3, [r7, #4]
 8001252:	4a22      	ldr	r2, [pc, #136]	; (80012dc <gpioSelectPort+0xac>)
 8001254:	4293      	cmp	r3, r2
 8001256:	d106      	bne.n	8001266 <gpioSelectPort+0x36>
    {
        RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8001258:	4b21      	ldr	r3, [pc, #132]	; (80012e0 <gpioSelectPort+0xb0>)
 800125a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800125c:	4a20      	ldr	r2, [pc, #128]	; (80012e0 <gpioSelectPort+0xb0>)
 800125e:	f043 0301 	orr.w	r3, r3, #1
 8001262:	6313      	str	r3, [r2, #48]	; 0x30
 8001264:	e035      	b.n	80012d2 <gpioSelectPort+0xa2>
    }
    else if (GPIOB == port)
 8001266:	687b      	ldr	r3, [r7, #4]
 8001268:	4a1e      	ldr	r2, [pc, #120]	; (80012e4 <gpioSelectPort+0xb4>)
 800126a:	4293      	cmp	r3, r2
 800126c:	d106      	bne.n	800127c <gpioSelectPort+0x4c>
    {
        RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 800126e:	4b1c      	ldr	r3, [pc, #112]	; (80012e0 <gpioSelectPort+0xb0>)
 8001270:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001272:	4a1b      	ldr	r2, [pc, #108]	; (80012e0 <gpioSelectPort+0xb0>)
 8001274:	f043 0302 	orr.w	r3, r3, #2
 8001278:	6313      	str	r3, [r2, #48]	; 0x30
 800127a:	e02a      	b.n	80012d2 <gpioSelectPort+0xa2>
    }
    else if (GPIOC == port)
 800127c:	687b      	ldr	r3, [r7, #4]
 800127e:	4a1a      	ldr	r2, [pc, #104]	; (80012e8 <gpioSelectPort+0xb8>)
 8001280:	4293      	cmp	r3, r2
 8001282:	d106      	bne.n	8001292 <gpioSelectPort+0x62>
    {
        RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;
 8001284:	4b16      	ldr	r3, [pc, #88]	; (80012e0 <gpioSelectPort+0xb0>)
 8001286:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001288:	4a15      	ldr	r2, [pc, #84]	; (80012e0 <gpioSelectPort+0xb0>)
 800128a:	f043 0304 	orr.w	r3, r3, #4
 800128e:	6313      	str	r3, [r2, #48]	; 0x30
 8001290:	e01f      	b.n	80012d2 <gpioSelectPort+0xa2>
    }
    else if (GPIOD == port)
 8001292:	687b      	ldr	r3, [r7, #4]
 8001294:	4a15      	ldr	r2, [pc, #84]	; (80012ec <gpioSelectPort+0xbc>)
 8001296:	4293      	cmp	r3, r2
 8001298:	d106      	bne.n	80012a8 <gpioSelectPort+0x78>
    {
        RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 800129a:	4b11      	ldr	r3, [pc, #68]	; (80012e0 <gpioSelectPort+0xb0>)
 800129c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800129e:	4a10      	ldr	r2, [pc, #64]	; (80012e0 <gpioSelectPort+0xb0>)
 80012a0:	f043 0308 	orr.w	r3, r3, #8
 80012a4:	6313      	str	r3, [r2, #48]	; 0x30
 80012a6:	e014      	b.n	80012d2 <gpioSelectPort+0xa2>
    }
    else if (GPIOE == port)
 80012a8:	687b      	ldr	r3, [r7, #4]
 80012aa:	4a11      	ldr	r2, [pc, #68]	; (80012f0 <gpioSelectPort+0xc0>)
 80012ac:	4293      	cmp	r3, r2
 80012ae:	d106      	bne.n	80012be <gpioSelectPort+0x8e>
    {
        RCC->AHB1ENR |= RCC_AHB1ENR_GPIOEEN;
 80012b0:	4b0b      	ldr	r3, [pc, #44]	; (80012e0 <gpioSelectPort+0xb0>)
 80012b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012b4:	4a0a      	ldr	r2, [pc, #40]	; (80012e0 <gpioSelectPort+0xb0>)
 80012b6:	f043 0310 	orr.w	r3, r3, #16
 80012ba:	6313      	str	r3, [r2, #48]	; 0x30
 80012bc:	e009      	b.n	80012d2 <gpioSelectPort+0xa2>
    }
    else if (GPIOH == port)
 80012be:	687b      	ldr	r3, [r7, #4]
 80012c0:	4a0c      	ldr	r2, [pc, #48]	; (80012f4 <gpioSelectPort+0xc4>)
 80012c2:	4293      	cmp	r3, r2
 80012c4:	d105      	bne.n	80012d2 <gpioSelectPort+0xa2>
    {
        RCC->AHB1ENR |= RCC_AHB1ENR_GPIOHEN;
 80012c6:	4b06      	ldr	r3, [pc, #24]	; (80012e0 <gpioSelectPort+0xb0>)
 80012c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012ca:	4a05      	ldr	r2, [pc, #20]	; (80012e0 <gpioSelectPort+0xb0>)
 80012cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012d0:	6313      	str	r3, [r2, #48]	; 0x30
    }
    return GPIO_OK;
 80012d2:	2300      	movs	r3, #0
}
 80012d4:	4618      	mov	r0, r3
 80012d6:	3708      	adds	r7, #8
 80012d8:	46bd      	mov	sp, r7
 80012da:	bd80      	pop	{r7, pc}
 80012dc:	40020000 	.word	0x40020000
 80012e0:	40023800 	.word	0x40023800
 80012e4:	40020400 	.word	0x40020400
 80012e8:	40020800 	.word	0x40020800
 80012ec:	40020c00 	.word	0x40020c00
 80012f0:	40021000 	.word	0x40021000
 80012f4:	40021c00 	.word	0x40021c00

080012f8 <gpioSelectPinMode>:
 *          <td rowspan="1">Sets the pin function either to input, output, alternate function, or analog mode</td>
 *      </tr>
 * </table>
 */
GPIO_RETURN_CODE_t gpioSelectPinMode(GPIO_TypeDef *port, PIN_NUM_t pin, PIN_MODE_t mode)
{
 80012f8:	b580      	push	{r7, lr}
 80012fa:	b082      	sub	sp, #8
 80012fc:	af00      	add	r7, sp, #0
 80012fe:	6078      	str	r0, [r7, #4]
 8001300:	460b      	mov	r3, r1
 8001302:	70fb      	strb	r3, [r7, #3]
 8001304:	4613      	mov	r3, r2
 8001306:	70bb      	strb	r3, [r7, #2]
    if (gpioVerifyPort(port) != true)
 8001308:	6878      	ldr	r0, [r7, #4]
 800130a:	f7ff ff07 	bl	800111c <gpioVerifyPort>
 800130e:	4603      	mov	r3, r0
 8001310:	f083 0301 	eor.w	r3, r3, #1
 8001314:	b2db      	uxtb	r3, r3
 8001316:	2b00      	cmp	r3, #0
 8001318:	d002      	beq.n	8001320 <gpioSelectPinMode+0x28>
    {
        return GPIO_INVALID_PORT;
 800131a:	f04f 33ff 	mov.w	r3, #4294967295
 800131e:	e032      	b.n	8001386 <gpioSelectPinMode+0x8e>
    }
    if (gpioVerifyPin(pin) != true)
 8001320:	78fb      	ldrb	r3, [r7, #3]
 8001322:	4618      	mov	r0, r3
 8001324:	f7ff ff2c 	bl	8001180 <gpioVerifyPin>
 8001328:	4603      	mov	r3, r0
 800132a:	f083 0301 	eor.w	r3, r3, #1
 800132e:	b2db      	uxtb	r3, r3
 8001330:	2b00      	cmp	r3, #0
 8001332:	d002      	beq.n	800133a <gpioSelectPinMode+0x42>
    {
        return GPIO_INVALID_PIN;
 8001334:	f06f 0301 	mvn.w	r3, #1
 8001338:	e025      	b.n	8001386 <gpioSelectPinMode+0x8e>
    }
    if (gpioVerifyPinMode(mode) != true)
 800133a:	78bb      	ldrb	r3, [r7, #2]
 800133c:	4618      	mov	r0, r3
 800133e:	f7ff ff5d 	bl	80011fc <gpioVerifyPinMode>
 8001342:	4603      	mov	r3, r0
 8001344:	f083 0301 	eor.w	r3, r3, #1
 8001348:	b2db      	uxtb	r3, r3
 800134a:	2b00      	cmp	r3, #0
 800134c:	d002      	beq.n	8001354 <gpioSelectPinMode+0x5c>
    {
        return GPIO_INVALID_PINMODE;
 800134e:	f06f 0305 	mvn.w	r3, #5
 8001352:	e018      	b.n	8001386 <gpioSelectPinMode+0x8e>
    }

    // Set pin to default (INPUT)
	port->MODER &= ~(0b11 << (pin * 2));
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	78fa      	ldrb	r2, [r7, #3]
 800135a:	0052      	lsls	r2, r2, #1
 800135c:	2103      	movs	r1, #3
 800135e:	fa01 f202 	lsl.w	r2, r1, r2
 8001362:	43d2      	mvns	r2, r2
 8001364:	401a      	ands	r2, r3
 8001366:	687b      	ldr	r3, [r7, #4]
 8001368:	601a      	str	r2, [r3, #0]

	// If mode is not INPUT --> Select other setting
	if (INPUT != mode)
 800136a:	78bb      	ldrb	r3, [r7, #2]
 800136c:	2b00      	cmp	r3, #0
 800136e:	d009      	beq.n	8001384 <gpioSelectPinMode+0x8c>
	{
		port->MODER |= (mode << (pin * 2));
 8001370:	687b      	ldr	r3, [r7, #4]
 8001372:	681b      	ldr	r3, [r3, #0]
 8001374:	78b9      	ldrb	r1, [r7, #2]
 8001376:	78fa      	ldrb	r2, [r7, #3]
 8001378:	0052      	lsls	r2, r2, #1
 800137a:	fa01 f202 	lsl.w	r2, r1, r2
 800137e:	431a      	orrs	r2, r3
 8001380:	687b      	ldr	r3, [r7, #4]
 8001382:	601a      	str	r2, [r3, #0]
	}

	return GPIO_OK;
 8001384:	2300      	movs	r3, #0
}
 8001386:	4618      	mov	r0, r3
 8001388:	3708      	adds	r7, #8
 800138a:	46bd      	mov	sp, r7
 800138c:	bd80      	pop	{r7, pc}

0800138e <gpioSetPin>:
 *          <td rowspan="1">15...0</td>
 *      </tr>
 * </table>
 */
GPIO_RETURN_CODE_t gpioSetPin(GPIO_TypeDef *port, PIN_NUM_t pin)
{
 800138e:	b580      	push	{r7, lr}
 8001390:	b082      	sub	sp, #8
 8001392:	af00      	add	r7, sp, #0
 8001394:	6078      	str	r0, [r7, #4]
 8001396:	460b      	mov	r3, r1
 8001398:	70fb      	strb	r3, [r7, #3]
    if (gpioVerifyPort(port) != true)
 800139a:	6878      	ldr	r0, [r7, #4]
 800139c:	f7ff febe 	bl	800111c <gpioVerifyPort>
 80013a0:	4603      	mov	r3, r0
 80013a2:	f083 0301 	eor.w	r3, r3, #1
 80013a6:	b2db      	uxtb	r3, r3
 80013a8:	2b00      	cmp	r3, #0
 80013aa:	d002      	beq.n	80013b2 <gpioSetPin+0x24>
    {
        return GPIO_INVALID_PORT;
 80013ac:	f04f 33ff 	mov.w	r3, #4294967295
 80013b0:	e014      	b.n	80013dc <gpioSetPin+0x4e>
    }
    if (gpioVerifyPin(pin) != true)
 80013b2:	78fb      	ldrb	r3, [r7, #3]
 80013b4:	4618      	mov	r0, r3
 80013b6:	f7ff fee3 	bl	8001180 <gpioVerifyPin>
 80013ba:	4603      	mov	r3, r0
 80013bc:	f083 0301 	eor.w	r3, r3, #1
 80013c0:	b2db      	uxtb	r3, r3
 80013c2:	2b00      	cmp	r3, #0
 80013c4:	d002      	beq.n	80013cc <gpioSetPin+0x3e>
    {
        return GPIO_INVALID_PIN;
 80013c6:	f06f 0301 	mvn.w	r3, #1
 80013ca:	e007      	b.n	80013dc <gpioSetPin+0x4e>
    }

	port->BSRR = 1 << pin;
 80013cc:	78fb      	ldrb	r3, [r7, #3]
 80013ce:	2201      	movs	r2, #1
 80013d0:	fa02 f303 	lsl.w	r3, r2, r3
 80013d4:	461a      	mov	r2, r3
 80013d6:	687b      	ldr	r3, [r7, #4]
 80013d8:	619a      	str	r2, [r3, #24]

	return GPIO_OK;
 80013da:	2300      	movs	r3, #0
}
 80013dc:	4618      	mov	r0, r3
 80013de:	3708      	adds	r7, #8
 80013e0:	46bd      	mov	sp, r7
 80013e2:	bd80      	pop	{r7, pc}

080013e4 <gpioResetPin>:
 *          <td rowspan="1">31...16</td>
 *      </tr>
 * </table>
 */
GPIO_RETURN_CODE_t gpioResetPin(GPIO_TypeDef *port, PIN_NUM_t pin)
{
 80013e4:	b580      	push	{r7, lr}
 80013e6:	b082      	sub	sp, #8
 80013e8:	af00      	add	r7, sp, #0
 80013ea:	6078      	str	r0, [r7, #4]
 80013ec:	460b      	mov	r3, r1
 80013ee:	70fb      	strb	r3, [r7, #3]
    if (gpioVerifyPort(port) != true)
 80013f0:	6878      	ldr	r0, [r7, #4]
 80013f2:	f7ff fe93 	bl	800111c <gpioVerifyPort>
 80013f6:	4603      	mov	r3, r0
 80013f8:	f083 0301 	eor.w	r3, r3, #1
 80013fc:	b2db      	uxtb	r3, r3
 80013fe:	2b00      	cmp	r3, #0
 8001400:	d002      	beq.n	8001408 <gpioResetPin+0x24>
    {
        return GPIO_INVALID_PORT;
 8001402:	f04f 33ff 	mov.w	r3, #4294967295
 8001406:	e015      	b.n	8001434 <gpioResetPin+0x50>
    }
    if (gpioVerifyPin(pin) != true)
 8001408:	78fb      	ldrb	r3, [r7, #3]
 800140a:	4618      	mov	r0, r3
 800140c:	f7ff feb8 	bl	8001180 <gpioVerifyPin>
 8001410:	4603      	mov	r3, r0
 8001412:	f083 0301 	eor.w	r3, r3, #1
 8001416:	b2db      	uxtb	r3, r3
 8001418:	2b00      	cmp	r3, #0
 800141a:	d002      	beq.n	8001422 <gpioResetPin+0x3e>
    {
        return GPIO_INVALID_PIN;
 800141c:	f06f 0301 	mvn.w	r3, #1
 8001420:	e008      	b.n	8001434 <gpioResetPin+0x50>
    }

	port->BSRR = (1 << (pin + 16));
 8001422:	78fb      	ldrb	r3, [r7, #3]
 8001424:	3310      	adds	r3, #16
 8001426:	2201      	movs	r2, #1
 8001428:	fa02 f303 	lsl.w	r3, r2, r3
 800142c:	461a      	mov	r2, r3
 800142e:	687b      	ldr	r3, [r7, #4]
 8001430:	619a      	str	r2, [r3, #24]

	return GPIO_OK;
 8001432:	2300      	movs	r3, #0
}
 8001434:	4618      	mov	r0, r3
 8001436:	3708      	adds	r7, #8
 8001438:	46bd      	mov	sp, r7
 800143a:	bd80      	pop	{r7, pc}

0800143c <__errno>:
 800143c:	4b01      	ldr	r3, [pc, #4]	; (8001444 <__errno+0x8>)
 800143e:	6818      	ldr	r0, [r3, #0]
 8001440:	4770      	bx	lr
 8001442:	bf00      	nop
 8001444:	20000000 	.word	0x20000000

08001448 <__libc_init_array>:
 8001448:	b570      	push	{r4, r5, r6, lr}
 800144a:	4d0d      	ldr	r5, [pc, #52]	; (8001480 <__libc_init_array+0x38>)
 800144c:	4c0d      	ldr	r4, [pc, #52]	; (8001484 <__libc_init_array+0x3c>)
 800144e:	1b64      	subs	r4, r4, r5
 8001450:	10a4      	asrs	r4, r4, #2
 8001452:	2600      	movs	r6, #0
 8001454:	42a6      	cmp	r6, r4
 8001456:	d109      	bne.n	800146c <__libc_init_array+0x24>
 8001458:	4d0b      	ldr	r5, [pc, #44]	; (8001488 <__libc_init_array+0x40>)
 800145a:	4c0c      	ldr	r4, [pc, #48]	; (800148c <__libc_init_array+0x44>)
 800145c:	f002 fd38 	bl	8003ed0 <_init>
 8001460:	1b64      	subs	r4, r4, r5
 8001462:	10a4      	asrs	r4, r4, #2
 8001464:	2600      	movs	r6, #0
 8001466:	42a6      	cmp	r6, r4
 8001468:	d105      	bne.n	8001476 <__libc_init_array+0x2e>
 800146a:	bd70      	pop	{r4, r5, r6, pc}
 800146c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001470:	4798      	blx	r3
 8001472:	3601      	adds	r6, #1
 8001474:	e7ee      	b.n	8001454 <__libc_init_array+0xc>
 8001476:	f855 3b04 	ldr.w	r3, [r5], #4
 800147a:	4798      	blx	r3
 800147c:	3601      	adds	r6, #1
 800147e:	e7f2      	b.n	8001466 <__libc_init_array+0x1e>
 8001480:	080042c4 	.word	0x080042c4
 8001484:	080042c4 	.word	0x080042c4
 8001488:	080042c4 	.word	0x080042c4
 800148c:	080042c8 	.word	0x080042c8

08001490 <memset>:
 8001490:	4402      	add	r2, r0
 8001492:	4603      	mov	r3, r0
 8001494:	4293      	cmp	r3, r2
 8001496:	d100      	bne.n	800149a <memset+0xa>
 8001498:	4770      	bx	lr
 800149a:	f803 1b01 	strb.w	r1, [r3], #1
 800149e:	e7f9      	b.n	8001494 <memset+0x4>

080014a0 <__cvt>:
 80014a0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80014a4:	ec55 4b10 	vmov	r4, r5, d0
 80014a8:	2d00      	cmp	r5, #0
 80014aa:	460e      	mov	r6, r1
 80014ac:	4619      	mov	r1, r3
 80014ae:	462b      	mov	r3, r5
 80014b0:	bfbb      	ittet	lt
 80014b2:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 80014b6:	461d      	movlt	r5, r3
 80014b8:	2300      	movge	r3, #0
 80014ba:	232d      	movlt	r3, #45	; 0x2d
 80014bc:	700b      	strb	r3, [r1, #0]
 80014be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80014c0:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80014c4:	4691      	mov	r9, r2
 80014c6:	f023 0820 	bic.w	r8, r3, #32
 80014ca:	bfbc      	itt	lt
 80014cc:	4622      	movlt	r2, r4
 80014ce:	4614      	movlt	r4, r2
 80014d0:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80014d4:	d005      	beq.n	80014e2 <__cvt+0x42>
 80014d6:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80014da:	d100      	bne.n	80014de <__cvt+0x3e>
 80014dc:	3601      	adds	r6, #1
 80014de:	2102      	movs	r1, #2
 80014e0:	e000      	b.n	80014e4 <__cvt+0x44>
 80014e2:	2103      	movs	r1, #3
 80014e4:	ab03      	add	r3, sp, #12
 80014e6:	9301      	str	r3, [sp, #4]
 80014e8:	ab02      	add	r3, sp, #8
 80014ea:	9300      	str	r3, [sp, #0]
 80014ec:	ec45 4b10 	vmov	d0, r4, r5
 80014f0:	4653      	mov	r3, sl
 80014f2:	4632      	mov	r2, r6
 80014f4:	f000 fccc 	bl	8001e90 <_dtoa_r>
 80014f8:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80014fc:	4607      	mov	r7, r0
 80014fe:	d102      	bne.n	8001506 <__cvt+0x66>
 8001500:	f019 0f01 	tst.w	r9, #1
 8001504:	d022      	beq.n	800154c <__cvt+0xac>
 8001506:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800150a:	eb07 0906 	add.w	r9, r7, r6
 800150e:	d110      	bne.n	8001532 <__cvt+0x92>
 8001510:	783b      	ldrb	r3, [r7, #0]
 8001512:	2b30      	cmp	r3, #48	; 0x30
 8001514:	d10a      	bne.n	800152c <__cvt+0x8c>
 8001516:	2200      	movs	r2, #0
 8001518:	2300      	movs	r3, #0
 800151a:	4620      	mov	r0, r4
 800151c:	4629      	mov	r1, r5
 800151e:	f7ff fadb 	bl	8000ad8 <__aeabi_dcmpeq>
 8001522:	b918      	cbnz	r0, 800152c <__cvt+0x8c>
 8001524:	f1c6 0601 	rsb	r6, r6, #1
 8001528:	f8ca 6000 	str.w	r6, [sl]
 800152c:	f8da 3000 	ldr.w	r3, [sl]
 8001530:	4499      	add	r9, r3
 8001532:	2200      	movs	r2, #0
 8001534:	2300      	movs	r3, #0
 8001536:	4620      	mov	r0, r4
 8001538:	4629      	mov	r1, r5
 800153a:	f7ff facd 	bl	8000ad8 <__aeabi_dcmpeq>
 800153e:	b108      	cbz	r0, 8001544 <__cvt+0xa4>
 8001540:	f8cd 900c 	str.w	r9, [sp, #12]
 8001544:	2230      	movs	r2, #48	; 0x30
 8001546:	9b03      	ldr	r3, [sp, #12]
 8001548:	454b      	cmp	r3, r9
 800154a:	d307      	bcc.n	800155c <__cvt+0xbc>
 800154c:	9b03      	ldr	r3, [sp, #12]
 800154e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001550:	1bdb      	subs	r3, r3, r7
 8001552:	4638      	mov	r0, r7
 8001554:	6013      	str	r3, [r2, #0]
 8001556:	b004      	add	sp, #16
 8001558:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800155c:	1c59      	adds	r1, r3, #1
 800155e:	9103      	str	r1, [sp, #12]
 8001560:	701a      	strb	r2, [r3, #0]
 8001562:	e7f0      	b.n	8001546 <__cvt+0xa6>

08001564 <__exponent>:
 8001564:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001566:	4603      	mov	r3, r0
 8001568:	2900      	cmp	r1, #0
 800156a:	bfb8      	it	lt
 800156c:	4249      	neglt	r1, r1
 800156e:	f803 2b02 	strb.w	r2, [r3], #2
 8001572:	bfb4      	ite	lt
 8001574:	222d      	movlt	r2, #45	; 0x2d
 8001576:	222b      	movge	r2, #43	; 0x2b
 8001578:	2909      	cmp	r1, #9
 800157a:	7042      	strb	r2, [r0, #1]
 800157c:	dd2a      	ble.n	80015d4 <__exponent+0x70>
 800157e:	f10d 0407 	add.w	r4, sp, #7
 8001582:	46a4      	mov	ip, r4
 8001584:	270a      	movs	r7, #10
 8001586:	46a6      	mov	lr, r4
 8001588:	460a      	mov	r2, r1
 800158a:	fb91 f6f7 	sdiv	r6, r1, r7
 800158e:	fb07 1516 	mls	r5, r7, r6, r1
 8001592:	3530      	adds	r5, #48	; 0x30
 8001594:	2a63      	cmp	r2, #99	; 0x63
 8001596:	f104 34ff 	add.w	r4, r4, #4294967295
 800159a:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800159e:	4631      	mov	r1, r6
 80015a0:	dcf1      	bgt.n	8001586 <__exponent+0x22>
 80015a2:	3130      	adds	r1, #48	; 0x30
 80015a4:	f1ae 0502 	sub.w	r5, lr, #2
 80015a8:	f804 1c01 	strb.w	r1, [r4, #-1]
 80015ac:	1c44      	adds	r4, r0, #1
 80015ae:	4629      	mov	r1, r5
 80015b0:	4561      	cmp	r1, ip
 80015b2:	d30a      	bcc.n	80015ca <__exponent+0x66>
 80015b4:	f10d 0209 	add.w	r2, sp, #9
 80015b8:	eba2 020e 	sub.w	r2, r2, lr
 80015bc:	4565      	cmp	r5, ip
 80015be:	bf88      	it	hi
 80015c0:	2200      	movhi	r2, #0
 80015c2:	4413      	add	r3, r2
 80015c4:	1a18      	subs	r0, r3, r0
 80015c6:	b003      	add	sp, #12
 80015c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015ca:	f811 2b01 	ldrb.w	r2, [r1], #1
 80015ce:	f804 2f01 	strb.w	r2, [r4, #1]!
 80015d2:	e7ed      	b.n	80015b0 <__exponent+0x4c>
 80015d4:	2330      	movs	r3, #48	; 0x30
 80015d6:	3130      	adds	r1, #48	; 0x30
 80015d8:	7083      	strb	r3, [r0, #2]
 80015da:	70c1      	strb	r1, [r0, #3]
 80015dc:	1d03      	adds	r3, r0, #4
 80015de:	e7f1      	b.n	80015c4 <__exponent+0x60>

080015e0 <_printf_float>:
 80015e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80015e4:	ed2d 8b02 	vpush	{d8}
 80015e8:	b08d      	sub	sp, #52	; 0x34
 80015ea:	460c      	mov	r4, r1
 80015ec:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80015f0:	4616      	mov	r6, r2
 80015f2:	461f      	mov	r7, r3
 80015f4:	4605      	mov	r5, r0
 80015f6:	f001 fa39 	bl	8002a6c <_localeconv_r>
 80015fa:	f8d0 a000 	ldr.w	sl, [r0]
 80015fe:	4650      	mov	r0, sl
 8001600:	f7fe fdee 	bl	80001e0 <strlen>
 8001604:	2300      	movs	r3, #0
 8001606:	930a      	str	r3, [sp, #40]	; 0x28
 8001608:	6823      	ldr	r3, [r4, #0]
 800160a:	9305      	str	r3, [sp, #20]
 800160c:	f8d8 3000 	ldr.w	r3, [r8]
 8001610:	f894 b018 	ldrb.w	fp, [r4, #24]
 8001614:	3307      	adds	r3, #7
 8001616:	f023 0307 	bic.w	r3, r3, #7
 800161a:	f103 0208 	add.w	r2, r3, #8
 800161e:	f8c8 2000 	str.w	r2, [r8]
 8001622:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001626:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800162a:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800162e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001632:	9307      	str	r3, [sp, #28]
 8001634:	f8cd 8018 	str.w	r8, [sp, #24]
 8001638:	ee08 0a10 	vmov	s16, r0
 800163c:	4b9f      	ldr	r3, [pc, #636]	; (80018bc <_printf_float+0x2dc>)
 800163e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001642:	f04f 32ff 	mov.w	r2, #4294967295
 8001646:	f7ff fa79 	bl	8000b3c <__aeabi_dcmpun>
 800164a:	bb88      	cbnz	r0, 80016b0 <_printf_float+0xd0>
 800164c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001650:	4b9a      	ldr	r3, [pc, #616]	; (80018bc <_printf_float+0x2dc>)
 8001652:	f04f 32ff 	mov.w	r2, #4294967295
 8001656:	f7ff fa53 	bl	8000b00 <__aeabi_dcmple>
 800165a:	bb48      	cbnz	r0, 80016b0 <_printf_float+0xd0>
 800165c:	2200      	movs	r2, #0
 800165e:	2300      	movs	r3, #0
 8001660:	4640      	mov	r0, r8
 8001662:	4649      	mov	r1, r9
 8001664:	f7ff fa42 	bl	8000aec <__aeabi_dcmplt>
 8001668:	b110      	cbz	r0, 8001670 <_printf_float+0x90>
 800166a:	232d      	movs	r3, #45	; 0x2d
 800166c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001670:	4b93      	ldr	r3, [pc, #588]	; (80018c0 <_printf_float+0x2e0>)
 8001672:	4894      	ldr	r0, [pc, #592]	; (80018c4 <_printf_float+0x2e4>)
 8001674:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8001678:	bf94      	ite	ls
 800167a:	4698      	movls	r8, r3
 800167c:	4680      	movhi	r8, r0
 800167e:	2303      	movs	r3, #3
 8001680:	6123      	str	r3, [r4, #16]
 8001682:	9b05      	ldr	r3, [sp, #20]
 8001684:	f023 0204 	bic.w	r2, r3, #4
 8001688:	6022      	str	r2, [r4, #0]
 800168a:	f04f 0900 	mov.w	r9, #0
 800168e:	9700      	str	r7, [sp, #0]
 8001690:	4633      	mov	r3, r6
 8001692:	aa0b      	add	r2, sp, #44	; 0x2c
 8001694:	4621      	mov	r1, r4
 8001696:	4628      	mov	r0, r5
 8001698:	f000 f9d8 	bl	8001a4c <_printf_common>
 800169c:	3001      	adds	r0, #1
 800169e:	f040 8090 	bne.w	80017c2 <_printf_float+0x1e2>
 80016a2:	f04f 30ff 	mov.w	r0, #4294967295
 80016a6:	b00d      	add	sp, #52	; 0x34
 80016a8:	ecbd 8b02 	vpop	{d8}
 80016ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80016b0:	4642      	mov	r2, r8
 80016b2:	464b      	mov	r3, r9
 80016b4:	4640      	mov	r0, r8
 80016b6:	4649      	mov	r1, r9
 80016b8:	f7ff fa40 	bl	8000b3c <__aeabi_dcmpun>
 80016bc:	b140      	cbz	r0, 80016d0 <_printf_float+0xf0>
 80016be:	464b      	mov	r3, r9
 80016c0:	2b00      	cmp	r3, #0
 80016c2:	bfbc      	itt	lt
 80016c4:	232d      	movlt	r3, #45	; 0x2d
 80016c6:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80016ca:	487f      	ldr	r0, [pc, #508]	; (80018c8 <_printf_float+0x2e8>)
 80016cc:	4b7f      	ldr	r3, [pc, #508]	; (80018cc <_printf_float+0x2ec>)
 80016ce:	e7d1      	b.n	8001674 <_printf_float+0x94>
 80016d0:	6863      	ldr	r3, [r4, #4]
 80016d2:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 80016d6:	9206      	str	r2, [sp, #24]
 80016d8:	1c5a      	adds	r2, r3, #1
 80016da:	d13f      	bne.n	800175c <_printf_float+0x17c>
 80016dc:	2306      	movs	r3, #6
 80016de:	6063      	str	r3, [r4, #4]
 80016e0:	9b05      	ldr	r3, [sp, #20]
 80016e2:	6861      	ldr	r1, [r4, #4]
 80016e4:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80016e8:	2300      	movs	r3, #0
 80016ea:	9303      	str	r3, [sp, #12]
 80016ec:	ab0a      	add	r3, sp, #40	; 0x28
 80016ee:	e9cd b301 	strd	fp, r3, [sp, #4]
 80016f2:	ab09      	add	r3, sp, #36	; 0x24
 80016f4:	ec49 8b10 	vmov	d0, r8, r9
 80016f8:	9300      	str	r3, [sp, #0]
 80016fa:	6022      	str	r2, [r4, #0]
 80016fc:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8001700:	4628      	mov	r0, r5
 8001702:	f7ff fecd 	bl	80014a0 <__cvt>
 8001706:	9b06      	ldr	r3, [sp, #24]
 8001708:	9909      	ldr	r1, [sp, #36]	; 0x24
 800170a:	2b47      	cmp	r3, #71	; 0x47
 800170c:	4680      	mov	r8, r0
 800170e:	d108      	bne.n	8001722 <_printf_float+0x142>
 8001710:	1cc8      	adds	r0, r1, #3
 8001712:	db02      	blt.n	800171a <_printf_float+0x13a>
 8001714:	6863      	ldr	r3, [r4, #4]
 8001716:	4299      	cmp	r1, r3
 8001718:	dd41      	ble.n	800179e <_printf_float+0x1be>
 800171a:	f1ab 0b02 	sub.w	fp, fp, #2
 800171e:	fa5f fb8b 	uxtb.w	fp, fp
 8001722:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001726:	d820      	bhi.n	800176a <_printf_float+0x18a>
 8001728:	3901      	subs	r1, #1
 800172a:	465a      	mov	r2, fp
 800172c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001730:	9109      	str	r1, [sp, #36]	; 0x24
 8001732:	f7ff ff17 	bl	8001564 <__exponent>
 8001736:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001738:	1813      	adds	r3, r2, r0
 800173a:	2a01      	cmp	r2, #1
 800173c:	4681      	mov	r9, r0
 800173e:	6123      	str	r3, [r4, #16]
 8001740:	dc02      	bgt.n	8001748 <_printf_float+0x168>
 8001742:	6822      	ldr	r2, [r4, #0]
 8001744:	07d2      	lsls	r2, r2, #31
 8001746:	d501      	bpl.n	800174c <_printf_float+0x16c>
 8001748:	3301      	adds	r3, #1
 800174a:	6123      	str	r3, [r4, #16]
 800174c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8001750:	2b00      	cmp	r3, #0
 8001752:	d09c      	beq.n	800168e <_printf_float+0xae>
 8001754:	232d      	movs	r3, #45	; 0x2d
 8001756:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800175a:	e798      	b.n	800168e <_printf_float+0xae>
 800175c:	9a06      	ldr	r2, [sp, #24]
 800175e:	2a47      	cmp	r2, #71	; 0x47
 8001760:	d1be      	bne.n	80016e0 <_printf_float+0x100>
 8001762:	2b00      	cmp	r3, #0
 8001764:	d1bc      	bne.n	80016e0 <_printf_float+0x100>
 8001766:	2301      	movs	r3, #1
 8001768:	e7b9      	b.n	80016de <_printf_float+0xfe>
 800176a:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800176e:	d118      	bne.n	80017a2 <_printf_float+0x1c2>
 8001770:	2900      	cmp	r1, #0
 8001772:	6863      	ldr	r3, [r4, #4]
 8001774:	dd0b      	ble.n	800178e <_printf_float+0x1ae>
 8001776:	6121      	str	r1, [r4, #16]
 8001778:	b913      	cbnz	r3, 8001780 <_printf_float+0x1a0>
 800177a:	6822      	ldr	r2, [r4, #0]
 800177c:	07d0      	lsls	r0, r2, #31
 800177e:	d502      	bpl.n	8001786 <_printf_float+0x1a6>
 8001780:	3301      	adds	r3, #1
 8001782:	440b      	add	r3, r1
 8001784:	6123      	str	r3, [r4, #16]
 8001786:	65a1      	str	r1, [r4, #88]	; 0x58
 8001788:	f04f 0900 	mov.w	r9, #0
 800178c:	e7de      	b.n	800174c <_printf_float+0x16c>
 800178e:	b913      	cbnz	r3, 8001796 <_printf_float+0x1b6>
 8001790:	6822      	ldr	r2, [r4, #0]
 8001792:	07d2      	lsls	r2, r2, #31
 8001794:	d501      	bpl.n	800179a <_printf_float+0x1ba>
 8001796:	3302      	adds	r3, #2
 8001798:	e7f4      	b.n	8001784 <_printf_float+0x1a4>
 800179a:	2301      	movs	r3, #1
 800179c:	e7f2      	b.n	8001784 <_printf_float+0x1a4>
 800179e:	f04f 0b67 	mov.w	fp, #103	; 0x67
 80017a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80017a4:	4299      	cmp	r1, r3
 80017a6:	db05      	blt.n	80017b4 <_printf_float+0x1d4>
 80017a8:	6823      	ldr	r3, [r4, #0]
 80017aa:	6121      	str	r1, [r4, #16]
 80017ac:	07d8      	lsls	r0, r3, #31
 80017ae:	d5ea      	bpl.n	8001786 <_printf_float+0x1a6>
 80017b0:	1c4b      	adds	r3, r1, #1
 80017b2:	e7e7      	b.n	8001784 <_printf_float+0x1a4>
 80017b4:	2900      	cmp	r1, #0
 80017b6:	bfd4      	ite	le
 80017b8:	f1c1 0202 	rsble	r2, r1, #2
 80017bc:	2201      	movgt	r2, #1
 80017be:	4413      	add	r3, r2
 80017c0:	e7e0      	b.n	8001784 <_printf_float+0x1a4>
 80017c2:	6823      	ldr	r3, [r4, #0]
 80017c4:	055a      	lsls	r2, r3, #21
 80017c6:	d407      	bmi.n	80017d8 <_printf_float+0x1f8>
 80017c8:	6923      	ldr	r3, [r4, #16]
 80017ca:	4642      	mov	r2, r8
 80017cc:	4631      	mov	r1, r6
 80017ce:	4628      	mov	r0, r5
 80017d0:	47b8      	blx	r7
 80017d2:	3001      	adds	r0, #1
 80017d4:	d12c      	bne.n	8001830 <_printf_float+0x250>
 80017d6:	e764      	b.n	80016a2 <_printf_float+0xc2>
 80017d8:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80017dc:	f240 80e0 	bls.w	80019a0 <_printf_float+0x3c0>
 80017e0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80017e4:	2200      	movs	r2, #0
 80017e6:	2300      	movs	r3, #0
 80017e8:	f7ff f976 	bl	8000ad8 <__aeabi_dcmpeq>
 80017ec:	2800      	cmp	r0, #0
 80017ee:	d034      	beq.n	800185a <_printf_float+0x27a>
 80017f0:	4a37      	ldr	r2, [pc, #220]	; (80018d0 <_printf_float+0x2f0>)
 80017f2:	2301      	movs	r3, #1
 80017f4:	4631      	mov	r1, r6
 80017f6:	4628      	mov	r0, r5
 80017f8:	47b8      	blx	r7
 80017fa:	3001      	adds	r0, #1
 80017fc:	f43f af51 	beq.w	80016a2 <_printf_float+0xc2>
 8001800:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001804:	429a      	cmp	r2, r3
 8001806:	db02      	blt.n	800180e <_printf_float+0x22e>
 8001808:	6823      	ldr	r3, [r4, #0]
 800180a:	07d8      	lsls	r0, r3, #31
 800180c:	d510      	bpl.n	8001830 <_printf_float+0x250>
 800180e:	ee18 3a10 	vmov	r3, s16
 8001812:	4652      	mov	r2, sl
 8001814:	4631      	mov	r1, r6
 8001816:	4628      	mov	r0, r5
 8001818:	47b8      	blx	r7
 800181a:	3001      	adds	r0, #1
 800181c:	f43f af41 	beq.w	80016a2 <_printf_float+0xc2>
 8001820:	f04f 0800 	mov.w	r8, #0
 8001824:	f104 091a 	add.w	r9, r4, #26
 8001828:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800182a:	3b01      	subs	r3, #1
 800182c:	4543      	cmp	r3, r8
 800182e:	dc09      	bgt.n	8001844 <_printf_float+0x264>
 8001830:	6823      	ldr	r3, [r4, #0]
 8001832:	079b      	lsls	r3, r3, #30
 8001834:	f100 8105 	bmi.w	8001a42 <_printf_float+0x462>
 8001838:	68e0      	ldr	r0, [r4, #12]
 800183a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800183c:	4298      	cmp	r0, r3
 800183e:	bfb8      	it	lt
 8001840:	4618      	movlt	r0, r3
 8001842:	e730      	b.n	80016a6 <_printf_float+0xc6>
 8001844:	2301      	movs	r3, #1
 8001846:	464a      	mov	r2, r9
 8001848:	4631      	mov	r1, r6
 800184a:	4628      	mov	r0, r5
 800184c:	47b8      	blx	r7
 800184e:	3001      	adds	r0, #1
 8001850:	f43f af27 	beq.w	80016a2 <_printf_float+0xc2>
 8001854:	f108 0801 	add.w	r8, r8, #1
 8001858:	e7e6      	b.n	8001828 <_printf_float+0x248>
 800185a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800185c:	2b00      	cmp	r3, #0
 800185e:	dc39      	bgt.n	80018d4 <_printf_float+0x2f4>
 8001860:	4a1b      	ldr	r2, [pc, #108]	; (80018d0 <_printf_float+0x2f0>)
 8001862:	2301      	movs	r3, #1
 8001864:	4631      	mov	r1, r6
 8001866:	4628      	mov	r0, r5
 8001868:	47b8      	blx	r7
 800186a:	3001      	adds	r0, #1
 800186c:	f43f af19 	beq.w	80016a2 <_printf_float+0xc2>
 8001870:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001874:	4313      	orrs	r3, r2
 8001876:	d102      	bne.n	800187e <_printf_float+0x29e>
 8001878:	6823      	ldr	r3, [r4, #0]
 800187a:	07d9      	lsls	r1, r3, #31
 800187c:	d5d8      	bpl.n	8001830 <_printf_float+0x250>
 800187e:	ee18 3a10 	vmov	r3, s16
 8001882:	4652      	mov	r2, sl
 8001884:	4631      	mov	r1, r6
 8001886:	4628      	mov	r0, r5
 8001888:	47b8      	blx	r7
 800188a:	3001      	adds	r0, #1
 800188c:	f43f af09 	beq.w	80016a2 <_printf_float+0xc2>
 8001890:	f04f 0900 	mov.w	r9, #0
 8001894:	f104 0a1a 	add.w	sl, r4, #26
 8001898:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800189a:	425b      	negs	r3, r3
 800189c:	454b      	cmp	r3, r9
 800189e:	dc01      	bgt.n	80018a4 <_printf_float+0x2c4>
 80018a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80018a2:	e792      	b.n	80017ca <_printf_float+0x1ea>
 80018a4:	2301      	movs	r3, #1
 80018a6:	4652      	mov	r2, sl
 80018a8:	4631      	mov	r1, r6
 80018aa:	4628      	mov	r0, r5
 80018ac:	47b8      	blx	r7
 80018ae:	3001      	adds	r0, #1
 80018b0:	f43f aef7 	beq.w	80016a2 <_printf_float+0xc2>
 80018b4:	f109 0901 	add.w	r9, r9, #1
 80018b8:	e7ee      	b.n	8001898 <_printf_float+0x2b8>
 80018ba:	bf00      	nop
 80018bc:	7fefffff 	.word	0x7fefffff
 80018c0:	08003eec 	.word	0x08003eec
 80018c4:	08003ef0 	.word	0x08003ef0
 80018c8:	08003ef8 	.word	0x08003ef8
 80018cc:	08003ef4 	.word	0x08003ef4
 80018d0:	08003efc 	.word	0x08003efc
 80018d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80018d6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80018d8:	429a      	cmp	r2, r3
 80018da:	bfa8      	it	ge
 80018dc:	461a      	movge	r2, r3
 80018de:	2a00      	cmp	r2, #0
 80018e0:	4691      	mov	r9, r2
 80018e2:	dc37      	bgt.n	8001954 <_printf_float+0x374>
 80018e4:	f04f 0b00 	mov.w	fp, #0
 80018e8:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80018ec:	f104 021a 	add.w	r2, r4, #26
 80018f0:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80018f2:	9305      	str	r3, [sp, #20]
 80018f4:	eba3 0309 	sub.w	r3, r3, r9
 80018f8:	455b      	cmp	r3, fp
 80018fa:	dc33      	bgt.n	8001964 <_printf_float+0x384>
 80018fc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001900:	429a      	cmp	r2, r3
 8001902:	db3b      	blt.n	800197c <_printf_float+0x39c>
 8001904:	6823      	ldr	r3, [r4, #0]
 8001906:	07da      	lsls	r2, r3, #31
 8001908:	d438      	bmi.n	800197c <_printf_float+0x39c>
 800190a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800190c:	9a05      	ldr	r2, [sp, #20]
 800190e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001910:	1a9a      	subs	r2, r3, r2
 8001912:	eba3 0901 	sub.w	r9, r3, r1
 8001916:	4591      	cmp	r9, r2
 8001918:	bfa8      	it	ge
 800191a:	4691      	movge	r9, r2
 800191c:	f1b9 0f00 	cmp.w	r9, #0
 8001920:	dc35      	bgt.n	800198e <_printf_float+0x3ae>
 8001922:	f04f 0800 	mov.w	r8, #0
 8001926:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800192a:	f104 0a1a 	add.w	sl, r4, #26
 800192e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001932:	1a9b      	subs	r3, r3, r2
 8001934:	eba3 0309 	sub.w	r3, r3, r9
 8001938:	4543      	cmp	r3, r8
 800193a:	f77f af79 	ble.w	8001830 <_printf_float+0x250>
 800193e:	2301      	movs	r3, #1
 8001940:	4652      	mov	r2, sl
 8001942:	4631      	mov	r1, r6
 8001944:	4628      	mov	r0, r5
 8001946:	47b8      	blx	r7
 8001948:	3001      	adds	r0, #1
 800194a:	f43f aeaa 	beq.w	80016a2 <_printf_float+0xc2>
 800194e:	f108 0801 	add.w	r8, r8, #1
 8001952:	e7ec      	b.n	800192e <_printf_float+0x34e>
 8001954:	4613      	mov	r3, r2
 8001956:	4631      	mov	r1, r6
 8001958:	4642      	mov	r2, r8
 800195a:	4628      	mov	r0, r5
 800195c:	47b8      	blx	r7
 800195e:	3001      	adds	r0, #1
 8001960:	d1c0      	bne.n	80018e4 <_printf_float+0x304>
 8001962:	e69e      	b.n	80016a2 <_printf_float+0xc2>
 8001964:	2301      	movs	r3, #1
 8001966:	4631      	mov	r1, r6
 8001968:	4628      	mov	r0, r5
 800196a:	9205      	str	r2, [sp, #20]
 800196c:	47b8      	blx	r7
 800196e:	3001      	adds	r0, #1
 8001970:	f43f ae97 	beq.w	80016a2 <_printf_float+0xc2>
 8001974:	9a05      	ldr	r2, [sp, #20]
 8001976:	f10b 0b01 	add.w	fp, fp, #1
 800197a:	e7b9      	b.n	80018f0 <_printf_float+0x310>
 800197c:	ee18 3a10 	vmov	r3, s16
 8001980:	4652      	mov	r2, sl
 8001982:	4631      	mov	r1, r6
 8001984:	4628      	mov	r0, r5
 8001986:	47b8      	blx	r7
 8001988:	3001      	adds	r0, #1
 800198a:	d1be      	bne.n	800190a <_printf_float+0x32a>
 800198c:	e689      	b.n	80016a2 <_printf_float+0xc2>
 800198e:	9a05      	ldr	r2, [sp, #20]
 8001990:	464b      	mov	r3, r9
 8001992:	4442      	add	r2, r8
 8001994:	4631      	mov	r1, r6
 8001996:	4628      	mov	r0, r5
 8001998:	47b8      	blx	r7
 800199a:	3001      	adds	r0, #1
 800199c:	d1c1      	bne.n	8001922 <_printf_float+0x342>
 800199e:	e680      	b.n	80016a2 <_printf_float+0xc2>
 80019a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80019a2:	2a01      	cmp	r2, #1
 80019a4:	dc01      	bgt.n	80019aa <_printf_float+0x3ca>
 80019a6:	07db      	lsls	r3, r3, #31
 80019a8:	d538      	bpl.n	8001a1c <_printf_float+0x43c>
 80019aa:	2301      	movs	r3, #1
 80019ac:	4642      	mov	r2, r8
 80019ae:	4631      	mov	r1, r6
 80019b0:	4628      	mov	r0, r5
 80019b2:	47b8      	blx	r7
 80019b4:	3001      	adds	r0, #1
 80019b6:	f43f ae74 	beq.w	80016a2 <_printf_float+0xc2>
 80019ba:	ee18 3a10 	vmov	r3, s16
 80019be:	4652      	mov	r2, sl
 80019c0:	4631      	mov	r1, r6
 80019c2:	4628      	mov	r0, r5
 80019c4:	47b8      	blx	r7
 80019c6:	3001      	adds	r0, #1
 80019c8:	f43f ae6b 	beq.w	80016a2 <_printf_float+0xc2>
 80019cc:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80019d0:	2200      	movs	r2, #0
 80019d2:	2300      	movs	r3, #0
 80019d4:	f7ff f880 	bl	8000ad8 <__aeabi_dcmpeq>
 80019d8:	b9d8      	cbnz	r0, 8001a12 <_printf_float+0x432>
 80019da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80019dc:	f108 0201 	add.w	r2, r8, #1
 80019e0:	3b01      	subs	r3, #1
 80019e2:	4631      	mov	r1, r6
 80019e4:	4628      	mov	r0, r5
 80019e6:	47b8      	blx	r7
 80019e8:	3001      	adds	r0, #1
 80019ea:	d10e      	bne.n	8001a0a <_printf_float+0x42a>
 80019ec:	e659      	b.n	80016a2 <_printf_float+0xc2>
 80019ee:	2301      	movs	r3, #1
 80019f0:	4652      	mov	r2, sl
 80019f2:	4631      	mov	r1, r6
 80019f4:	4628      	mov	r0, r5
 80019f6:	47b8      	blx	r7
 80019f8:	3001      	adds	r0, #1
 80019fa:	f43f ae52 	beq.w	80016a2 <_printf_float+0xc2>
 80019fe:	f108 0801 	add.w	r8, r8, #1
 8001a02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001a04:	3b01      	subs	r3, #1
 8001a06:	4543      	cmp	r3, r8
 8001a08:	dcf1      	bgt.n	80019ee <_printf_float+0x40e>
 8001a0a:	464b      	mov	r3, r9
 8001a0c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001a10:	e6dc      	b.n	80017cc <_printf_float+0x1ec>
 8001a12:	f04f 0800 	mov.w	r8, #0
 8001a16:	f104 0a1a 	add.w	sl, r4, #26
 8001a1a:	e7f2      	b.n	8001a02 <_printf_float+0x422>
 8001a1c:	2301      	movs	r3, #1
 8001a1e:	4642      	mov	r2, r8
 8001a20:	e7df      	b.n	80019e2 <_printf_float+0x402>
 8001a22:	2301      	movs	r3, #1
 8001a24:	464a      	mov	r2, r9
 8001a26:	4631      	mov	r1, r6
 8001a28:	4628      	mov	r0, r5
 8001a2a:	47b8      	blx	r7
 8001a2c:	3001      	adds	r0, #1
 8001a2e:	f43f ae38 	beq.w	80016a2 <_printf_float+0xc2>
 8001a32:	f108 0801 	add.w	r8, r8, #1
 8001a36:	68e3      	ldr	r3, [r4, #12]
 8001a38:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001a3a:	1a5b      	subs	r3, r3, r1
 8001a3c:	4543      	cmp	r3, r8
 8001a3e:	dcf0      	bgt.n	8001a22 <_printf_float+0x442>
 8001a40:	e6fa      	b.n	8001838 <_printf_float+0x258>
 8001a42:	f04f 0800 	mov.w	r8, #0
 8001a46:	f104 0919 	add.w	r9, r4, #25
 8001a4a:	e7f4      	b.n	8001a36 <_printf_float+0x456>

08001a4c <_printf_common>:
 8001a4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001a50:	4616      	mov	r6, r2
 8001a52:	4699      	mov	r9, r3
 8001a54:	688a      	ldr	r2, [r1, #8]
 8001a56:	690b      	ldr	r3, [r1, #16]
 8001a58:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001a5c:	4293      	cmp	r3, r2
 8001a5e:	bfb8      	it	lt
 8001a60:	4613      	movlt	r3, r2
 8001a62:	6033      	str	r3, [r6, #0]
 8001a64:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001a68:	4607      	mov	r7, r0
 8001a6a:	460c      	mov	r4, r1
 8001a6c:	b10a      	cbz	r2, 8001a72 <_printf_common+0x26>
 8001a6e:	3301      	adds	r3, #1
 8001a70:	6033      	str	r3, [r6, #0]
 8001a72:	6823      	ldr	r3, [r4, #0]
 8001a74:	0699      	lsls	r1, r3, #26
 8001a76:	bf42      	ittt	mi
 8001a78:	6833      	ldrmi	r3, [r6, #0]
 8001a7a:	3302      	addmi	r3, #2
 8001a7c:	6033      	strmi	r3, [r6, #0]
 8001a7e:	6825      	ldr	r5, [r4, #0]
 8001a80:	f015 0506 	ands.w	r5, r5, #6
 8001a84:	d106      	bne.n	8001a94 <_printf_common+0x48>
 8001a86:	f104 0a19 	add.w	sl, r4, #25
 8001a8a:	68e3      	ldr	r3, [r4, #12]
 8001a8c:	6832      	ldr	r2, [r6, #0]
 8001a8e:	1a9b      	subs	r3, r3, r2
 8001a90:	42ab      	cmp	r3, r5
 8001a92:	dc26      	bgt.n	8001ae2 <_printf_common+0x96>
 8001a94:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001a98:	1e13      	subs	r3, r2, #0
 8001a9a:	6822      	ldr	r2, [r4, #0]
 8001a9c:	bf18      	it	ne
 8001a9e:	2301      	movne	r3, #1
 8001aa0:	0692      	lsls	r2, r2, #26
 8001aa2:	d42b      	bmi.n	8001afc <_printf_common+0xb0>
 8001aa4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001aa8:	4649      	mov	r1, r9
 8001aaa:	4638      	mov	r0, r7
 8001aac:	47c0      	blx	r8
 8001aae:	3001      	adds	r0, #1
 8001ab0:	d01e      	beq.n	8001af0 <_printf_common+0xa4>
 8001ab2:	6823      	ldr	r3, [r4, #0]
 8001ab4:	68e5      	ldr	r5, [r4, #12]
 8001ab6:	6832      	ldr	r2, [r6, #0]
 8001ab8:	f003 0306 	and.w	r3, r3, #6
 8001abc:	2b04      	cmp	r3, #4
 8001abe:	bf08      	it	eq
 8001ac0:	1aad      	subeq	r5, r5, r2
 8001ac2:	68a3      	ldr	r3, [r4, #8]
 8001ac4:	6922      	ldr	r2, [r4, #16]
 8001ac6:	bf0c      	ite	eq
 8001ac8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001acc:	2500      	movne	r5, #0
 8001ace:	4293      	cmp	r3, r2
 8001ad0:	bfc4      	itt	gt
 8001ad2:	1a9b      	subgt	r3, r3, r2
 8001ad4:	18ed      	addgt	r5, r5, r3
 8001ad6:	2600      	movs	r6, #0
 8001ad8:	341a      	adds	r4, #26
 8001ada:	42b5      	cmp	r5, r6
 8001adc:	d11a      	bne.n	8001b14 <_printf_common+0xc8>
 8001ade:	2000      	movs	r0, #0
 8001ae0:	e008      	b.n	8001af4 <_printf_common+0xa8>
 8001ae2:	2301      	movs	r3, #1
 8001ae4:	4652      	mov	r2, sl
 8001ae6:	4649      	mov	r1, r9
 8001ae8:	4638      	mov	r0, r7
 8001aea:	47c0      	blx	r8
 8001aec:	3001      	adds	r0, #1
 8001aee:	d103      	bne.n	8001af8 <_printf_common+0xac>
 8001af0:	f04f 30ff 	mov.w	r0, #4294967295
 8001af4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001af8:	3501      	adds	r5, #1
 8001afa:	e7c6      	b.n	8001a8a <_printf_common+0x3e>
 8001afc:	18e1      	adds	r1, r4, r3
 8001afe:	1c5a      	adds	r2, r3, #1
 8001b00:	2030      	movs	r0, #48	; 0x30
 8001b02:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001b06:	4422      	add	r2, r4
 8001b08:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001b0c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001b10:	3302      	adds	r3, #2
 8001b12:	e7c7      	b.n	8001aa4 <_printf_common+0x58>
 8001b14:	2301      	movs	r3, #1
 8001b16:	4622      	mov	r2, r4
 8001b18:	4649      	mov	r1, r9
 8001b1a:	4638      	mov	r0, r7
 8001b1c:	47c0      	blx	r8
 8001b1e:	3001      	adds	r0, #1
 8001b20:	d0e6      	beq.n	8001af0 <_printf_common+0xa4>
 8001b22:	3601      	adds	r6, #1
 8001b24:	e7d9      	b.n	8001ada <_printf_common+0x8e>
	...

08001b28 <_printf_i>:
 8001b28:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001b2c:	7e0f      	ldrb	r7, [r1, #24]
 8001b2e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001b30:	2f78      	cmp	r7, #120	; 0x78
 8001b32:	4691      	mov	r9, r2
 8001b34:	4680      	mov	r8, r0
 8001b36:	460c      	mov	r4, r1
 8001b38:	469a      	mov	sl, r3
 8001b3a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001b3e:	d807      	bhi.n	8001b50 <_printf_i+0x28>
 8001b40:	2f62      	cmp	r7, #98	; 0x62
 8001b42:	d80a      	bhi.n	8001b5a <_printf_i+0x32>
 8001b44:	2f00      	cmp	r7, #0
 8001b46:	f000 80d8 	beq.w	8001cfa <_printf_i+0x1d2>
 8001b4a:	2f58      	cmp	r7, #88	; 0x58
 8001b4c:	f000 80a3 	beq.w	8001c96 <_printf_i+0x16e>
 8001b50:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001b54:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001b58:	e03a      	b.n	8001bd0 <_printf_i+0xa8>
 8001b5a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001b5e:	2b15      	cmp	r3, #21
 8001b60:	d8f6      	bhi.n	8001b50 <_printf_i+0x28>
 8001b62:	a101      	add	r1, pc, #4	; (adr r1, 8001b68 <_printf_i+0x40>)
 8001b64:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001b68:	08001bc1 	.word	0x08001bc1
 8001b6c:	08001bd5 	.word	0x08001bd5
 8001b70:	08001b51 	.word	0x08001b51
 8001b74:	08001b51 	.word	0x08001b51
 8001b78:	08001b51 	.word	0x08001b51
 8001b7c:	08001b51 	.word	0x08001b51
 8001b80:	08001bd5 	.word	0x08001bd5
 8001b84:	08001b51 	.word	0x08001b51
 8001b88:	08001b51 	.word	0x08001b51
 8001b8c:	08001b51 	.word	0x08001b51
 8001b90:	08001b51 	.word	0x08001b51
 8001b94:	08001ce1 	.word	0x08001ce1
 8001b98:	08001c05 	.word	0x08001c05
 8001b9c:	08001cc3 	.word	0x08001cc3
 8001ba0:	08001b51 	.word	0x08001b51
 8001ba4:	08001b51 	.word	0x08001b51
 8001ba8:	08001d03 	.word	0x08001d03
 8001bac:	08001b51 	.word	0x08001b51
 8001bb0:	08001c05 	.word	0x08001c05
 8001bb4:	08001b51 	.word	0x08001b51
 8001bb8:	08001b51 	.word	0x08001b51
 8001bbc:	08001ccb 	.word	0x08001ccb
 8001bc0:	682b      	ldr	r3, [r5, #0]
 8001bc2:	1d1a      	adds	r2, r3, #4
 8001bc4:	681b      	ldr	r3, [r3, #0]
 8001bc6:	602a      	str	r2, [r5, #0]
 8001bc8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001bcc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001bd0:	2301      	movs	r3, #1
 8001bd2:	e0a3      	b.n	8001d1c <_printf_i+0x1f4>
 8001bd4:	6820      	ldr	r0, [r4, #0]
 8001bd6:	6829      	ldr	r1, [r5, #0]
 8001bd8:	0606      	lsls	r6, r0, #24
 8001bda:	f101 0304 	add.w	r3, r1, #4
 8001bde:	d50a      	bpl.n	8001bf6 <_printf_i+0xce>
 8001be0:	680e      	ldr	r6, [r1, #0]
 8001be2:	602b      	str	r3, [r5, #0]
 8001be4:	2e00      	cmp	r6, #0
 8001be6:	da03      	bge.n	8001bf0 <_printf_i+0xc8>
 8001be8:	232d      	movs	r3, #45	; 0x2d
 8001bea:	4276      	negs	r6, r6
 8001bec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001bf0:	485e      	ldr	r0, [pc, #376]	; (8001d6c <_printf_i+0x244>)
 8001bf2:	230a      	movs	r3, #10
 8001bf4:	e019      	b.n	8001c2a <_printf_i+0x102>
 8001bf6:	680e      	ldr	r6, [r1, #0]
 8001bf8:	602b      	str	r3, [r5, #0]
 8001bfa:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001bfe:	bf18      	it	ne
 8001c00:	b236      	sxthne	r6, r6
 8001c02:	e7ef      	b.n	8001be4 <_printf_i+0xbc>
 8001c04:	682b      	ldr	r3, [r5, #0]
 8001c06:	6820      	ldr	r0, [r4, #0]
 8001c08:	1d19      	adds	r1, r3, #4
 8001c0a:	6029      	str	r1, [r5, #0]
 8001c0c:	0601      	lsls	r1, r0, #24
 8001c0e:	d501      	bpl.n	8001c14 <_printf_i+0xec>
 8001c10:	681e      	ldr	r6, [r3, #0]
 8001c12:	e002      	b.n	8001c1a <_printf_i+0xf2>
 8001c14:	0646      	lsls	r6, r0, #25
 8001c16:	d5fb      	bpl.n	8001c10 <_printf_i+0xe8>
 8001c18:	881e      	ldrh	r6, [r3, #0]
 8001c1a:	4854      	ldr	r0, [pc, #336]	; (8001d6c <_printf_i+0x244>)
 8001c1c:	2f6f      	cmp	r7, #111	; 0x6f
 8001c1e:	bf0c      	ite	eq
 8001c20:	2308      	moveq	r3, #8
 8001c22:	230a      	movne	r3, #10
 8001c24:	2100      	movs	r1, #0
 8001c26:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001c2a:	6865      	ldr	r5, [r4, #4]
 8001c2c:	60a5      	str	r5, [r4, #8]
 8001c2e:	2d00      	cmp	r5, #0
 8001c30:	bfa2      	ittt	ge
 8001c32:	6821      	ldrge	r1, [r4, #0]
 8001c34:	f021 0104 	bicge.w	r1, r1, #4
 8001c38:	6021      	strge	r1, [r4, #0]
 8001c3a:	b90e      	cbnz	r6, 8001c40 <_printf_i+0x118>
 8001c3c:	2d00      	cmp	r5, #0
 8001c3e:	d04d      	beq.n	8001cdc <_printf_i+0x1b4>
 8001c40:	4615      	mov	r5, r2
 8001c42:	fbb6 f1f3 	udiv	r1, r6, r3
 8001c46:	fb03 6711 	mls	r7, r3, r1, r6
 8001c4a:	5dc7      	ldrb	r7, [r0, r7]
 8001c4c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001c50:	4637      	mov	r7, r6
 8001c52:	42bb      	cmp	r3, r7
 8001c54:	460e      	mov	r6, r1
 8001c56:	d9f4      	bls.n	8001c42 <_printf_i+0x11a>
 8001c58:	2b08      	cmp	r3, #8
 8001c5a:	d10b      	bne.n	8001c74 <_printf_i+0x14c>
 8001c5c:	6823      	ldr	r3, [r4, #0]
 8001c5e:	07de      	lsls	r6, r3, #31
 8001c60:	d508      	bpl.n	8001c74 <_printf_i+0x14c>
 8001c62:	6923      	ldr	r3, [r4, #16]
 8001c64:	6861      	ldr	r1, [r4, #4]
 8001c66:	4299      	cmp	r1, r3
 8001c68:	bfde      	ittt	le
 8001c6a:	2330      	movle	r3, #48	; 0x30
 8001c6c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001c70:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001c74:	1b52      	subs	r2, r2, r5
 8001c76:	6122      	str	r2, [r4, #16]
 8001c78:	f8cd a000 	str.w	sl, [sp]
 8001c7c:	464b      	mov	r3, r9
 8001c7e:	aa03      	add	r2, sp, #12
 8001c80:	4621      	mov	r1, r4
 8001c82:	4640      	mov	r0, r8
 8001c84:	f7ff fee2 	bl	8001a4c <_printf_common>
 8001c88:	3001      	adds	r0, #1
 8001c8a:	d14c      	bne.n	8001d26 <_printf_i+0x1fe>
 8001c8c:	f04f 30ff 	mov.w	r0, #4294967295
 8001c90:	b004      	add	sp, #16
 8001c92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001c96:	4835      	ldr	r0, [pc, #212]	; (8001d6c <_printf_i+0x244>)
 8001c98:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001c9c:	6829      	ldr	r1, [r5, #0]
 8001c9e:	6823      	ldr	r3, [r4, #0]
 8001ca0:	f851 6b04 	ldr.w	r6, [r1], #4
 8001ca4:	6029      	str	r1, [r5, #0]
 8001ca6:	061d      	lsls	r5, r3, #24
 8001ca8:	d514      	bpl.n	8001cd4 <_printf_i+0x1ac>
 8001caa:	07df      	lsls	r7, r3, #31
 8001cac:	bf44      	itt	mi
 8001cae:	f043 0320 	orrmi.w	r3, r3, #32
 8001cb2:	6023      	strmi	r3, [r4, #0]
 8001cb4:	b91e      	cbnz	r6, 8001cbe <_printf_i+0x196>
 8001cb6:	6823      	ldr	r3, [r4, #0]
 8001cb8:	f023 0320 	bic.w	r3, r3, #32
 8001cbc:	6023      	str	r3, [r4, #0]
 8001cbe:	2310      	movs	r3, #16
 8001cc0:	e7b0      	b.n	8001c24 <_printf_i+0xfc>
 8001cc2:	6823      	ldr	r3, [r4, #0]
 8001cc4:	f043 0320 	orr.w	r3, r3, #32
 8001cc8:	6023      	str	r3, [r4, #0]
 8001cca:	2378      	movs	r3, #120	; 0x78
 8001ccc:	4828      	ldr	r0, [pc, #160]	; (8001d70 <_printf_i+0x248>)
 8001cce:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001cd2:	e7e3      	b.n	8001c9c <_printf_i+0x174>
 8001cd4:	0659      	lsls	r1, r3, #25
 8001cd6:	bf48      	it	mi
 8001cd8:	b2b6      	uxthmi	r6, r6
 8001cda:	e7e6      	b.n	8001caa <_printf_i+0x182>
 8001cdc:	4615      	mov	r5, r2
 8001cde:	e7bb      	b.n	8001c58 <_printf_i+0x130>
 8001ce0:	682b      	ldr	r3, [r5, #0]
 8001ce2:	6826      	ldr	r6, [r4, #0]
 8001ce4:	6961      	ldr	r1, [r4, #20]
 8001ce6:	1d18      	adds	r0, r3, #4
 8001ce8:	6028      	str	r0, [r5, #0]
 8001cea:	0635      	lsls	r5, r6, #24
 8001cec:	681b      	ldr	r3, [r3, #0]
 8001cee:	d501      	bpl.n	8001cf4 <_printf_i+0x1cc>
 8001cf0:	6019      	str	r1, [r3, #0]
 8001cf2:	e002      	b.n	8001cfa <_printf_i+0x1d2>
 8001cf4:	0670      	lsls	r0, r6, #25
 8001cf6:	d5fb      	bpl.n	8001cf0 <_printf_i+0x1c8>
 8001cf8:	8019      	strh	r1, [r3, #0]
 8001cfa:	2300      	movs	r3, #0
 8001cfc:	6123      	str	r3, [r4, #16]
 8001cfe:	4615      	mov	r5, r2
 8001d00:	e7ba      	b.n	8001c78 <_printf_i+0x150>
 8001d02:	682b      	ldr	r3, [r5, #0]
 8001d04:	1d1a      	adds	r2, r3, #4
 8001d06:	602a      	str	r2, [r5, #0]
 8001d08:	681d      	ldr	r5, [r3, #0]
 8001d0a:	6862      	ldr	r2, [r4, #4]
 8001d0c:	2100      	movs	r1, #0
 8001d0e:	4628      	mov	r0, r5
 8001d10:	f7fe fa6e 	bl	80001f0 <memchr>
 8001d14:	b108      	cbz	r0, 8001d1a <_printf_i+0x1f2>
 8001d16:	1b40      	subs	r0, r0, r5
 8001d18:	6060      	str	r0, [r4, #4]
 8001d1a:	6863      	ldr	r3, [r4, #4]
 8001d1c:	6123      	str	r3, [r4, #16]
 8001d1e:	2300      	movs	r3, #0
 8001d20:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001d24:	e7a8      	b.n	8001c78 <_printf_i+0x150>
 8001d26:	6923      	ldr	r3, [r4, #16]
 8001d28:	462a      	mov	r2, r5
 8001d2a:	4649      	mov	r1, r9
 8001d2c:	4640      	mov	r0, r8
 8001d2e:	47d0      	blx	sl
 8001d30:	3001      	adds	r0, #1
 8001d32:	d0ab      	beq.n	8001c8c <_printf_i+0x164>
 8001d34:	6823      	ldr	r3, [r4, #0]
 8001d36:	079b      	lsls	r3, r3, #30
 8001d38:	d413      	bmi.n	8001d62 <_printf_i+0x23a>
 8001d3a:	68e0      	ldr	r0, [r4, #12]
 8001d3c:	9b03      	ldr	r3, [sp, #12]
 8001d3e:	4298      	cmp	r0, r3
 8001d40:	bfb8      	it	lt
 8001d42:	4618      	movlt	r0, r3
 8001d44:	e7a4      	b.n	8001c90 <_printf_i+0x168>
 8001d46:	2301      	movs	r3, #1
 8001d48:	4632      	mov	r2, r6
 8001d4a:	4649      	mov	r1, r9
 8001d4c:	4640      	mov	r0, r8
 8001d4e:	47d0      	blx	sl
 8001d50:	3001      	adds	r0, #1
 8001d52:	d09b      	beq.n	8001c8c <_printf_i+0x164>
 8001d54:	3501      	adds	r5, #1
 8001d56:	68e3      	ldr	r3, [r4, #12]
 8001d58:	9903      	ldr	r1, [sp, #12]
 8001d5a:	1a5b      	subs	r3, r3, r1
 8001d5c:	42ab      	cmp	r3, r5
 8001d5e:	dcf2      	bgt.n	8001d46 <_printf_i+0x21e>
 8001d60:	e7eb      	b.n	8001d3a <_printf_i+0x212>
 8001d62:	2500      	movs	r5, #0
 8001d64:	f104 0619 	add.w	r6, r4, #25
 8001d68:	e7f5      	b.n	8001d56 <_printf_i+0x22e>
 8001d6a:	bf00      	nop
 8001d6c:	08003efe 	.word	0x08003efe
 8001d70:	08003f0f 	.word	0x08003f0f

08001d74 <quorem>:
 8001d74:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001d78:	6903      	ldr	r3, [r0, #16]
 8001d7a:	690c      	ldr	r4, [r1, #16]
 8001d7c:	42a3      	cmp	r3, r4
 8001d7e:	4607      	mov	r7, r0
 8001d80:	f2c0 8081 	blt.w	8001e86 <quorem+0x112>
 8001d84:	3c01      	subs	r4, #1
 8001d86:	f101 0814 	add.w	r8, r1, #20
 8001d8a:	f100 0514 	add.w	r5, r0, #20
 8001d8e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8001d92:	9301      	str	r3, [sp, #4]
 8001d94:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8001d98:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8001d9c:	3301      	adds	r3, #1
 8001d9e:	429a      	cmp	r2, r3
 8001da0:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8001da4:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8001da8:	fbb2 f6f3 	udiv	r6, r2, r3
 8001dac:	d331      	bcc.n	8001e12 <quorem+0x9e>
 8001dae:	f04f 0e00 	mov.w	lr, #0
 8001db2:	4640      	mov	r0, r8
 8001db4:	46ac      	mov	ip, r5
 8001db6:	46f2      	mov	sl, lr
 8001db8:	f850 2b04 	ldr.w	r2, [r0], #4
 8001dbc:	b293      	uxth	r3, r2
 8001dbe:	fb06 e303 	mla	r3, r6, r3, lr
 8001dc2:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8001dc6:	b29b      	uxth	r3, r3
 8001dc8:	ebaa 0303 	sub.w	r3, sl, r3
 8001dcc:	f8dc a000 	ldr.w	sl, [ip]
 8001dd0:	0c12      	lsrs	r2, r2, #16
 8001dd2:	fa13 f38a 	uxtah	r3, r3, sl
 8001dd6:	fb06 e202 	mla	r2, r6, r2, lr
 8001dda:	9300      	str	r3, [sp, #0]
 8001ddc:	9b00      	ldr	r3, [sp, #0]
 8001dde:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8001de2:	b292      	uxth	r2, r2
 8001de4:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8001de8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8001dec:	f8bd 3000 	ldrh.w	r3, [sp]
 8001df0:	4581      	cmp	r9, r0
 8001df2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001df6:	f84c 3b04 	str.w	r3, [ip], #4
 8001dfa:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8001dfe:	d2db      	bcs.n	8001db8 <quorem+0x44>
 8001e00:	f855 300b 	ldr.w	r3, [r5, fp]
 8001e04:	b92b      	cbnz	r3, 8001e12 <quorem+0x9e>
 8001e06:	9b01      	ldr	r3, [sp, #4]
 8001e08:	3b04      	subs	r3, #4
 8001e0a:	429d      	cmp	r5, r3
 8001e0c:	461a      	mov	r2, r3
 8001e0e:	d32e      	bcc.n	8001e6e <quorem+0xfa>
 8001e10:	613c      	str	r4, [r7, #16]
 8001e12:	4638      	mov	r0, r7
 8001e14:	f001 f8c6 	bl	8002fa4 <__mcmp>
 8001e18:	2800      	cmp	r0, #0
 8001e1a:	db24      	blt.n	8001e66 <quorem+0xf2>
 8001e1c:	3601      	adds	r6, #1
 8001e1e:	4628      	mov	r0, r5
 8001e20:	f04f 0c00 	mov.w	ip, #0
 8001e24:	f858 2b04 	ldr.w	r2, [r8], #4
 8001e28:	f8d0 e000 	ldr.w	lr, [r0]
 8001e2c:	b293      	uxth	r3, r2
 8001e2e:	ebac 0303 	sub.w	r3, ip, r3
 8001e32:	0c12      	lsrs	r2, r2, #16
 8001e34:	fa13 f38e 	uxtah	r3, r3, lr
 8001e38:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8001e3c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8001e40:	b29b      	uxth	r3, r3
 8001e42:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001e46:	45c1      	cmp	r9, r8
 8001e48:	f840 3b04 	str.w	r3, [r0], #4
 8001e4c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8001e50:	d2e8      	bcs.n	8001e24 <quorem+0xb0>
 8001e52:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8001e56:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8001e5a:	b922      	cbnz	r2, 8001e66 <quorem+0xf2>
 8001e5c:	3b04      	subs	r3, #4
 8001e5e:	429d      	cmp	r5, r3
 8001e60:	461a      	mov	r2, r3
 8001e62:	d30a      	bcc.n	8001e7a <quorem+0x106>
 8001e64:	613c      	str	r4, [r7, #16]
 8001e66:	4630      	mov	r0, r6
 8001e68:	b003      	add	sp, #12
 8001e6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001e6e:	6812      	ldr	r2, [r2, #0]
 8001e70:	3b04      	subs	r3, #4
 8001e72:	2a00      	cmp	r2, #0
 8001e74:	d1cc      	bne.n	8001e10 <quorem+0x9c>
 8001e76:	3c01      	subs	r4, #1
 8001e78:	e7c7      	b.n	8001e0a <quorem+0x96>
 8001e7a:	6812      	ldr	r2, [r2, #0]
 8001e7c:	3b04      	subs	r3, #4
 8001e7e:	2a00      	cmp	r2, #0
 8001e80:	d1f0      	bne.n	8001e64 <quorem+0xf0>
 8001e82:	3c01      	subs	r4, #1
 8001e84:	e7eb      	b.n	8001e5e <quorem+0xea>
 8001e86:	2000      	movs	r0, #0
 8001e88:	e7ee      	b.n	8001e68 <quorem+0xf4>
 8001e8a:	0000      	movs	r0, r0
 8001e8c:	0000      	movs	r0, r0
	...

08001e90 <_dtoa_r>:
 8001e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001e94:	ed2d 8b04 	vpush	{d8-d9}
 8001e98:	ec57 6b10 	vmov	r6, r7, d0
 8001e9c:	b093      	sub	sp, #76	; 0x4c
 8001e9e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8001ea0:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8001ea4:	9106      	str	r1, [sp, #24]
 8001ea6:	ee10 aa10 	vmov	sl, s0
 8001eaa:	4604      	mov	r4, r0
 8001eac:	9209      	str	r2, [sp, #36]	; 0x24
 8001eae:	930c      	str	r3, [sp, #48]	; 0x30
 8001eb0:	46bb      	mov	fp, r7
 8001eb2:	b975      	cbnz	r5, 8001ed2 <_dtoa_r+0x42>
 8001eb4:	2010      	movs	r0, #16
 8001eb6:	f000 fddd 	bl	8002a74 <malloc>
 8001eba:	4602      	mov	r2, r0
 8001ebc:	6260      	str	r0, [r4, #36]	; 0x24
 8001ebe:	b920      	cbnz	r0, 8001eca <_dtoa_r+0x3a>
 8001ec0:	4ba7      	ldr	r3, [pc, #668]	; (8002160 <_dtoa_r+0x2d0>)
 8001ec2:	21ea      	movs	r1, #234	; 0xea
 8001ec4:	48a7      	ldr	r0, [pc, #668]	; (8002164 <_dtoa_r+0x2d4>)
 8001ec6:	f001 fa75 	bl	80033b4 <__assert_func>
 8001eca:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8001ece:	6005      	str	r5, [r0, #0]
 8001ed0:	60c5      	str	r5, [r0, #12]
 8001ed2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ed4:	6819      	ldr	r1, [r3, #0]
 8001ed6:	b151      	cbz	r1, 8001eee <_dtoa_r+0x5e>
 8001ed8:	685a      	ldr	r2, [r3, #4]
 8001eda:	604a      	str	r2, [r1, #4]
 8001edc:	2301      	movs	r3, #1
 8001ede:	4093      	lsls	r3, r2
 8001ee0:	608b      	str	r3, [r1, #8]
 8001ee2:	4620      	mov	r0, r4
 8001ee4:	f000 fe1c 	bl	8002b20 <_Bfree>
 8001ee8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001eea:	2200      	movs	r2, #0
 8001eec:	601a      	str	r2, [r3, #0]
 8001eee:	1e3b      	subs	r3, r7, #0
 8001ef0:	bfaa      	itet	ge
 8001ef2:	2300      	movge	r3, #0
 8001ef4:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8001ef8:	f8c8 3000 	strge.w	r3, [r8]
 8001efc:	4b9a      	ldr	r3, [pc, #616]	; (8002168 <_dtoa_r+0x2d8>)
 8001efe:	bfbc      	itt	lt
 8001f00:	2201      	movlt	r2, #1
 8001f02:	f8c8 2000 	strlt.w	r2, [r8]
 8001f06:	ea33 030b 	bics.w	r3, r3, fp
 8001f0a:	d11b      	bne.n	8001f44 <_dtoa_r+0xb4>
 8001f0c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001f0e:	f242 730f 	movw	r3, #9999	; 0x270f
 8001f12:	6013      	str	r3, [r2, #0]
 8001f14:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8001f18:	4333      	orrs	r3, r6
 8001f1a:	f000 8592 	beq.w	8002a42 <_dtoa_r+0xbb2>
 8001f1e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8001f20:	b963      	cbnz	r3, 8001f3c <_dtoa_r+0xac>
 8001f22:	4b92      	ldr	r3, [pc, #584]	; (800216c <_dtoa_r+0x2dc>)
 8001f24:	e022      	b.n	8001f6c <_dtoa_r+0xdc>
 8001f26:	4b92      	ldr	r3, [pc, #584]	; (8002170 <_dtoa_r+0x2e0>)
 8001f28:	9301      	str	r3, [sp, #4]
 8001f2a:	3308      	adds	r3, #8
 8001f2c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8001f2e:	6013      	str	r3, [r2, #0]
 8001f30:	9801      	ldr	r0, [sp, #4]
 8001f32:	b013      	add	sp, #76	; 0x4c
 8001f34:	ecbd 8b04 	vpop	{d8-d9}
 8001f38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001f3c:	4b8b      	ldr	r3, [pc, #556]	; (800216c <_dtoa_r+0x2dc>)
 8001f3e:	9301      	str	r3, [sp, #4]
 8001f40:	3303      	adds	r3, #3
 8001f42:	e7f3      	b.n	8001f2c <_dtoa_r+0x9c>
 8001f44:	2200      	movs	r2, #0
 8001f46:	2300      	movs	r3, #0
 8001f48:	4650      	mov	r0, sl
 8001f4a:	4659      	mov	r1, fp
 8001f4c:	f7fe fdc4 	bl	8000ad8 <__aeabi_dcmpeq>
 8001f50:	ec4b ab19 	vmov	d9, sl, fp
 8001f54:	4680      	mov	r8, r0
 8001f56:	b158      	cbz	r0, 8001f70 <_dtoa_r+0xe0>
 8001f58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001f5a:	2301      	movs	r3, #1
 8001f5c:	6013      	str	r3, [r2, #0]
 8001f5e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8001f60:	2b00      	cmp	r3, #0
 8001f62:	f000 856b 	beq.w	8002a3c <_dtoa_r+0xbac>
 8001f66:	4883      	ldr	r0, [pc, #524]	; (8002174 <_dtoa_r+0x2e4>)
 8001f68:	6018      	str	r0, [r3, #0]
 8001f6a:	1e43      	subs	r3, r0, #1
 8001f6c:	9301      	str	r3, [sp, #4]
 8001f6e:	e7df      	b.n	8001f30 <_dtoa_r+0xa0>
 8001f70:	ec4b ab10 	vmov	d0, sl, fp
 8001f74:	aa10      	add	r2, sp, #64	; 0x40
 8001f76:	a911      	add	r1, sp, #68	; 0x44
 8001f78:	4620      	mov	r0, r4
 8001f7a:	f001 f8b9 	bl	80030f0 <__d2b>
 8001f7e:	f3cb 550a 	ubfx	r5, fp, #20, #11
 8001f82:	ee08 0a10 	vmov	s16, r0
 8001f86:	2d00      	cmp	r5, #0
 8001f88:	f000 8084 	beq.w	8002094 <_dtoa_r+0x204>
 8001f8c:	ee19 3a90 	vmov	r3, s19
 8001f90:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001f94:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8001f98:	4656      	mov	r6, sl
 8001f9a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 8001f9e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8001fa2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8001fa6:	4b74      	ldr	r3, [pc, #464]	; (8002178 <_dtoa_r+0x2e8>)
 8001fa8:	2200      	movs	r2, #0
 8001faa:	4630      	mov	r0, r6
 8001fac:	4639      	mov	r1, r7
 8001fae:	f7fe f973 	bl	8000298 <__aeabi_dsub>
 8001fb2:	a365      	add	r3, pc, #404	; (adr r3, 8002148 <_dtoa_r+0x2b8>)
 8001fb4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fb8:	f7fe fb26 	bl	8000608 <__aeabi_dmul>
 8001fbc:	a364      	add	r3, pc, #400	; (adr r3, 8002150 <_dtoa_r+0x2c0>)
 8001fbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fc2:	f7fe f96b 	bl	800029c <__adddf3>
 8001fc6:	4606      	mov	r6, r0
 8001fc8:	4628      	mov	r0, r5
 8001fca:	460f      	mov	r7, r1
 8001fcc:	f7fe fab2 	bl	8000534 <__aeabi_i2d>
 8001fd0:	a361      	add	r3, pc, #388	; (adr r3, 8002158 <_dtoa_r+0x2c8>)
 8001fd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fd6:	f7fe fb17 	bl	8000608 <__aeabi_dmul>
 8001fda:	4602      	mov	r2, r0
 8001fdc:	460b      	mov	r3, r1
 8001fde:	4630      	mov	r0, r6
 8001fe0:	4639      	mov	r1, r7
 8001fe2:	f7fe f95b 	bl	800029c <__adddf3>
 8001fe6:	4606      	mov	r6, r0
 8001fe8:	460f      	mov	r7, r1
 8001fea:	f7fe fdbd 	bl	8000b68 <__aeabi_d2iz>
 8001fee:	2200      	movs	r2, #0
 8001ff0:	9000      	str	r0, [sp, #0]
 8001ff2:	2300      	movs	r3, #0
 8001ff4:	4630      	mov	r0, r6
 8001ff6:	4639      	mov	r1, r7
 8001ff8:	f7fe fd78 	bl	8000aec <__aeabi_dcmplt>
 8001ffc:	b150      	cbz	r0, 8002014 <_dtoa_r+0x184>
 8001ffe:	9800      	ldr	r0, [sp, #0]
 8002000:	f7fe fa98 	bl	8000534 <__aeabi_i2d>
 8002004:	4632      	mov	r2, r6
 8002006:	463b      	mov	r3, r7
 8002008:	f7fe fd66 	bl	8000ad8 <__aeabi_dcmpeq>
 800200c:	b910      	cbnz	r0, 8002014 <_dtoa_r+0x184>
 800200e:	9b00      	ldr	r3, [sp, #0]
 8002010:	3b01      	subs	r3, #1
 8002012:	9300      	str	r3, [sp, #0]
 8002014:	9b00      	ldr	r3, [sp, #0]
 8002016:	2b16      	cmp	r3, #22
 8002018:	d85a      	bhi.n	80020d0 <_dtoa_r+0x240>
 800201a:	9a00      	ldr	r2, [sp, #0]
 800201c:	4b57      	ldr	r3, [pc, #348]	; (800217c <_dtoa_r+0x2ec>)
 800201e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002022:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002026:	ec51 0b19 	vmov	r0, r1, d9
 800202a:	f7fe fd5f 	bl	8000aec <__aeabi_dcmplt>
 800202e:	2800      	cmp	r0, #0
 8002030:	d050      	beq.n	80020d4 <_dtoa_r+0x244>
 8002032:	9b00      	ldr	r3, [sp, #0]
 8002034:	3b01      	subs	r3, #1
 8002036:	9300      	str	r3, [sp, #0]
 8002038:	2300      	movs	r3, #0
 800203a:	930b      	str	r3, [sp, #44]	; 0x2c
 800203c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800203e:	1b5d      	subs	r5, r3, r5
 8002040:	1e6b      	subs	r3, r5, #1
 8002042:	9305      	str	r3, [sp, #20]
 8002044:	bf45      	ittet	mi
 8002046:	f1c5 0301 	rsbmi	r3, r5, #1
 800204a:	9304      	strmi	r3, [sp, #16]
 800204c:	2300      	movpl	r3, #0
 800204e:	2300      	movmi	r3, #0
 8002050:	bf4c      	ite	mi
 8002052:	9305      	strmi	r3, [sp, #20]
 8002054:	9304      	strpl	r3, [sp, #16]
 8002056:	9b00      	ldr	r3, [sp, #0]
 8002058:	2b00      	cmp	r3, #0
 800205a:	db3d      	blt.n	80020d8 <_dtoa_r+0x248>
 800205c:	9b05      	ldr	r3, [sp, #20]
 800205e:	9a00      	ldr	r2, [sp, #0]
 8002060:	920a      	str	r2, [sp, #40]	; 0x28
 8002062:	4413      	add	r3, r2
 8002064:	9305      	str	r3, [sp, #20]
 8002066:	2300      	movs	r3, #0
 8002068:	9307      	str	r3, [sp, #28]
 800206a:	9b06      	ldr	r3, [sp, #24]
 800206c:	2b09      	cmp	r3, #9
 800206e:	f200 8089 	bhi.w	8002184 <_dtoa_r+0x2f4>
 8002072:	2b05      	cmp	r3, #5
 8002074:	bfc4      	itt	gt
 8002076:	3b04      	subgt	r3, #4
 8002078:	9306      	strgt	r3, [sp, #24]
 800207a:	9b06      	ldr	r3, [sp, #24]
 800207c:	f1a3 0302 	sub.w	r3, r3, #2
 8002080:	bfcc      	ite	gt
 8002082:	2500      	movgt	r5, #0
 8002084:	2501      	movle	r5, #1
 8002086:	2b03      	cmp	r3, #3
 8002088:	f200 8087 	bhi.w	800219a <_dtoa_r+0x30a>
 800208c:	e8df f003 	tbb	[pc, r3]
 8002090:	59383a2d 	.word	0x59383a2d
 8002094:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8002098:	441d      	add	r5, r3
 800209a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800209e:	2b20      	cmp	r3, #32
 80020a0:	bfc1      	itttt	gt
 80020a2:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80020a6:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 80020aa:	fa0b f303 	lslgt.w	r3, fp, r3
 80020ae:	fa26 f000 	lsrgt.w	r0, r6, r0
 80020b2:	bfda      	itte	le
 80020b4:	f1c3 0320 	rsble	r3, r3, #32
 80020b8:	fa06 f003 	lslle.w	r0, r6, r3
 80020bc:	4318      	orrgt	r0, r3
 80020be:	f7fe fa29 	bl	8000514 <__aeabi_ui2d>
 80020c2:	2301      	movs	r3, #1
 80020c4:	4606      	mov	r6, r0
 80020c6:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 80020ca:	3d01      	subs	r5, #1
 80020cc:	930e      	str	r3, [sp, #56]	; 0x38
 80020ce:	e76a      	b.n	8001fa6 <_dtoa_r+0x116>
 80020d0:	2301      	movs	r3, #1
 80020d2:	e7b2      	b.n	800203a <_dtoa_r+0x1aa>
 80020d4:	900b      	str	r0, [sp, #44]	; 0x2c
 80020d6:	e7b1      	b.n	800203c <_dtoa_r+0x1ac>
 80020d8:	9b04      	ldr	r3, [sp, #16]
 80020da:	9a00      	ldr	r2, [sp, #0]
 80020dc:	1a9b      	subs	r3, r3, r2
 80020de:	9304      	str	r3, [sp, #16]
 80020e0:	4253      	negs	r3, r2
 80020e2:	9307      	str	r3, [sp, #28]
 80020e4:	2300      	movs	r3, #0
 80020e6:	930a      	str	r3, [sp, #40]	; 0x28
 80020e8:	e7bf      	b.n	800206a <_dtoa_r+0x1da>
 80020ea:	2300      	movs	r3, #0
 80020ec:	9308      	str	r3, [sp, #32]
 80020ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80020f0:	2b00      	cmp	r3, #0
 80020f2:	dc55      	bgt.n	80021a0 <_dtoa_r+0x310>
 80020f4:	2301      	movs	r3, #1
 80020f6:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80020fa:	461a      	mov	r2, r3
 80020fc:	9209      	str	r2, [sp, #36]	; 0x24
 80020fe:	e00c      	b.n	800211a <_dtoa_r+0x28a>
 8002100:	2301      	movs	r3, #1
 8002102:	e7f3      	b.n	80020ec <_dtoa_r+0x25c>
 8002104:	2300      	movs	r3, #0
 8002106:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002108:	9308      	str	r3, [sp, #32]
 800210a:	9b00      	ldr	r3, [sp, #0]
 800210c:	4413      	add	r3, r2
 800210e:	9302      	str	r3, [sp, #8]
 8002110:	3301      	adds	r3, #1
 8002112:	2b01      	cmp	r3, #1
 8002114:	9303      	str	r3, [sp, #12]
 8002116:	bfb8      	it	lt
 8002118:	2301      	movlt	r3, #1
 800211a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800211c:	2200      	movs	r2, #0
 800211e:	6042      	str	r2, [r0, #4]
 8002120:	2204      	movs	r2, #4
 8002122:	f102 0614 	add.w	r6, r2, #20
 8002126:	429e      	cmp	r6, r3
 8002128:	6841      	ldr	r1, [r0, #4]
 800212a:	d93d      	bls.n	80021a8 <_dtoa_r+0x318>
 800212c:	4620      	mov	r0, r4
 800212e:	f000 fcb7 	bl	8002aa0 <_Balloc>
 8002132:	9001      	str	r0, [sp, #4]
 8002134:	2800      	cmp	r0, #0
 8002136:	d13b      	bne.n	80021b0 <_dtoa_r+0x320>
 8002138:	4b11      	ldr	r3, [pc, #68]	; (8002180 <_dtoa_r+0x2f0>)
 800213a:	4602      	mov	r2, r0
 800213c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8002140:	e6c0      	b.n	8001ec4 <_dtoa_r+0x34>
 8002142:	2301      	movs	r3, #1
 8002144:	e7df      	b.n	8002106 <_dtoa_r+0x276>
 8002146:	bf00      	nop
 8002148:	636f4361 	.word	0x636f4361
 800214c:	3fd287a7 	.word	0x3fd287a7
 8002150:	8b60c8b3 	.word	0x8b60c8b3
 8002154:	3fc68a28 	.word	0x3fc68a28
 8002158:	509f79fb 	.word	0x509f79fb
 800215c:	3fd34413 	.word	0x3fd34413
 8002160:	08003f2d 	.word	0x08003f2d
 8002164:	08003f44 	.word	0x08003f44
 8002168:	7ff00000 	.word	0x7ff00000
 800216c:	08003f29 	.word	0x08003f29
 8002170:	08003f20 	.word	0x08003f20
 8002174:	08003efd 	.word	0x08003efd
 8002178:	3ff80000 	.word	0x3ff80000
 800217c:	08004038 	.word	0x08004038
 8002180:	08003f9f 	.word	0x08003f9f
 8002184:	2501      	movs	r5, #1
 8002186:	2300      	movs	r3, #0
 8002188:	9306      	str	r3, [sp, #24]
 800218a:	9508      	str	r5, [sp, #32]
 800218c:	f04f 33ff 	mov.w	r3, #4294967295
 8002190:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002194:	2200      	movs	r2, #0
 8002196:	2312      	movs	r3, #18
 8002198:	e7b0      	b.n	80020fc <_dtoa_r+0x26c>
 800219a:	2301      	movs	r3, #1
 800219c:	9308      	str	r3, [sp, #32]
 800219e:	e7f5      	b.n	800218c <_dtoa_r+0x2fc>
 80021a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80021a2:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80021a6:	e7b8      	b.n	800211a <_dtoa_r+0x28a>
 80021a8:	3101      	adds	r1, #1
 80021aa:	6041      	str	r1, [r0, #4]
 80021ac:	0052      	lsls	r2, r2, #1
 80021ae:	e7b8      	b.n	8002122 <_dtoa_r+0x292>
 80021b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80021b2:	9a01      	ldr	r2, [sp, #4]
 80021b4:	601a      	str	r2, [r3, #0]
 80021b6:	9b03      	ldr	r3, [sp, #12]
 80021b8:	2b0e      	cmp	r3, #14
 80021ba:	f200 809d 	bhi.w	80022f8 <_dtoa_r+0x468>
 80021be:	2d00      	cmp	r5, #0
 80021c0:	f000 809a 	beq.w	80022f8 <_dtoa_r+0x468>
 80021c4:	9b00      	ldr	r3, [sp, #0]
 80021c6:	2b00      	cmp	r3, #0
 80021c8:	dd32      	ble.n	8002230 <_dtoa_r+0x3a0>
 80021ca:	4ab7      	ldr	r2, [pc, #732]	; (80024a8 <_dtoa_r+0x618>)
 80021cc:	f003 030f 	and.w	r3, r3, #15
 80021d0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80021d4:	e9d3 8900 	ldrd	r8, r9, [r3]
 80021d8:	9b00      	ldr	r3, [sp, #0]
 80021da:	05d8      	lsls	r0, r3, #23
 80021dc:	ea4f 1723 	mov.w	r7, r3, asr #4
 80021e0:	d516      	bpl.n	8002210 <_dtoa_r+0x380>
 80021e2:	4bb2      	ldr	r3, [pc, #712]	; (80024ac <_dtoa_r+0x61c>)
 80021e4:	ec51 0b19 	vmov	r0, r1, d9
 80021e8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80021ec:	f7fe fb36 	bl	800085c <__aeabi_ddiv>
 80021f0:	f007 070f 	and.w	r7, r7, #15
 80021f4:	4682      	mov	sl, r0
 80021f6:	468b      	mov	fp, r1
 80021f8:	2503      	movs	r5, #3
 80021fa:	4eac      	ldr	r6, [pc, #688]	; (80024ac <_dtoa_r+0x61c>)
 80021fc:	b957      	cbnz	r7, 8002214 <_dtoa_r+0x384>
 80021fe:	4642      	mov	r2, r8
 8002200:	464b      	mov	r3, r9
 8002202:	4650      	mov	r0, sl
 8002204:	4659      	mov	r1, fp
 8002206:	f7fe fb29 	bl	800085c <__aeabi_ddiv>
 800220a:	4682      	mov	sl, r0
 800220c:	468b      	mov	fp, r1
 800220e:	e028      	b.n	8002262 <_dtoa_r+0x3d2>
 8002210:	2502      	movs	r5, #2
 8002212:	e7f2      	b.n	80021fa <_dtoa_r+0x36a>
 8002214:	07f9      	lsls	r1, r7, #31
 8002216:	d508      	bpl.n	800222a <_dtoa_r+0x39a>
 8002218:	4640      	mov	r0, r8
 800221a:	4649      	mov	r1, r9
 800221c:	e9d6 2300 	ldrd	r2, r3, [r6]
 8002220:	f7fe f9f2 	bl	8000608 <__aeabi_dmul>
 8002224:	3501      	adds	r5, #1
 8002226:	4680      	mov	r8, r0
 8002228:	4689      	mov	r9, r1
 800222a:	107f      	asrs	r7, r7, #1
 800222c:	3608      	adds	r6, #8
 800222e:	e7e5      	b.n	80021fc <_dtoa_r+0x36c>
 8002230:	f000 809b 	beq.w	800236a <_dtoa_r+0x4da>
 8002234:	9b00      	ldr	r3, [sp, #0]
 8002236:	4f9d      	ldr	r7, [pc, #628]	; (80024ac <_dtoa_r+0x61c>)
 8002238:	425e      	negs	r6, r3
 800223a:	4b9b      	ldr	r3, [pc, #620]	; (80024a8 <_dtoa_r+0x618>)
 800223c:	f006 020f 	and.w	r2, r6, #15
 8002240:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002244:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002248:	ec51 0b19 	vmov	r0, r1, d9
 800224c:	f7fe f9dc 	bl	8000608 <__aeabi_dmul>
 8002250:	1136      	asrs	r6, r6, #4
 8002252:	4682      	mov	sl, r0
 8002254:	468b      	mov	fp, r1
 8002256:	2300      	movs	r3, #0
 8002258:	2502      	movs	r5, #2
 800225a:	2e00      	cmp	r6, #0
 800225c:	d17a      	bne.n	8002354 <_dtoa_r+0x4c4>
 800225e:	2b00      	cmp	r3, #0
 8002260:	d1d3      	bne.n	800220a <_dtoa_r+0x37a>
 8002262:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002264:	2b00      	cmp	r3, #0
 8002266:	f000 8082 	beq.w	800236e <_dtoa_r+0x4de>
 800226a:	4b91      	ldr	r3, [pc, #580]	; (80024b0 <_dtoa_r+0x620>)
 800226c:	2200      	movs	r2, #0
 800226e:	4650      	mov	r0, sl
 8002270:	4659      	mov	r1, fp
 8002272:	f7fe fc3b 	bl	8000aec <__aeabi_dcmplt>
 8002276:	2800      	cmp	r0, #0
 8002278:	d079      	beq.n	800236e <_dtoa_r+0x4de>
 800227a:	9b03      	ldr	r3, [sp, #12]
 800227c:	2b00      	cmp	r3, #0
 800227e:	d076      	beq.n	800236e <_dtoa_r+0x4de>
 8002280:	9b02      	ldr	r3, [sp, #8]
 8002282:	2b00      	cmp	r3, #0
 8002284:	dd36      	ble.n	80022f4 <_dtoa_r+0x464>
 8002286:	9b00      	ldr	r3, [sp, #0]
 8002288:	4650      	mov	r0, sl
 800228a:	4659      	mov	r1, fp
 800228c:	1e5f      	subs	r7, r3, #1
 800228e:	2200      	movs	r2, #0
 8002290:	4b88      	ldr	r3, [pc, #544]	; (80024b4 <_dtoa_r+0x624>)
 8002292:	f7fe f9b9 	bl	8000608 <__aeabi_dmul>
 8002296:	9e02      	ldr	r6, [sp, #8]
 8002298:	4682      	mov	sl, r0
 800229a:	468b      	mov	fp, r1
 800229c:	3501      	adds	r5, #1
 800229e:	4628      	mov	r0, r5
 80022a0:	f7fe f948 	bl	8000534 <__aeabi_i2d>
 80022a4:	4652      	mov	r2, sl
 80022a6:	465b      	mov	r3, fp
 80022a8:	f7fe f9ae 	bl	8000608 <__aeabi_dmul>
 80022ac:	4b82      	ldr	r3, [pc, #520]	; (80024b8 <_dtoa_r+0x628>)
 80022ae:	2200      	movs	r2, #0
 80022b0:	f7fd fff4 	bl	800029c <__adddf3>
 80022b4:	46d0      	mov	r8, sl
 80022b6:	46d9      	mov	r9, fp
 80022b8:	4682      	mov	sl, r0
 80022ba:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 80022be:	2e00      	cmp	r6, #0
 80022c0:	d158      	bne.n	8002374 <_dtoa_r+0x4e4>
 80022c2:	4b7e      	ldr	r3, [pc, #504]	; (80024bc <_dtoa_r+0x62c>)
 80022c4:	2200      	movs	r2, #0
 80022c6:	4640      	mov	r0, r8
 80022c8:	4649      	mov	r1, r9
 80022ca:	f7fd ffe5 	bl	8000298 <__aeabi_dsub>
 80022ce:	4652      	mov	r2, sl
 80022d0:	465b      	mov	r3, fp
 80022d2:	4680      	mov	r8, r0
 80022d4:	4689      	mov	r9, r1
 80022d6:	f7fe fc27 	bl	8000b28 <__aeabi_dcmpgt>
 80022da:	2800      	cmp	r0, #0
 80022dc:	f040 8295 	bne.w	800280a <_dtoa_r+0x97a>
 80022e0:	4652      	mov	r2, sl
 80022e2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 80022e6:	4640      	mov	r0, r8
 80022e8:	4649      	mov	r1, r9
 80022ea:	f7fe fbff 	bl	8000aec <__aeabi_dcmplt>
 80022ee:	2800      	cmp	r0, #0
 80022f0:	f040 8289 	bne.w	8002806 <_dtoa_r+0x976>
 80022f4:	ec5b ab19 	vmov	sl, fp, d9
 80022f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80022fa:	2b00      	cmp	r3, #0
 80022fc:	f2c0 8148 	blt.w	8002590 <_dtoa_r+0x700>
 8002300:	9a00      	ldr	r2, [sp, #0]
 8002302:	2a0e      	cmp	r2, #14
 8002304:	f300 8144 	bgt.w	8002590 <_dtoa_r+0x700>
 8002308:	4b67      	ldr	r3, [pc, #412]	; (80024a8 <_dtoa_r+0x618>)
 800230a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800230e:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002312:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002314:	2b00      	cmp	r3, #0
 8002316:	f280 80d5 	bge.w	80024c4 <_dtoa_r+0x634>
 800231a:	9b03      	ldr	r3, [sp, #12]
 800231c:	2b00      	cmp	r3, #0
 800231e:	f300 80d1 	bgt.w	80024c4 <_dtoa_r+0x634>
 8002322:	f040 826f 	bne.w	8002804 <_dtoa_r+0x974>
 8002326:	4b65      	ldr	r3, [pc, #404]	; (80024bc <_dtoa_r+0x62c>)
 8002328:	2200      	movs	r2, #0
 800232a:	4640      	mov	r0, r8
 800232c:	4649      	mov	r1, r9
 800232e:	f7fe f96b 	bl	8000608 <__aeabi_dmul>
 8002332:	4652      	mov	r2, sl
 8002334:	465b      	mov	r3, fp
 8002336:	f7fe fbed 	bl	8000b14 <__aeabi_dcmpge>
 800233a:	9e03      	ldr	r6, [sp, #12]
 800233c:	4637      	mov	r7, r6
 800233e:	2800      	cmp	r0, #0
 8002340:	f040 8245 	bne.w	80027ce <_dtoa_r+0x93e>
 8002344:	9d01      	ldr	r5, [sp, #4]
 8002346:	2331      	movs	r3, #49	; 0x31
 8002348:	f805 3b01 	strb.w	r3, [r5], #1
 800234c:	9b00      	ldr	r3, [sp, #0]
 800234e:	3301      	adds	r3, #1
 8002350:	9300      	str	r3, [sp, #0]
 8002352:	e240      	b.n	80027d6 <_dtoa_r+0x946>
 8002354:	07f2      	lsls	r2, r6, #31
 8002356:	d505      	bpl.n	8002364 <_dtoa_r+0x4d4>
 8002358:	e9d7 2300 	ldrd	r2, r3, [r7]
 800235c:	f7fe f954 	bl	8000608 <__aeabi_dmul>
 8002360:	3501      	adds	r5, #1
 8002362:	2301      	movs	r3, #1
 8002364:	1076      	asrs	r6, r6, #1
 8002366:	3708      	adds	r7, #8
 8002368:	e777      	b.n	800225a <_dtoa_r+0x3ca>
 800236a:	2502      	movs	r5, #2
 800236c:	e779      	b.n	8002262 <_dtoa_r+0x3d2>
 800236e:	9f00      	ldr	r7, [sp, #0]
 8002370:	9e03      	ldr	r6, [sp, #12]
 8002372:	e794      	b.n	800229e <_dtoa_r+0x40e>
 8002374:	9901      	ldr	r1, [sp, #4]
 8002376:	4b4c      	ldr	r3, [pc, #304]	; (80024a8 <_dtoa_r+0x618>)
 8002378:	4431      	add	r1, r6
 800237a:	910d      	str	r1, [sp, #52]	; 0x34
 800237c:	9908      	ldr	r1, [sp, #32]
 800237e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8002382:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002386:	2900      	cmp	r1, #0
 8002388:	d043      	beq.n	8002412 <_dtoa_r+0x582>
 800238a:	494d      	ldr	r1, [pc, #308]	; (80024c0 <_dtoa_r+0x630>)
 800238c:	2000      	movs	r0, #0
 800238e:	f7fe fa65 	bl	800085c <__aeabi_ddiv>
 8002392:	4652      	mov	r2, sl
 8002394:	465b      	mov	r3, fp
 8002396:	f7fd ff7f 	bl	8000298 <__aeabi_dsub>
 800239a:	9d01      	ldr	r5, [sp, #4]
 800239c:	4682      	mov	sl, r0
 800239e:	468b      	mov	fp, r1
 80023a0:	4649      	mov	r1, r9
 80023a2:	4640      	mov	r0, r8
 80023a4:	f7fe fbe0 	bl	8000b68 <__aeabi_d2iz>
 80023a8:	4606      	mov	r6, r0
 80023aa:	f7fe f8c3 	bl	8000534 <__aeabi_i2d>
 80023ae:	4602      	mov	r2, r0
 80023b0:	460b      	mov	r3, r1
 80023b2:	4640      	mov	r0, r8
 80023b4:	4649      	mov	r1, r9
 80023b6:	f7fd ff6f 	bl	8000298 <__aeabi_dsub>
 80023ba:	3630      	adds	r6, #48	; 0x30
 80023bc:	f805 6b01 	strb.w	r6, [r5], #1
 80023c0:	4652      	mov	r2, sl
 80023c2:	465b      	mov	r3, fp
 80023c4:	4680      	mov	r8, r0
 80023c6:	4689      	mov	r9, r1
 80023c8:	f7fe fb90 	bl	8000aec <__aeabi_dcmplt>
 80023cc:	2800      	cmp	r0, #0
 80023ce:	d163      	bne.n	8002498 <_dtoa_r+0x608>
 80023d0:	4642      	mov	r2, r8
 80023d2:	464b      	mov	r3, r9
 80023d4:	4936      	ldr	r1, [pc, #216]	; (80024b0 <_dtoa_r+0x620>)
 80023d6:	2000      	movs	r0, #0
 80023d8:	f7fd ff5e 	bl	8000298 <__aeabi_dsub>
 80023dc:	4652      	mov	r2, sl
 80023de:	465b      	mov	r3, fp
 80023e0:	f7fe fb84 	bl	8000aec <__aeabi_dcmplt>
 80023e4:	2800      	cmp	r0, #0
 80023e6:	f040 80b5 	bne.w	8002554 <_dtoa_r+0x6c4>
 80023ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80023ec:	429d      	cmp	r5, r3
 80023ee:	d081      	beq.n	80022f4 <_dtoa_r+0x464>
 80023f0:	4b30      	ldr	r3, [pc, #192]	; (80024b4 <_dtoa_r+0x624>)
 80023f2:	2200      	movs	r2, #0
 80023f4:	4650      	mov	r0, sl
 80023f6:	4659      	mov	r1, fp
 80023f8:	f7fe f906 	bl	8000608 <__aeabi_dmul>
 80023fc:	4b2d      	ldr	r3, [pc, #180]	; (80024b4 <_dtoa_r+0x624>)
 80023fe:	4682      	mov	sl, r0
 8002400:	468b      	mov	fp, r1
 8002402:	4640      	mov	r0, r8
 8002404:	4649      	mov	r1, r9
 8002406:	2200      	movs	r2, #0
 8002408:	f7fe f8fe 	bl	8000608 <__aeabi_dmul>
 800240c:	4680      	mov	r8, r0
 800240e:	4689      	mov	r9, r1
 8002410:	e7c6      	b.n	80023a0 <_dtoa_r+0x510>
 8002412:	4650      	mov	r0, sl
 8002414:	4659      	mov	r1, fp
 8002416:	f7fe f8f7 	bl	8000608 <__aeabi_dmul>
 800241a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800241c:	9d01      	ldr	r5, [sp, #4]
 800241e:	930f      	str	r3, [sp, #60]	; 0x3c
 8002420:	4682      	mov	sl, r0
 8002422:	468b      	mov	fp, r1
 8002424:	4649      	mov	r1, r9
 8002426:	4640      	mov	r0, r8
 8002428:	f7fe fb9e 	bl	8000b68 <__aeabi_d2iz>
 800242c:	4606      	mov	r6, r0
 800242e:	f7fe f881 	bl	8000534 <__aeabi_i2d>
 8002432:	3630      	adds	r6, #48	; 0x30
 8002434:	4602      	mov	r2, r0
 8002436:	460b      	mov	r3, r1
 8002438:	4640      	mov	r0, r8
 800243a:	4649      	mov	r1, r9
 800243c:	f7fd ff2c 	bl	8000298 <__aeabi_dsub>
 8002440:	f805 6b01 	strb.w	r6, [r5], #1
 8002444:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002446:	429d      	cmp	r5, r3
 8002448:	4680      	mov	r8, r0
 800244a:	4689      	mov	r9, r1
 800244c:	f04f 0200 	mov.w	r2, #0
 8002450:	d124      	bne.n	800249c <_dtoa_r+0x60c>
 8002452:	4b1b      	ldr	r3, [pc, #108]	; (80024c0 <_dtoa_r+0x630>)
 8002454:	4650      	mov	r0, sl
 8002456:	4659      	mov	r1, fp
 8002458:	f7fd ff20 	bl	800029c <__adddf3>
 800245c:	4602      	mov	r2, r0
 800245e:	460b      	mov	r3, r1
 8002460:	4640      	mov	r0, r8
 8002462:	4649      	mov	r1, r9
 8002464:	f7fe fb60 	bl	8000b28 <__aeabi_dcmpgt>
 8002468:	2800      	cmp	r0, #0
 800246a:	d173      	bne.n	8002554 <_dtoa_r+0x6c4>
 800246c:	4652      	mov	r2, sl
 800246e:	465b      	mov	r3, fp
 8002470:	4913      	ldr	r1, [pc, #76]	; (80024c0 <_dtoa_r+0x630>)
 8002472:	2000      	movs	r0, #0
 8002474:	f7fd ff10 	bl	8000298 <__aeabi_dsub>
 8002478:	4602      	mov	r2, r0
 800247a:	460b      	mov	r3, r1
 800247c:	4640      	mov	r0, r8
 800247e:	4649      	mov	r1, r9
 8002480:	f7fe fb34 	bl	8000aec <__aeabi_dcmplt>
 8002484:	2800      	cmp	r0, #0
 8002486:	f43f af35 	beq.w	80022f4 <_dtoa_r+0x464>
 800248a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800248c:	1e6b      	subs	r3, r5, #1
 800248e:	930f      	str	r3, [sp, #60]	; 0x3c
 8002490:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002494:	2b30      	cmp	r3, #48	; 0x30
 8002496:	d0f8      	beq.n	800248a <_dtoa_r+0x5fa>
 8002498:	9700      	str	r7, [sp, #0]
 800249a:	e049      	b.n	8002530 <_dtoa_r+0x6a0>
 800249c:	4b05      	ldr	r3, [pc, #20]	; (80024b4 <_dtoa_r+0x624>)
 800249e:	f7fe f8b3 	bl	8000608 <__aeabi_dmul>
 80024a2:	4680      	mov	r8, r0
 80024a4:	4689      	mov	r9, r1
 80024a6:	e7bd      	b.n	8002424 <_dtoa_r+0x594>
 80024a8:	08004038 	.word	0x08004038
 80024ac:	08004010 	.word	0x08004010
 80024b0:	3ff00000 	.word	0x3ff00000
 80024b4:	40240000 	.word	0x40240000
 80024b8:	401c0000 	.word	0x401c0000
 80024bc:	40140000 	.word	0x40140000
 80024c0:	3fe00000 	.word	0x3fe00000
 80024c4:	9d01      	ldr	r5, [sp, #4]
 80024c6:	4656      	mov	r6, sl
 80024c8:	465f      	mov	r7, fp
 80024ca:	4642      	mov	r2, r8
 80024cc:	464b      	mov	r3, r9
 80024ce:	4630      	mov	r0, r6
 80024d0:	4639      	mov	r1, r7
 80024d2:	f7fe f9c3 	bl	800085c <__aeabi_ddiv>
 80024d6:	f7fe fb47 	bl	8000b68 <__aeabi_d2iz>
 80024da:	4682      	mov	sl, r0
 80024dc:	f7fe f82a 	bl	8000534 <__aeabi_i2d>
 80024e0:	4642      	mov	r2, r8
 80024e2:	464b      	mov	r3, r9
 80024e4:	f7fe f890 	bl	8000608 <__aeabi_dmul>
 80024e8:	4602      	mov	r2, r0
 80024ea:	460b      	mov	r3, r1
 80024ec:	4630      	mov	r0, r6
 80024ee:	4639      	mov	r1, r7
 80024f0:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 80024f4:	f7fd fed0 	bl	8000298 <__aeabi_dsub>
 80024f8:	f805 6b01 	strb.w	r6, [r5], #1
 80024fc:	9e01      	ldr	r6, [sp, #4]
 80024fe:	9f03      	ldr	r7, [sp, #12]
 8002500:	1bae      	subs	r6, r5, r6
 8002502:	42b7      	cmp	r7, r6
 8002504:	4602      	mov	r2, r0
 8002506:	460b      	mov	r3, r1
 8002508:	d135      	bne.n	8002576 <_dtoa_r+0x6e6>
 800250a:	f7fd fec7 	bl	800029c <__adddf3>
 800250e:	4642      	mov	r2, r8
 8002510:	464b      	mov	r3, r9
 8002512:	4606      	mov	r6, r0
 8002514:	460f      	mov	r7, r1
 8002516:	f7fe fb07 	bl	8000b28 <__aeabi_dcmpgt>
 800251a:	b9d0      	cbnz	r0, 8002552 <_dtoa_r+0x6c2>
 800251c:	4642      	mov	r2, r8
 800251e:	464b      	mov	r3, r9
 8002520:	4630      	mov	r0, r6
 8002522:	4639      	mov	r1, r7
 8002524:	f7fe fad8 	bl	8000ad8 <__aeabi_dcmpeq>
 8002528:	b110      	cbz	r0, 8002530 <_dtoa_r+0x6a0>
 800252a:	f01a 0f01 	tst.w	sl, #1
 800252e:	d110      	bne.n	8002552 <_dtoa_r+0x6c2>
 8002530:	4620      	mov	r0, r4
 8002532:	ee18 1a10 	vmov	r1, s16
 8002536:	f000 faf3 	bl	8002b20 <_Bfree>
 800253a:	2300      	movs	r3, #0
 800253c:	9800      	ldr	r0, [sp, #0]
 800253e:	702b      	strb	r3, [r5, #0]
 8002540:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002542:	3001      	adds	r0, #1
 8002544:	6018      	str	r0, [r3, #0]
 8002546:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002548:	2b00      	cmp	r3, #0
 800254a:	f43f acf1 	beq.w	8001f30 <_dtoa_r+0xa0>
 800254e:	601d      	str	r5, [r3, #0]
 8002550:	e4ee      	b.n	8001f30 <_dtoa_r+0xa0>
 8002552:	9f00      	ldr	r7, [sp, #0]
 8002554:	462b      	mov	r3, r5
 8002556:	461d      	mov	r5, r3
 8002558:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800255c:	2a39      	cmp	r2, #57	; 0x39
 800255e:	d106      	bne.n	800256e <_dtoa_r+0x6de>
 8002560:	9a01      	ldr	r2, [sp, #4]
 8002562:	429a      	cmp	r2, r3
 8002564:	d1f7      	bne.n	8002556 <_dtoa_r+0x6c6>
 8002566:	9901      	ldr	r1, [sp, #4]
 8002568:	2230      	movs	r2, #48	; 0x30
 800256a:	3701      	adds	r7, #1
 800256c:	700a      	strb	r2, [r1, #0]
 800256e:	781a      	ldrb	r2, [r3, #0]
 8002570:	3201      	adds	r2, #1
 8002572:	701a      	strb	r2, [r3, #0]
 8002574:	e790      	b.n	8002498 <_dtoa_r+0x608>
 8002576:	4ba6      	ldr	r3, [pc, #664]	; (8002810 <_dtoa_r+0x980>)
 8002578:	2200      	movs	r2, #0
 800257a:	f7fe f845 	bl	8000608 <__aeabi_dmul>
 800257e:	2200      	movs	r2, #0
 8002580:	2300      	movs	r3, #0
 8002582:	4606      	mov	r6, r0
 8002584:	460f      	mov	r7, r1
 8002586:	f7fe faa7 	bl	8000ad8 <__aeabi_dcmpeq>
 800258a:	2800      	cmp	r0, #0
 800258c:	d09d      	beq.n	80024ca <_dtoa_r+0x63a>
 800258e:	e7cf      	b.n	8002530 <_dtoa_r+0x6a0>
 8002590:	9a08      	ldr	r2, [sp, #32]
 8002592:	2a00      	cmp	r2, #0
 8002594:	f000 80d7 	beq.w	8002746 <_dtoa_r+0x8b6>
 8002598:	9a06      	ldr	r2, [sp, #24]
 800259a:	2a01      	cmp	r2, #1
 800259c:	f300 80ba 	bgt.w	8002714 <_dtoa_r+0x884>
 80025a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80025a2:	2a00      	cmp	r2, #0
 80025a4:	f000 80b2 	beq.w	800270c <_dtoa_r+0x87c>
 80025a8:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80025ac:	9e07      	ldr	r6, [sp, #28]
 80025ae:	9d04      	ldr	r5, [sp, #16]
 80025b0:	9a04      	ldr	r2, [sp, #16]
 80025b2:	441a      	add	r2, r3
 80025b4:	9204      	str	r2, [sp, #16]
 80025b6:	9a05      	ldr	r2, [sp, #20]
 80025b8:	2101      	movs	r1, #1
 80025ba:	441a      	add	r2, r3
 80025bc:	4620      	mov	r0, r4
 80025be:	9205      	str	r2, [sp, #20]
 80025c0:	f000 fb66 	bl	8002c90 <__i2b>
 80025c4:	4607      	mov	r7, r0
 80025c6:	2d00      	cmp	r5, #0
 80025c8:	dd0c      	ble.n	80025e4 <_dtoa_r+0x754>
 80025ca:	9b05      	ldr	r3, [sp, #20]
 80025cc:	2b00      	cmp	r3, #0
 80025ce:	dd09      	ble.n	80025e4 <_dtoa_r+0x754>
 80025d0:	42ab      	cmp	r3, r5
 80025d2:	9a04      	ldr	r2, [sp, #16]
 80025d4:	bfa8      	it	ge
 80025d6:	462b      	movge	r3, r5
 80025d8:	1ad2      	subs	r2, r2, r3
 80025da:	9204      	str	r2, [sp, #16]
 80025dc:	9a05      	ldr	r2, [sp, #20]
 80025de:	1aed      	subs	r5, r5, r3
 80025e0:	1ad3      	subs	r3, r2, r3
 80025e2:	9305      	str	r3, [sp, #20]
 80025e4:	9b07      	ldr	r3, [sp, #28]
 80025e6:	b31b      	cbz	r3, 8002630 <_dtoa_r+0x7a0>
 80025e8:	9b08      	ldr	r3, [sp, #32]
 80025ea:	2b00      	cmp	r3, #0
 80025ec:	f000 80af 	beq.w	800274e <_dtoa_r+0x8be>
 80025f0:	2e00      	cmp	r6, #0
 80025f2:	dd13      	ble.n	800261c <_dtoa_r+0x78c>
 80025f4:	4639      	mov	r1, r7
 80025f6:	4632      	mov	r2, r6
 80025f8:	4620      	mov	r0, r4
 80025fa:	f000 fc09 	bl	8002e10 <__pow5mult>
 80025fe:	ee18 2a10 	vmov	r2, s16
 8002602:	4601      	mov	r1, r0
 8002604:	4607      	mov	r7, r0
 8002606:	4620      	mov	r0, r4
 8002608:	f000 fb58 	bl	8002cbc <__multiply>
 800260c:	ee18 1a10 	vmov	r1, s16
 8002610:	4680      	mov	r8, r0
 8002612:	4620      	mov	r0, r4
 8002614:	f000 fa84 	bl	8002b20 <_Bfree>
 8002618:	ee08 8a10 	vmov	s16, r8
 800261c:	9b07      	ldr	r3, [sp, #28]
 800261e:	1b9a      	subs	r2, r3, r6
 8002620:	d006      	beq.n	8002630 <_dtoa_r+0x7a0>
 8002622:	ee18 1a10 	vmov	r1, s16
 8002626:	4620      	mov	r0, r4
 8002628:	f000 fbf2 	bl	8002e10 <__pow5mult>
 800262c:	ee08 0a10 	vmov	s16, r0
 8002630:	2101      	movs	r1, #1
 8002632:	4620      	mov	r0, r4
 8002634:	f000 fb2c 	bl	8002c90 <__i2b>
 8002638:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800263a:	2b00      	cmp	r3, #0
 800263c:	4606      	mov	r6, r0
 800263e:	f340 8088 	ble.w	8002752 <_dtoa_r+0x8c2>
 8002642:	461a      	mov	r2, r3
 8002644:	4601      	mov	r1, r0
 8002646:	4620      	mov	r0, r4
 8002648:	f000 fbe2 	bl	8002e10 <__pow5mult>
 800264c:	9b06      	ldr	r3, [sp, #24]
 800264e:	2b01      	cmp	r3, #1
 8002650:	4606      	mov	r6, r0
 8002652:	f340 8081 	ble.w	8002758 <_dtoa_r+0x8c8>
 8002656:	f04f 0800 	mov.w	r8, #0
 800265a:	6933      	ldr	r3, [r6, #16]
 800265c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002660:	6918      	ldr	r0, [r3, #16]
 8002662:	f000 fac5 	bl	8002bf0 <__hi0bits>
 8002666:	f1c0 0020 	rsb	r0, r0, #32
 800266a:	9b05      	ldr	r3, [sp, #20]
 800266c:	4418      	add	r0, r3
 800266e:	f010 001f 	ands.w	r0, r0, #31
 8002672:	f000 8092 	beq.w	800279a <_dtoa_r+0x90a>
 8002676:	f1c0 0320 	rsb	r3, r0, #32
 800267a:	2b04      	cmp	r3, #4
 800267c:	f340 808a 	ble.w	8002794 <_dtoa_r+0x904>
 8002680:	f1c0 001c 	rsb	r0, r0, #28
 8002684:	9b04      	ldr	r3, [sp, #16]
 8002686:	4403      	add	r3, r0
 8002688:	9304      	str	r3, [sp, #16]
 800268a:	9b05      	ldr	r3, [sp, #20]
 800268c:	4403      	add	r3, r0
 800268e:	4405      	add	r5, r0
 8002690:	9305      	str	r3, [sp, #20]
 8002692:	9b04      	ldr	r3, [sp, #16]
 8002694:	2b00      	cmp	r3, #0
 8002696:	dd07      	ble.n	80026a8 <_dtoa_r+0x818>
 8002698:	ee18 1a10 	vmov	r1, s16
 800269c:	461a      	mov	r2, r3
 800269e:	4620      	mov	r0, r4
 80026a0:	f000 fc10 	bl	8002ec4 <__lshift>
 80026a4:	ee08 0a10 	vmov	s16, r0
 80026a8:	9b05      	ldr	r3, [sp, #20]
 80026aa:	2b00      	cmp	r3, #0
 80026ac:	dd05      	ble.n	80026ba <_dtoa_r+0x82a>
 80026ae:	4631      	mov	r1, r6
 80026b0:	461a      	mov	r2, r3
 80026b2:	4620      	mov	r0, r4
 80026b4:	f000 fc06 	bl	8002ec4 <__lshift>
 80026b8:	4606      	mov	r6, r0
 80026ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80026bc:	2b00      	cmp	r3, #0
 80026be:	d06e      	beq.n	800279e <_dtoa_r+0x90e>
 80026c0:	ee18 0a10 	vmov	r0, s16
 80026c4:	4631      	mov	r1, r6
 80026c6:	f000 fc6d 	bl	8002fa4 <__mcmp>
 80026ca:	2800      	cmp	r0, #0
 80026cc:	da67      	bge.n	800279e <_dtoa_r+0x90e>
 80026ce:	9b00      	ldr	r3, [sp, #0]
 80026d0:	3b01      	subs	r3, #1
 80026d2:	ee18 1a10 	vmov	r1, s16
 80026d6:	9300      	str	r3, [sp, #0]
 80026d8:	220a      	movs	r2, #10
 80026da:	2300      	movs	r3, #0
 80026dc:	4620      	mov	r0, r4
 80026de:	f000 fa41 	bl	8002b64 <__multadd>
 80026e2:	9b08      	ldr	r3, [sp, #32]
 80026e4:	ee08 0a10 	vmov	s16, r0
 80026e8:	2b00      	cmp	r3, #0
 80026ea:	f000 81b1 	beq.w	8002a50 <_dtoa_r+0xbc0>
 80026ee:	2300      	movs	r3, #0
 80026f0:	4639      	mov	r1, r7
 80026f2:	220a      	movs	r2, #10
 80026f4:	4620      	mov	r0, r4
 80026f6:	f000 fa35 	bl	8002b64 <__multadd>
 80026fa:	9b02      	ldr	r3, [sp, #8]
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	4607      	mov	r7, r0
 8002700:	f300 808e 	bgt.w	8002820 <_dtoa_r+0x990>
 8002704:	9b06      	ldr	r3, [sp, #24]
 8002706:	2b02      	cmp	r3, #2
 8002708:	dc51      	bgt.n	80027ae <_dtoa_r+0x91e>
 800270a:	e089      	b.n	8002820 <_dtoa_r+0x990>
 800270c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800270e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002712:	e74b      	b.n	80025ac <_dtoa_r+0x71c>
 8002714:	9b03      	ldr	r3, [sp, #12]
 8002716:	1e5e      	subs	r6, r3, #1
 8002718:	9b07      	ldr	r3, [sp, #28]
 800271a:	42b3      	cmp	r3, r6
 800271c:	bfbf      	itttt	lt
 800271e:	9b07      	ldrlt	r3, [sp, #28]
 8002720:	9607      	strlt	r6, [sp, #28]
 8002722:	1af2      	sublt	r2, r6, r3
 8002724:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8002726:	bfb6      	itet	lt
 8002728:	189b      	addlt	r3, r3, r2
 800272a:	1b9e      	subge	r6, r3, r6
 800272c:	930a      	strlt	r3, [sp, #40]	; 0x28
 800272e:	9b03      	ldr	r3, [sp, #12]
 8002730:	bfb8      	it	lt
 8002732:	2600      	movlt	r6, #0
 8002734:	2b00      	cmp	r3, #0
 8002736:	bfb7      	itett	lt
 8002738:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800273c:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 8002740:	1a9d      	sublt	r5, r3, r2
 8002742:	2300      	movlt	r3, #0
 8002744:	e734      	b.n	80025b0 <_dtoa_r+0x720>
 8002746:	9e07      	ldr	r6, [sp, #28]
 8002748:	9d04      	ldr	r5, [sp, #16]
 800274a:	9f08      	ldr	r7, [sp, #32]
 800274c:	e73b      	b.n	80025c6 <_dtoa_r+0x736>
 800274e:	9a07      	ldr	r2, [sp, #28]
 8002750:	e767      	b.n	8002622 <_dtoa_r+0x792>
 8002752:	9b06      	ldr	r3, [sp, #24]
 8002754:	2b01      	cmp	r3, #1
 8002756:	dc18      	bgt.n	800278a <_dtoa_r+0x8fa>
 8002758:	f1ba 0f00 	cmp.w	sl, #0
 800275c:	d115      	bne.n	800278a <_dtoa_r+0x8fa>
 800275e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8002762:	b993      	cbnz	r3, 800278a <_dtoa_r+0x8fa>
 8002764:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8002768:	0d1b      	lsrs	r3, r3, #20
 800276a:	051b      	lsls	r3, r3, #20
 800276c:	b183      	cbz	r3, 8002790 <_dtoa_r+0x900>
 800276e:	9b04      	ldr	r3, [sp, #16]
 8002770:	3301      	adds	r3, #1
 8002772:	9304      	str	r3, [sp, #16]
 8002774:	9b05      	ldr	r3, [sp, #20]
 8002776:	3301      	adds	r3, #1
 8002778:	9305      	str	r3, [sp, #20]
 800277a:	f04f 0801 	mov.w	r8, #1
 800277e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002780:	2b00      	cmp	r3, #0
 8002782:	f47f af6a 	bne.w	800265a <_dtoa_r+0x7ca>
 8002786:	2001      	movs	r0, #1
 8002788:	e76f      	b.n	800266a <_dtoa_r+0x7da>
 800278a:	f04f 0800 	mov.w	r8, #0
 800278e:	e7f6      	b.n	800277e <_dtoa_r+0x8ee>
 8002790:	4698      	mov	r8, r3
 8002792:	e7f4      	b.n	800277e <_dtoa_r+0x8ee>
 8002794:	f43f af7d 	beq.w	8002692 <_dtoa_r+0x802>
 8002798:	4618      	mov	r0, r3
 800279a:	301c      	adds	r0, #28
 800279c:	e772      	b.n	8002684 <_dtoa_r+0x7f4>
 800279e:	9b03      	ldr	r3, [sp, #12]
 80027a0:	2b00      	cmp	r3, #0
 80027a2:	dc37      	bgt.n	8002814 <_dtoa_r+0x984>
 80027a4:	9b06      	ldr	r3, [sp, #24]
 80027a6:	2b02      	cmp	r3, #2
 80027a8:	dd34      	ble.n	8002814 <_dtoa_r+0x984>
 80027aa:	9b03      	ldr	r3, [sp, #12]
 80027ac:	9302      	str	r3, [sp, #8]
 80027ae:	9b02      	ldr	r3, [sp, #8]
 80027b0:	b96b      	cbnz	r3, 80027ce <_dtoa_r+0x93e>
 80027b2:	4631      	mov	r1, r6
 80027b4:	2205      	movs	r2, #5
 80027b6:	4620      	mov	r0, r4
 80027b8:	f000 f9d4 	bl	8002b64 <__multadd>
 80027bc:	4601      	mov	r1, r0
 80027be:	4606      	mov	r6, r0
 80027c0:	ee18 0a10 	vmov	r0, s16
 80027c4:	f000 fbee 	bl	8002fa4 <__mcmp>
 80027c8:	2800      	cmp	r0, #0
 80027ca:	f73f adbb 	bgt.w	8002344 <_dtoa_r+0x4b4>
 80027ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80027d0:	9d01      	ldr	r5, [sp, #4]
 80027d2:	43db      	mvns	r3, r3
 80027d4:	9300      	str	r3, [sp, #0]
 80027d6:	f04f 0800 	mov.w	r8, #0
 80027da:	4631      	mov	r1, r6
 80027dc:	4620      	mov	r0, r4
 80027de:	f000 f99f 	bl	8002b20 <_Bfree>
 80027e2:	2f00      	cmp	r7, #0
 80027e4:	f43f aea4 	beq.w	8002530 <_dtoa_r+0x6a0>
 80027e8:	f1b8 0f00 	cmp.w	r8, #0
 80027ec:	d005      	beq.n	80027fa <_dtoa_r+0x96a>
 80027ee:	45b8      	cmp	r8, r7
 80027f0:	d003      	beq.n	80027fa <_dtoa_r+0x96a>
 80027f2:	4641      	mov	r1, r8
 80027f4:	4620      	mov	r0, r4
 80027f6:	f000 f993 	bl	8002b20 <_Bfree>
 80027fa:	4639      	mov	r1, r7
 80027fc:	4620      	mov	r0, r4
 80027fe:	f000 f98f 	bl	8002b20 <_Bfree>
 8002802:	e695      	b.n	8002530 <_dtoa_r+0x6a0>
 8002804:	2600      	movs	r6, #0
 8002806:	4637      	mov	r7, r6
 8002808:	e7e1      	b.n	80027ce <_dtoa_r+0x93e>
 800280a:	9700      	str	r7, [sp, #0]
 800280c:	4637      	mov	r7, r6
 800280e:	e599      	b.n	8002344 <_dtoa_r+0x4b4>
 8002810:	40240000 	.word	0x40240000
 8002814:	9b08      	ldr	r3, [sp, #32]
 8002816:	2b00      	cmp	r3, #0
 8002818:	f000 80ca 	beq.w	80029b0 <_dtoa_r+0xb20>
 800281c:	9b03      	ldr	r3, [sp, #12]
 800281e:	9302      	str	r3, [sp, #8]
 8002820:	2d00      	cmp	r5, #0
 8002822:	dd05      	ble.n	8002830 <_dtoa_r+0x9a0>
 8002824:	4639      	mov	r1, r7
 8002826:	462a      	mov	r2, r5
 8002828:	4620      	mov	r0, r4
 800282a:	f000 fb4b 	bl	8002ec4 <__lshift>
 800282e:	4607      	mov	r7, r0
 8002830:	f1b8 0f00 	cmp.w	r8, #0
 8002834:	d05b      	beq.n	80028ee <_dtoa_r+0xa5e>
 8002836:	6879      	ldr	r1, [r7, #4]
 8002838:	4620      	mov	r0, r4
 800283a:	f000 f931 	bl	8002aa0 <_Balloc>
 800283e:	4605      	mov	r5, r0
 8002840:	b928      	cbnz	r0, 800284e <_dtoa_r+0x9be>
 8002842:	4b87      	ldr	r3, [pc, #540]	; (8002a60 <_dtoa_r+0xbd0>)
 8002844:	4602      	mov	r2, r0
 8002846:	f240 21ea 	movw	r1, #746	; 0x2ea
 800284a:	f7ff bb3b 	b.w	8001ec4 <_dtoa_r+0x34>
 800284e:	693a      	ldr	r2, [r7, #16]
 8002850:	3202      	adds	r2, #2
 8002852:	0092      	lsls	r2, r2, #2
 8002854:	f107 010c 	add.w	r1, r7, #12
 8002858:	300c      	adds	r0, #12
 800285a:	f000 f913 	bl	8002a84 <memcpy>
 800285e:	2201      	movs	r2, #1
 8002860:	4629      	mov	r1, r5
 8002862:	4620      	mov	r0, r4
 8002864:	f000 fb2e 	bl	8002ec4 <__lshift>
 8002868:	9b01      	ldr	r3, [sp, #4]
 800286a:	f103 0901 	add.w	r9, r3, #1
 800286e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8002872:	4413      	add	r3, r2
 8002874:	9305      	str	r3, [sp, #20]
 8002876:	f00a 0301 	and.w	r3, sl, #1
 800287a:	46b8      	mov	r8, r7
 800287c:	9304      	str	r3, [sp, #16]
 800287e:	4607      	mov	r7, r0
 8002880:	4631      	mov	r1, r6
 8002882:	ee18 0a10 	vmov	r0, s16
 8002886:	f7ff fa75 	bl	8001d74 <quorem>
 800288a:	4641      	mov	r1, r8
 800288c:	9002      	str	r0, [sp, #8]
 800288e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8002892:	ee18 0a10 	vmov	r0, s16
 8002896:	f000 fb85 	bl	8002fa4 <__mcmp>
 800289a:	463a      	mov	r2, r7
 800289c:	9003      	str	r0, [sp, #12]
 800289e:	4631      	mov	r1, r6
 80028a0:	4620      	mov	r0, r4
 80028a2:	f000 fb9b 	bl	8002fdc <__mdiff>
 80028a6:	68c2      	ldr	r2, [r0, #12]
 80028a8:	f109 3bff 	add.w	fp, r9, #4294967295
 80028ac:	4605      	mov	r5, r0
 80028ae:	bb02      	cbnz	r2, 80028f2 <_dtoa_r+0xa62>
 80028b0:	4601      	mov	r1, r0
 80028b2:	ee18 0a10 	vmov	r0, s16
 80028b6:	f000 fb75 	bl	8002fa4 <__mcmp>
 80028ba:	4602      	mov	r2, r0
 80028bc:	4629      	mov	r1, r5
 80028be:	4620      	mov	r0, r4
 80028c0:	9207      	str	r2, [sp, #28]
 80028c2:	f000 f92d 	bl	8002b20 <_Bfree>
 80028c6:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80028ca:	ea43 0102 	orr.w	r1, r3, r2
 80028ce:	9b04      	ldr	r3, [sp, #16]
 80028d0:	430b      	orrs	r3, r1
 80028d2:	464d      	mov	r5, r9
 80028d4:	d10f      	bne.n	80028f6 <_dtoa_r+0xa66>
 80028d6:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 80028da:	d02a      	beq.n	8002932 <_dtoa_r+0xaa2>
 80028dc:	9b03      	ldr	r3, [sp, #12]
 80028de:	2b00      	cmp	r3, #0
 80028e0:	dd02      	ble.n	80028e8 <_dtoa_r+0xa58>
 80028e2:	9b02      	ldr	r3, [sp, #8]
 80028e4:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 80028e8:	f88b a000 	strb.w	sl, [fp]
 80028ec:	e775      	b.n	80027da <_dtoa_r+0x94a>
 80028ee:	4638      	mov	r0, r7
 80028f0:	e7ba      	b.n	8002868 <_dtoa_r+0x9d8>
 80028f2:	2201      	movs	r2, #1
 80028f4:	e7e2      	b.n	80028bc <_dtoa_r+0xa2c>
 80028f6:	9b03      	ldr	r3, [sp, #12]
 80028f8:	2b00      	cmp	r3, #0
 80028fa:	db04      	blt.n	8002906 <_dtoa_r+0xa76>
 80028fc:	9906      	ldr	r1, [sp, #24]
 80028fe:	430b      	orrs	r3, r1
 8002900:	9904      	ldr	r1, [sp, #16]
 8002902:	430b      	orrs	r3, r1
 8002904:	d122      	bne.n	800294c <_dtoa_r+0xabc>
 8002906:	2a00      	cmp	r2, #0
 8002908:	ddee      	ble.n	80028e8 <_dtoa_r+0xa58>
 800290a:	ee18 1a10 	vmov	r1, s16
 800290e:	2201      	movs	r2, #1
 8002910:	4620      	mov	r0, r4
 8002912:	f000 fad7 	bl	8002ec4 <__lshift>
 8002916:	4631      	mov	r1, r6
 8002918:	ee08 0a10 	vmov	s16, r0
 800291c:	f000 fb42 	bl	8002fa4 <__mcmp>
 8002920:	2800      	cmp	r0, #0
 8002922:	dc03      	bgt.n	800292c <_dtoa_r+0xa9c>
 8002924:	d1e0      	bne.n	80028e8 <_dtoa_r+0xa58>
 8002926:	f01a 0f01 	tst.w	sl, #1
 800292a:	d0dd      	beq.n	80028e8 <_dtoa_r+0xa58>
 800292c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8002930:	d1d7      	bne.n	80028e2 <_dtoa_r+0xa52>
 8002932:	2339      	movs	r3, #57	; 0x39
 8002934:	f88b 3000 	strb.w	r3, [fp]
 8002938:	462b      	mov	r3, r5
 800293a:	461d      	mov	r5, r3
 800293c:	3b01      	subs	r3, #1
 800293e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002942:	2a39      	cmp	r2, #57	; 0x39
 8002944:	d071      	beq.n	8002a2a <_dtoa_r+0xb9a>
 8002946:	3201      	adds	r2, #1
 8002948:	701a      	strb	r2, [r3, #0]
 800294a:	e746      	b.n	80027da <_dtoa_r+0x94a>
 800294c:	2a00      	cmp	r2, #0
 800294e:	dd07      	ble.n	8002960 <_dtoa_r+0xad0>
 8002950:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8002954:	d0ed      	beq.n	8002932 <_dtoa_r+0xaa2>
 8002956:	f10a 0301 	add.w	r3, sl, #1
 800295a:	f88b 3000 	strb.w	r3, [fp]
 800295e:	e73c      	b.n	80027da <_dtoa_r+0x94a>
 8002960:	9b05      	ldr	r3, [sp, #20]
 8002962:	f809 ac01 	strb.w	sl, [r9, #-1]
 8002966:	4599      	cmp	r9, r3
 8002968:	d047      	beq.n	80029fa <_dtoa_r+0xb6a>
 800296a:	ee18 1a10 	vmov	r1, s16
 800296e:	2300      	movs	r3, #0
 8002970:	220a      	movs	r2, #10
 8002972:	4620      	mov	r0, r4
 8002974:	f000 f8f6 	bl	8002b64 <__multadd>
 8002978:	45b8      	cmp	r8, r7
 800297a:	ee08 0a10 	vmov	s16, r0
 800297e:	f04f 0300 	mov.w	r3, #0
 8002982:	f04f 020a 	mov.w	r2, #10
 8002986:	4641      	mov	r1, r8
 8002988:	4620      	mov	r0, r4
 800298a:	d106      	bne.n	800299a <_dtoa_r+0xb0a>
 800298c:	f000 f8ea 	bl	8002b64 <__multadd>
 8002990:	4680      	mov	r8, r0
 8002992:	4607      	mov	r7, r0
 8002994:	f109 0901 	add.w	r9, r9, #1
 8002998:	e772      	b.n	8002880 <_dtoa_r+0x9f0>
 800299a:	f000 f8e3 	bl	8002b64 <__multadd>
 800299e:	4639      	mov	r1, r7
 80029a0:	4680      	mov	r8, r0
 80029a2:	2300      	movs	r3, #0
 80029a4:	220a      	movs	r2, #10
 80029a6:	4620      	mov	r0, r4
 80029a8:	f000 f8dc 	bl	8002b64 <__multadd>
 80029ac:	4607      	mov	r7, r0
 80029ae:	e7f1      	b.n	8002994 <_dtoa_r+0xb04>
 80029b0:	9b03      	ldr	r3, [sp, #12]
 80029b2:	9302      	str	r3, [sp, #8]
 80029b4:	9d01      	ldr	r5, [sp, #4]
 80029b6:	ee18 0a10 	vmov	r0, s16
 80029ba:	4631      	mov	r1, r6
 80029bc:	f7ff f9da 	bl	8001d74 <quorem>
 80029c0:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 80029c4:	9b01      	ldr	r3, [sp, #4]
 80029c6:	f805 ab01 	strb.w	sl, [r5], #1
 80029ca:	1aea      	subs	r2, r5, r3
 80029cc:	9b02      	ldr	r3, [sp, #8]
 80029ce:	4293      	cmp	r3, r2
 80029d0:	dd09      	ble.n	80029e6 <_dtoa_r+0xb56>
 80029d2:	ee18 1a10 	vmov	r1, s16
 80029d6:	2300      	movs	r3, #0
 80029d8:	220a      	movs	r2, #10
 80029da:	4620      	mov	r0, r4
 80029dc:	f000 f8c2 	bl	8002b64 <__multadd>
 80029e0:	ee08 0a10 	vmov	s16, r0
 80029e4:	e7e7      	b.n	80029b6 <_dtoa_r+0xb26>
 80029e6:	9b02      	ldr	r3, [sp, #8]
 80029e8:	2b00      	cmp	r3, #0
 80029ea:	bfc8      	it	gt
 80029ec:	461d      	movgt	r5, r3
 80029ee:	9b01      	ldr	r3, [sp, #4]
 80029f0:	bfd8      	it	le
 80029f2:	2501      	movle	r5, #1
 80029f4:	441d      	add	r5, r3
 80029f6:	f04f 0800 	mov.w	r8, #0
 80029fa:	ee18 1a10 	vmov	r1, s16
 80029fe:	2201      	movs	r2, #1
 8002a00:	4620      	mov	r0, r4
 8002a02:	f000 fa5f 	bl	8002ec4 <__lshift>
 8002a06:	4631      	mov	r1, r6
 8002a08:	ee08 0a10 	vmov	s16, r0
 8002a0c:	f000 faca 	bl	8002fa4 <__mcmp>
 8002a10:	2800      	cmp	r0, #0
 8002a12:	dc91      	bgt.n	8002938 <_dtoa_r+0xaa8>
 8002a14:	d102      	bne.n	8002a1c <_dtoa_r+0xb8c>
 8002a16:	f01a 0f01 	tst.w	sl, #1
 8002a1a:	d18d      	bne.n	8002938 <_dtoa_r+0xaa8>
 8002a1c:	462b      	mov	r3, r5
 8002a1e:	461d      	mov	r5, r3
 8002a20:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002a24:	2a30      	cmp	r2, #48	; 0x30
 8002a26:	d0fa      	beq.n	8002a1e <_dtoa_r+0xb8e>
 8002a28:	e6d7      	b.n	80027da <_dtoa_r+0x94a>
 8002a2a:	9a01      	ldr	r2, [sp, #4]
 8002a2c:	429a      	cmp	r2, r3
 8002a2e:	d184      	bne.n	800293a <_dtoa_r+0xaaa>
 8002a30:	9b00      	ldr	r3, [sp, #0]
 8002a32:	3301      	adds	r3, #1
 8002a34:	9300      	str	r3, [sp, #0]
 8002a36:	2331      	movs	r3, #49	; 0x31
 8002a38:	7013      	strb	r3, [r2, #0]
 8002a3a:	e6ce      	b.n	80027da <_dtoa_r+0x94a>
 8002a3c:	4b09      	ldr	r3, [pc, #36]	; (8002a64 <_dtoa_r+0xbd4>)
 8002a3e:	f7ff ba95 	b.w	8001f6c <_dtoa_r+0xdc>
 8002a42:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002a44:	2b00      	cmp	r3, #0
 8002a46:	f47f aa6e 	bne.w	8001f26 <_dtoa_r+0x96>
 8002a4a:	4b07      	ldr	r3, [pc, #28]	; (8002a68 <_dtoa_r+0xbd8>)
 8002a4c:	f7ff ba8e 	b.w	8001f6c <_dtoa_r+0xdc>
 8002a50:	9b02      	ldr	r3, [sp, #8]
 8002a52:	2b00      	cmp	r3, #0
 8002a54:	dcae      	bgt.n	80029b4 <_dtoa_r+0xb24>
 8002a56:	9b06      	ldr	r3, [sp, #24]
 8002a58:	2b02      	cmp	r3, #2
 8002a5a:	f73f aea8 	bgt.w	80027ae <_dtoa_r+0x91e>
 8002a5e:	e7a9      	b.n	80029b4 <_dtoa_r+0xb24>
 8002a60:	08003f9f 	.word	0x08003f9f
 8002a64:	08003efc 	.word	0x08003efc
 8002a68:	08003f20 	.word	0x08003f20

08002a6c <_localeconv_r>:
 8002a6c:	4800      	ldr	r0, [pc, #0]	; (8002a70 <_localeconv_r+0x4>)
 8002a6e:	4770      	bx	lr
 8002a70:	20000154 	.word	0x20000154

08002a74 <malloc>:
 8002a74:	4b02      	ldr	r3, [pc, #8]	; (8002a80 <malloc+0xc>)
 8002a76:	4601      	mov	r1, r0
 8002a78:	6818      	ldr	r0, [r3, #0]
 8002a7a:	f000 bc17 	b.w	80032ac <_malloc_r>
 8002a7e:	bf00      	nop
 8002a80:	20000000 	.word	0x20000000

08002a84 <memcpy>:
 8002a84:	440a      	add	r2, r1
 8002a86:	4291      	cmp	r1, r2
 8002a88:	f100 33ff 	add.w	r3, r0, #4294967295
 8002a8c:	d100      	bne.n	8002a90 <memcpy+0xc>
 8002a8e:	4770      	bx	lr
 8002a90:	b510      	push	{r4, lr}
 8002a92:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002a96:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002a9a:	4291      	cmp	r1, r2
 8002a9c:	d1f9      	bne.n	8002a92 <memcpy+0xe>
 8002a9e:	bd10      	pop	{r4, pc}

08002aa0 <_Balloc>:
 8002aa0:	b570      	push	{r4, r5, r6, lr}
 8002aa2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8002aa4:	4604      	mov	r4, r0
 8002aa6:	460d      	mov	r5, r1
 8002aa8:	b976      	cbnz	r6, 8002ac8 <_Balloc+0x28>
 8002aaa:	2010      	movs	r0, #16
 8002aac:	f7ff ffe2 	bl	8002a74 <malloc>
 8002ab0:	4602      	mov	r2, r0
 8002ab2:	6260      	str	r0, [r4, #36]	; 0x24
 8002ab4:	b920      	cbnz	r0, 8002ac0 <_Balloc+0x20>
 8002ab6:	4b18      	ldr	r3, [pc, #96]	; (8002b18 <_Balloc+0x78>)
 8002ab8:	4818      	ldr	r0, [pc, #96]	; (8002b1c <_Balloc+0x7c>)
 8002aba:	2166      	movs	r1, #102	; 0x66
 8002abc:	f000 fc7a 	bl	80033b4 <__assert_func>
 8002ac0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8002ac4:	6006      	str	r6, [r0, #0]
 8002ac6:	60c6      	str	r6, [r0, #12]
 8002ac8:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8002aca:	68f3      	ldr	r3, [r6, #12]
 8002acc:	b183      	cbz	r3, 8002af0 <_Balloc+0x50>
 8002ace:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002ad0:	68db      	ldr	r3, [r3, #12]
 8002ad2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8002ad6:	b9b8      	cbnz	r0, 8002b08 <_Balloc+0x68>
 8002ad8:	2101      	movs	r1, #1
 8002ada:	fa01 f605 	lsl.w	r6, r1, r5
 8002ade:	1d72      	adds	r2, r6, #5
 8002ae0:	0092      	lsls	r2, r2, #2
 8002ae2:	4620      	mov	r0, r4
 8002ae4:	f000 fb60 	bl	80031a8 <_calloc_r>
 8002ae8:	b160      	cbz	r0, 8002b04 <_Balloc+0x64>
 8002aea:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8002aee:	e00e      	b.n	8002b0e <_Balloc+0x6e>
 8002af0:	2221      	movs	r2, #33	; 0x21
 8002af2:	2104      	movs	r1, #4
 8002af4:	4620      	mov	r0, r4
 8002af6:	f000 fb57 	bl	80031a8 <_calloc_r>
 8002afa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002afc:	60f0      	str	r0, [r6, #12]
 8002afe:	68db      	ldr	r3, [r3, #12]
 8002b00:	2b00      	cmp	r3, #0
 8002b02:	d1e4      	bne.n	8002ace <_Balloc+0x2e>
 8002b04:	2000      	movs	r0, #0
 8002b06:	bd70      	pop	{r4, r5, r6, pc}
 8002b08:	6802      	ldr	r2, [r0, #0]
 8002b0a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8002b0e:	2300      	movs	r3, #0
 8002b10:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8002b14:	e7f7      	b.n	8002b06 <_Balloc+0x66>
 8002b16:	bf00      	nop
 8002b18:	08003f2d 	.word	0x08003f2d
 8002b1c:	08003fb0 	.word	0x08003fb0

08002b20 <_Bfree>:
 8002b20:	b570      	push	{r4, r5, r6, lr}
 8002b22:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8002b24:	4605      	mov	r5, r0
 8002b26:	460c      	mov	r4, r1
 8002b28:	b976      	cbnz	r6, 8002b48 <_Bfree+0x28>
 8002b2a:	2010      	movs	r0, #16
 8002b2c:	f7ff ffa2 	bl	8002a74 <malloc>
 8002b30:	4602      	mov	r2, r0
 8002b32:	6268      	str	r0, [r5, #36]	; 0x24
 8002b34:	b920      	cbnz	r0, 8002b40 <_Bfree+0x20>
 8002b36:	4b09      	ldr	r3, [pc, #36]	; (8002b5c <_Bfree+0x3c>)
 8002b38:	4809      	ldr	r0, [pc, #36]	; (8002b60 <_Bfree+0x40>)
 8002b3a:	218a      	movs	r1, #138	; 0x8a
 8002b3c:	f000 fc3a 	bl	80033b4 <__assert_func>
 8002b40:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8002b44:	6006      	str	r6, [r0, #0]
 8002b46:	60c6      	str	r6, [r0, #12]
 8002b48:	b13c      	cbz	r4, 8002b5a <_Bfree+0x3a>
 8002b4a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002b4c:	6862      	ldr	r2, [r4, #4]
 8002b4e:	68db      	ldr	r3, [r3, #12]
 8002b50:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8002b54:	6021      	str	r1, [r4, #0]
 8002b56:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8002b5a:	bd70      	pop	{r4, r5, r6, pc}
 8002b5c:	08003f2d 	.word	0x08003f2d
 8002b60:	08003fb0 	.word	0x08003fb0

08002b64 <__multadd>:
 8002b64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002b68:	690d      	ldr	r5, [r1, #16]
 8002b6a:	4607      	mov	r7, r0
 8002b6c:	460c      	mov	r4, r1
 8002b6e:	461e      	mov	r6, r3
 8002b70:	f101 0c14 	add.w	ip, r1, #20
 8002b74:	2000      	movs	r0, #0
 8002b76:	f8dc 3000 	ldr.w	r3, [ip]
 8002b7a:	b299      	uxth	r1, r3
 8002b7c:	fb02 6101 	mla	r1, r2, r1, r6
 8002b80:	0c1e      	lsrs	r6, r3, #16
 8002b82:	0c0b      	lsrs	r3, r1, #16
 8002b84:	fb02 3306 	mla	r3, r2, r6, r3
 8002b88:	b289      	uxth	r1, r1
 8002b8a:	3001      	adds	r0, #1
 8002b8c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8002b90:	4285      	cmp	r5, r0
 8002b92:	f84c 1b04 	str.w	r1, [ip], #4
 8002b96:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8002b9a:	dcec      	bgt.n	8002b76 <__multadd+0x12>
 8002b9c:	b30e      	cbz	r6, 8002be2 <__multadd+0x7e>
 8002b9e:	68a3      	ldr	r3, [r4, #8]
 8002ba0:	42ab      	cmp	r3, r5
 8002ba2:	dc19      	bgt.n	8002bd8 <__multadd+0x74>
 8002ba4:	6861      	ldr	r1, [r4, #4]
 8002ba6:	4638      	mov	r0, r7
 8002ba8:	3101      	adds	r1, #1
 8002baa:	f7ff ff79 	bl	8002aa0 <_Balloc>
 8002bae:	4680      	mov	r8, r0
 8002bb0:	b928      	cbnz	r0, 8002bbe <__multadd+0x5a>
 8002bb2:	4602      	mov	r2, r0
 8002bb4:	4b0c      	ldr	r3, [pc, #48]	; (8002be8 <__multadd+0x84>)
 8002bb6:	480d      	ldr	r0, [pc, #52]	; (8002bec <__multadd+0x88>)
 8002bb8:	21b5      	movs	r1, #181	; 0xb5
 8002bba:	f000 fbfb 	bl	80033b4 <__assert_func>
 8002bbe:	6922      	ldr	r2, [r4, #16]
 8002bc0:	3202      	adds	r2, #2
 8002bc2:	f104 010c 	add.w	r1, r4, #12
 8002bc6:	0092      	lsls	r2, r2, #2
 8002bc8:	300c      	adds	r0, #12
 8002bca:	f7ff ff5b 	bl	8002a84 <memcpy>
 8002bce:	4621      	mov	r1, r4
 8002bd0:	4638      	mov	r0, r7
 8002bd2:	f7ff ffa5 	bl	8002b20 <_Bfree>
 8002bd6:	4644      	mov	r4, r8
 8002bd8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8002bdc:	3501      	adds	r5, #1
 8002bde:	615e      	str	r6, [r3, #20]
 8002be0:	6125      	str	r5, [r4, #16]
 8002be2:	4620      	mov	r0, r4
 8002be4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002be8:	08003f9f 	.word	0x08003f9f
 8002bec:	08003fb0 	.word	0x08003fb0

08002bf0 <__hi0bits>:
 8002bf0:	0c03      	lsrs	r3, r0, #16
 8002bf2:	041b      	lsls	r3, r3, #16
 8002bf4:	b9d3      	cbnz	r3, 8002c2c <__hi0bits+0x3c>
 8002bf6:	0400      	lsls	r0, r0, #16
 8002bf8:	2310      	movs	r3, #16
 8002bfa:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8002bfe:	bf04      	itt	eq
 8002c00:	0200      	lsleq	r0, r0, #8
 8002c02:	3308      	addeq	r3, #8
 8002c04:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8002c08:	bf04      	itt	eq
 8002c0a:	0100      	lsleq	r0, r0, #4
 8002c0c:	3304      	addeq	r3, #4
 8002c0e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8002c12:	bf04      	itt	eq
 8002c14:	0080      	lsleq	r0, r0, #2
 8002c16:	3302      	addeq	r3, #2
 8002c18:	2800      	cmp	r0, #0
 8002c1a:	db05      	blt.n	8002c28 <__hi0bits+0x38>
 8002c1c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8002c20:	f103 0301 	add.w	r3, r3, #1
 8002c24:	bf08      	it	eq
 8002c26:	2320      	moveq	r3, #32
 8002c28:	4618      	mov	r0, r3
 8002c2a:	4770      	bx	lr
 8002c2c:	2300      	movs	r3, #0
 8002c2e:	e7e4      	b.n	8002bfa <__hi0bits+0xa>

08002c30 <__lo0bits>:
 8002c30:	6803      	ldr	r3, [r0, #0]
 8002c32:	f013 0207 	ands.w	r2, r3, #7
 8002c36:	4601      	mov	r1, r0
 8002c38:	d00b      	beq.n	8002c52 <__lo0bits+0x22>
 8002c3a:	07da      	lsls	r2, r3, #31
 8002c3c:	d423      	bmi.n	8002c86 <__lo0bits+0x56>
 8002c3e:	0798      	lsls	r0, r3, #30
 8002c40:	bf49      	itett	mi
 8002c42:	085b      	lsrmi	r3, r3, #1
 8002c44:	089b      	lsrpl	r3, r3, #2
 8002c46:	2001      	movmi	r0, #1
 8002c48:	600b      	strmi	r3, [r1, #0]
 8002c4a:	bf5c      	itt	pl
 8002c4c:	600b      	strpl	r3, [r1, #0]
 8002c4e:	2002      	movpl	r0, #2
 8002c50:	4770      	bx	lr
 8002c52:	b298      	uxth	r0, r3
 8002c54:	b9a8      	cbnz	r0, 8002c82 <__lo0bits+0x52>
 8002c56:	0c1b      	lsrs	r3, r3, #16
 8002c58:	2010      	movs	r0, #16
 8002c5a:	b2da      	uxtb	r2, r3
 8002c5c:	b90a      	cbnz	r2, 8002c62 <__lo0bits+0x32>
 8002c5e:	3008      	adds	r0, #8
 8002c60:	0a1b      	lsrs	r3, r3, #8
 8002c62:	071a      	lsls	r2, r3, #28
 8002c64:	bf04      	itt	eq
 8002c66:	091b      	lsreq	r3, r3, #4
 8002c68:	3004      	addeq	r0, #4
 8002c6a:	079a      	lsls	r2, r3, #30
 8002c6c:	bf04      	itt	eq
 8002c6e:	089b      	lsreq	r3, r3, #2
 8002c70:	3002      	addeq	r0, #2
 8002c72:	07da      	lsls	r2, r3, #31
 8002c74:	d403      	bmi.n	8002c7e <__lo0bits+0x4e>
 8002c76:	085b      	lsrs	r3, r3, #1
 8002c78:	f100 0001 	add.w	r0, r0, #1
 8002c7c:	d005      	beq.n	8002c8a <__lo0bits+0x5a>
 8002c7e:	600b      	str	r3, [r1, #0]
 8002c80:	4770      	bx	lr
 8002c82:	4610      	mov	r0, r2
 8002c84:	e7e9      	b.n	8002c5a <__lo0bits+0x2a>
 8002c86:	2000      	movs	r0, #0
 8002c88:	4770      	bx	lr
 8002c8a:	2020      	movs	r0, #32
 8002c8c:	4770      	bx	lr
	...

08002c90 <__i2b>:
 8002c90:	b510      	push	{r4, lr}
 8002c92:	460c      	mov	r4, r1
 8002c94:	2101      	movs	r1, #1
 8002c96:	f7ff ff03 	bl	8002aa0 <_Balloc>
 8002c9a:	4602      	mov	r2, r0
 8002c9c:	b928      	cbnz	r0, 8002caa <__i2b+0x1a>
 8002c9e:	4b05      	ldr	r3, [pc, #20]	; (8002cb4 <__i2b+0x24>)
 8002ca0:	4805      	ldr	r0, [pc, #20]	; (8002cb8 <__i2b+0x28>)
 8002ca2:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8002ca6:	f000 fb85 	bl	80033b4 <__assert_func>
 8002caa:	2301      	movs	r3, #1
 8002cac:	6144      	str	r4, [r0, #20]
 8002cae:	6103      	str	r3, [r0, #16]
 8002cb0:	bd10      	pop	{r4, pc}
 8002cb2:	bf00      	nop
 8002cb4:	08003f9f 	.word	0x08003f9f
 8002cb8:	08003fb0 	.word	0x08003fb0

08002cbc <__multiply>:
 8002cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cc0:	4691      	mov	r9, r2
 8002cc2:	690a      	ldr	r2, [r1, #16]
 8002cc4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8002cc8:	429a      	cmp	r2, r3
 8002cca:	bfb8      	it	lt
 8002ccc:	460b      	movlt	r3, r1
 8002cce:	460c      	mov	r4, r1
 8002cd0:	bfbc      	itt	lt
 8002cd2:	464c      	movlt	r4, r9
 8002cd4:	4699      	movlt	r9, r3
 8002cd6:	6927      	ldr	r7, [r4, #16]
 8002cd8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8002cdc:	68a3      	ldr	r3, [r4, #8]
 8002cde:	6861      	ldr	r1, [r4, #4]
 8002ce0:	eb07 060a 	add.w	r6, r7, sl
 8002ce4:	42b3      	cmp	r3, r6
 8002ce6:	b085      	sub	sp, #20
 8002ce8:	bfb8      	it	lt
 8002cea:	3101      	addlt	r1, #1
 8002cec:	f7ff fed8 	bl	8002aa0 <_Balloc>
 8002cf0:	b930      	cbnz	r0, 8002d00 <__multiply+0x44>
 8002cf2:	4602      	mov	r2, r0
 8002cf4:	4b44      	ldr	r3, [pc, #272]	; (8002e08 <__multiply+0x14c>)
 8002cf6:	4845      	ldr	r0, [pc, #276]	; (8002e0c <__multiply+0x150>)
 8002cf8:	f240 115d 	movw	r1, #349	; 0x15d
 8002cfc:	f000 fb5a 	bl	80033b4 <__assert_func>
 8002d00:	f100 0514 	add.w	r5, r0, #20
 8002d04:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8002d08:	462b      	mov	r3, r5
 8002d0a:	2200      	movs	r2, #0
 8002d0c:	4543      	cmp	r3, r8
 8002d0e:	d321      	bcc.n	8002d54 <__multiply+0x98>
 8002d10:	f104 0314 	add.w	r3, r4, #20
 8002d14:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8002d18:	f109 0314 	add.w	r3, r9, #20
 8002d1c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8002d20:	9202      	str	r2, [sp, #8]
 8002d22:	1b3a      	subs	r2, r7, r4
 8002d24:	3a15      	subs	r2, #21
 8002d26:	f022 0203 	bic.w	r2, r2, #3
 8002d2a:	3204      	adds	r2, #4
 8002d2c:	f104 0115 	add.w	r1, r4, #21
 8002d30:	428f      	cmp	r7, r1
 8002d32:	bf38      	it	cc
 8002d34:	2204      	movcc	r2, #4
 8002d36:	9201      	str	r2, [sp, #4]
 8002d38:	9a02      	ldr	r2, [sp, #8]
 8002d3a:	9303      	str	r3, [sp, #12]
 8002d3c:	429a      	cmp	r2, r3
 8002d3e:	d80c      	bhi.n	8002d5a <__multiply+0x9e>
 8002d40:	2e00      	cmp	r6, #0
 8002d42:	dd03      	ble.n	8002d4c <__multiply+0x90>
 8002d44:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	d05a      	beq.n	8002e02 <__multiply+0x146>
 8002d4c:	6106      	str	r6, [r0, #16]
 8002d4e:	b005      	add	sp, #20
 8002d50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d54:	f843 2b04 	str.w	r2, [r3], #4
 8002d58:	e7d8      	b.n	8002d0c <__multiply+0x50>
 8002d5a:	f8b3 a000 	ldrh.w	sl, [r3]
 8002d5e:	f1ba 0f00 	cmp.w	sl, #0
 8002d62:	d024      	beq.n	8002dae <__multiply+0xf2>
 8002d64:	f104 0e14 	add.w	lr, r4, #20
 8002d68:	46a9      	mov	r9, r5
 8002d6a:	f04f 0c00 	mov.w	ip, #0
 8002d6e:	f85e 2b04 	ldr.w	r2, [lr], #4
 8002d72:	f8d9 1000 	ldr.w	r1, [r9]
 8002d76:	fa1f fb82 	uxth.w	fp, r2
 8002d7a:	b289      	uxth	r1, r1
 8002d7c:	fb0a 110b 	mla	r1, sl, fp, r1
 8002d80:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8002d84:	f8d9 2000 	ldr.w	r2, [r9]
 8002d88:	4461      	add	r1, ip
 8002d8a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8002d8e:	fb0a c20b 	mla	r2, sl, fp, ip
 8002d92:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8002d96:	b289      	uxth	r1, r1
 8002d98:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8002d9c:	4577      	cmp	r7, lr
 8002d9e:	f849 1b04 	str.w	r1, [r9], #4
 8002da2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8002da6:	d8e2      	bhi.n	8002d6e <__multiply+0xb2>
 8002da8:	9a01      	ldr	r2, [sp, #4]
 8002daa:	f845 c002 	str.w	ip, [r5, r2]
 8002dae:	9a03      	ldr	r2, [sp, #12]
 8002db0:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8002db4:	3304      	adds	r3, #4
 8002db6:	f1b9 0f00 	cmp.w	r9, #0
 8002dba:	d020      	beq.n	8002dfe <__multiply+0x142>
 8002dbc:	6829      	ldr	r1, [r5, #0]
 8002dbe:	f104 0c14 	add.w	ip, r4, #20
 8002dc2:	46ae      	mov	lr, r5
 8002dc4:	f04f 0a00 	mov.w	sl, #0
 8002dc8:	f8bc b000 	ldrh.w	fp, [ip]
 8002dcc:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8002dd0:	fb09 220b 	mla	r2, r9, fp, r2
 8002dd4:	4492      	add	sl, r2
 8002dd6:	b289      	uxth	r1, r1
 8002dd8:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8002ddc:	f84e 1b04 	str.w	r1, [lr], #4
 8002de0:	f85c 2b04 	ldr.w	r2, [ip], #4
 8002de4:	f8be 1000 	ldrh.w	r1, [lr]
 8002de8:	0c12      	lsrs	r2, r2, #16
 8002dea:	fb09 1102 	mla	r1, r9, r2, r1
 8002dee:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8002df2:	4567      	cmp	r7, ip
 8002df4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8002df8:	d8e6      	bhi.n	8002dc8 <__multiply+0x10c>
 8002dfa:	9a01      	ldr	r2, [sp, #4]
 8002dfc:	50a9      	str	r1, [r5, r2]
 8002dfe:	3504      	adds	r5, #4
 8002e00:	e79a      	b.n	8002d38 <__multiply+0x7c>
 8002e02:	3e01      	subs	r6, #1
 8002e04:	e79c      	b.n	8002d40 <__multiply+0x84>
 8002e06:	bf00      	nop
 8002e08:	08003f9f 	.word	0x08003f9f
 8002e0c:	08003fb0 	.word	0x08003fb0

08002e10 <__pow5mult>:
 8002e10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002e14:	4615      	mov	r5, r2
 8002e16:	f012 0203 	ands.w	r2, r2, #3
 8002e1a:	4606      	mov	r6, r0
 8002e1c:	460f      	mov	r7, r1
 8002e1e:	d007      	beq.n	8002e30 <__pow5mult+0x20>
 8002e20:	4c25      	ldr	r4, [pc, #148]	; (8002eb8 <__pow5mult+0xa8>)
 8002e22:	3a01      	subs	r2, #1
 8002e24:	2300      	movs	r3, #0
 8002e26:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8002e2a:	f7ff fe9b 	bl	8002b64 <__multadd>
 8002e2e:	4607      	mov	r7, r0
 8002e30:	10ad      	asrs	r5, r5, #2
 8002e32:	d03d      	beq.n	8002eb0 <__pow5mult+0xa0>
 8002e34:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8002e36:	b97c      	cbnz	r4, 8002e58 <__pow5mult+0x48>
 8002e38:	2010      	movs	r0, #16
 8002e3a:	f7ff fe1b 	bl	8002a74 <malloc>
 8002e3e:	4602      	mov	r2, r0
 8002e40:	6270      	str	r0, [r6, #36]	; 0x24
 8002e42:	b928      	cbnz	r0, 8002e50 <__pow5mult+0x40>
 8002e44:	4b1d      	ldr	r3, [pc, #116]	; (8002ebc <__pow5mult+0xac>)
 8002e46:	481e      	ldr	r0, [pc, #120]	; (8002ec0 <__pow5mult+0xb0>)
 8002e48:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8002e4c:	f000 fab2 	bl	80033b4 <__assert_func>
 8002e50:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8002e54:	6004      	str	r4, [r0, #0]
 8002e56:	60c4      	str	r4, [r0, #12]
 8002e58:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8002e5c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8002e60:	b94c      	cbnz	r4, 8002e76 <__pow5mult+0x66>
 8002e62:	f240 2171 	movw	r1, #625	; 0x271
 8002e66:	4630      	mov	r0, r6
 8002e68:	f7ff ff12 	bl	8002c90 <__i2b>
 8002e6c:	2300      	movs	r3, #0
 8002e6e:	f8c8 0008 	str.w	r0, [r8, #8]
 8002e72:	4604      	mov	r4, r0
 8002e74:	6003      	str	r3, [r0, #0]
 8002e76:	f04f 0900 	mov.w	r9, #0
 8002e7a:	07eb      	lsls	r3, r5, #31
 8002e7c:	d50a      	bpl.n	8002e94 <__pow5mult+0x84>
 8002e7e:	4639      	mov	r1, r7
 8002e80:	4622      	mov	r2, r4
 8002e82:	4630      	mov	r0, r6
 8002e84:	f7ff ff1a 	bl	8002cbc <__multiply>
 8002e88:	4639      	mov	r1, r7
 8002e8a:	4680      	mov	r8, r0
 8002e8c:	4630      	mov	r0, r6
 8002e8e:	f7ff fe47 	bl	8002b20 <_Bfree>
 8002e92:	4647      	mov	r7, r8
 8002e94:	106d      	asrs	r5, r5, #1
 8002e96:	d00b      	beq.n	8002eb0 <__pow5mult+0xa0>
 8002e98:	6820      	ldr	r0, [r4, #0]
 8002e9a:	b938      	cbnz	r0, 8002eac <__pow5mult+0x9c>
 8002e9c:	4622      	mov	r2, r4
 8002e9e:	4621      	mov	r1, r4
 8002ea0:	4630      	mov	r0, r6
 8002ea2:	f7ff ff0b 	bl	8002cbc <__multiply>
 8002ea6:	6020      	str	r0, [r4, #0]
 8002ea8:	f8c0 9000 	str.w	r9, [r0]
 8002eac:	4604      	mov	r4, r0
 8002eae:	e7e4      	b.n	8002e7a <__pow5mult+0x6a>
 8002eb0:	4638      	mov	r0, r7
 8002eb2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002eb6:	bf00      	nop
 8002eb8:	08004100 	.word	0x08004100
 8002ebc:	08003f2d 	.word	0x08003f2d
 8002ec0:	08003fb0 	.word	0x08003fb0

08002ec4 <__lshift>:
 8002ec4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002ec8:	460c      	mov	r4, r1
 8002eca:	6849      	ldr	r1, [r1, #4]
 8002ecc:	6923      	ldr	r3, [r4, #16]
 8002ece:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8002ed2:	68a3      	ldr	r3, [r4, #8]
 8002ed4:	4607      	mov	r7, r0
 8002ed6:	4691      	mov	r9, r2
 8002ed8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8002edc:	f108 0601 	add.w	r6, r8, #1
 8002ee0:	42b3      	cmp	r3, r6
 8002ee2:	db0b      	blt.n	8002efc <__lshift+0x38>
 8002ee4:	4638      	mov	r0, r7
 8002ee6:	f7ff fddb 	bl	8002aa0 <_Balloc>
 8002eea:	4605      	mov	r5, r0
 8002eec:	b948      	cbnz	r0, 8002f02 <__lshift+0x3e>
 8002eee:	4602      	mov	r2, r0
 8002ef0:	4b2a      	ldr	r3, [pc, #168]	; (8002f9c <__lshift+0xd8>)
 8002ef2:	482b      	ldr	r0, [pc, #172]	; (8002fa0 <__lshift+0xdc>)
 8002ef4:	f240 11d9 	movw	r1, #473	; 0x1d9
 8002ef8:	f000 fa5c 	bl	80033b4 <__assert_func>
 8002efc:	3101      	adds	r1, #1
 8002efe:	005b      	lsls	r3, r3, #1
 8002f00:	e7ee      	b.n	8002ee0 <__lshift+0x1c>
 8002f02:	2300      	movs	r3, #0
 8002f04:	f100 0114 	add.w	r1, r0, #20
 8002f08:	f100 0210 	add.w	r2, r0, #16
 8002f0c:	4618      	mov	r0, r3
 8002f0e:	4553      	cmp	r3, sl
 8002f10:	db37      	blt.n	8002f82 <__lshift+0xbe>
 8002f12:	6920      	ldr	r0, [r4, #16]
 8002f14:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8002f18:	f104 0314 	add.w	r3, r4, #20
 8002f1c:	f019 091f 	ands.w	r9, r9, #31
 8002f20:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8002f24:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8002f28:	d02f      	beq.n	8002f8a <__lshift+0xc6>
 8002f2a:	f1c9 0e20 	rsb	lr, r9, #32
 8002f2e:	468a      	mov	sl, r1
 8002f30:	f04f 0c00 	mov.w	ip, #0
 8002f34:	681a      	ldr	r2, [r3, #0]
 8002f36:	fa02 f209 	lsl.w	r2, r2, r9
 8002f3a:	ea42 020c 	orr.w	r2, r2, ip
 8002f3e:	f84a 2b04 	str.w	r2, [sl], #4
 8002f42:	f853 2b04 	ldr.w	r2, [r3], #4
 8002f46:	4298      	cmp	r0, r3
 8002f48:	fa22 fc0e 	lsr.w	ip, r2, lr
 8002f4c:	d8f2      	bhi.n	8002f34 <__lshift+0x70>
 8002f4e:	1b03      	subs	r3, r0, r4
 8002f50:	3b15      	subs	r3, #21
 8002f52:	f023 0303 	bic.w	r3, r3, #3
 8002f56:	3304      	adds	r3, #4
 8002f58:	f104 0215 	add.w	r2, r4, #21
 8002f5c:	4290      	cmp	r0, r2
 8002f5e:	bf38      	it	cc
 8002f60:	2304      	movcc	r3, #4
 8002f62:	f841 c003 	str.w	ip, [r1, r3]
 8002f66:	f1bc 0f00 	cmp.w	ip, #0
 8002f6a:	d001      	beq.n	8002f70 <__lshift+0xac>
 8002f6c:	f108 0602 	add.w	r6, r8, #2
 8002f70:	3e01      	subs	r6, #1
 8002f72:	4638      	mov	r0, r7
 8002f74:	612e      	str	r6, [r5, #16]
 8002f76:	4621      	mov	r1, r4
 8002f78:	f7ff fdd2 	bl	8002b20 <_Bfree>
 8002f7c:	4628      	mov	r0, r5
 8002f7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002f82:	f842 0f04 	str.w	r0, [r2, #4]!
 8002f86:	3301      	adds	r3, #1
 8002f88:	e7c1      	b.n	8002f0e <__lshift+0x4a>
 8002f8a:	3904      	subs	r1, #4
 8002f8c:	f853 2b04 	ldr.w	r2, [r3], #4
 8002f90:	f841 2f04 	str.w	r2, [r1, #4]!
 8002f94:	4298      	cmp	r0, r3
 8002f96:	d8f9      	bhi.n	8002f8c <__lshift+0xc8>
 8002f98:	e7ea      	b.n	8002f70 <__lshift+0xac>
 8002f9a:	bf00      	nop
 8002f9c:	08003f9f 	.word	0x08003f9f
 8002fa0:	08003fb0 	.word	0x08003fb0

08002fa4 <__mcmp>:
 8002fa4:	b530      	push	{r4, r5, lr}
 8002fa6:	6902      	ldr	r2, [r0, #16]
 8002fa8:	690c      	ldr	r4, [r1, #16]
 8002faa:	1b12      	subs	r2, r2, r4
 8002fac:	d10e      	bne.n	8002fcc <__mcmp+0x28>
 8002fae:	f100 0314 	add.w	r3, r0, #20
 8002fb2:	3114      	adds	r1, #20
 8002fb4:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8002fb8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8002fbc:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8002fc0:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8002fc4:	42a5      	cmp	r5, r4
 8002fc6:	d003      	beq.n	8002fd0 <__mcmp+0x2c>
 8002fc8:	d305      	bcc.n	8002fd6 <__mcmp+0x32>
 8002fca:	2201      	movs	r2, #1
 8002fcc:	4610      	mov	r0, r2
 8002fce:	bd30      	pop	{r4, r5, pc}
 8002fd0:	4283      	cmp	r3, r0
 8002fd2:	d3f3      	bcc.n	8002fbc <__mcmp+0x18>
 8002fd4:	e7fa      	b.n	8002fcc <__mcmp+0x28>
 8002fd6:	f04f 32ff 	mov.w	r2, #4294967295
 8002fda:	e7f7      	b.n	8002fcc <__mcmp+0x28>

08002fdc <__mdiff>:
 8002fdc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002fe0:	460c      	mov	r4, r1
 8002fe2:	4606      	mov	r6, r0
 8002fe4:	4611      	mov	r1, r2
 8002fe6:	4620      	mov	r0, r4
 8002fe8:	4690      	mov	r8, r2
 8002fea:	f7ff ffdb 	bl	8002fa4 <__mcmp>
 8002fee:	1e05      	subs	r5, r0, #0
 8002ff0:	d110      	bne.n	8003014 <__mdiff+0x38>
 8002ff2:	4629      	mov	r1, r5
 8002ff4:	4630      	mov	r0, r6
 8002ff6:	f7ff fd53 	bl	8002aa0 <_Balloc>
 8002ffa:	b930      	cbnz	r0, 800300a <__mdiff+0x2e>
 8002ffc:	4b3a      	ldr	r3, [pc, #232]	; (80030e8 <__mdiff+0x10c>)
 8002ffe:	4602      	mov	r2, r0
 8003000:	f240 2132 	movw	r1, #562	; 0x232
 8003004:	4839      	ldr	r0, [pc, #228]	; (80030ec <__mdiff+0x110>)
 8003006:	f000 f9d5 	bl	80033b4 <__assert_func>
 800300a:	2301      	movs	r3, #1
 800300c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003010:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003014:	bfa4      	itt	ge
 8003016:	4643      	movge	r3, r8
 8003018:	46a0      	movge	r8, r4
 800301a:	4630      	mov	r0, r6
 800301c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8003020:	bfa6      	itte	ge
 8003022:	461c      	movge	r4, r3
 8003024:	2500      	movge	r5, #0
 8003026:	2501      	movlt	r5, #1
 8003028:	f7ff fd3a 	bl	8002aa0 <_Balloc>
 800302c:	b920      	cbnz	r0, 8003038 <__mdiff+0x5c>
 800302e:	4b2e      	ldr	r3, [pc, #184]	; (80030e8 <__mdiff+0x10c>)
 8003030:	4602      	mov	r2, r0
 8003032:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003036:	e7e5      	b.n	8003004 <__mdiff+0x28>
 8003038:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800303c:	6926      	ldr	r6, [r4, #16]
 800303e:	60c5      	str	r5, [r0, #12]
 8003040:	f104 0914 	add.w	r9, r4, #20
 8003044:	f108 0514 	add.w	r5, r8, #20
 8003048:	f100 0e14 	add.w	lr, r0, #20
 800304c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8003050:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8003054:	f108 0210 	add.w	r2, r8, #16
 8003058:	46f2      	mov	sl, lr
 800305a:	2100      	movs	r1, #0
 800305c:	f859 3b04 	ldr.w	r3, [r9], #4
 8003060:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8003064:	fa1f f883 	uxth.w	r8, r3
 8003068:	fa11 f18b 	uxtah	r1, r1, fp
 800306c:	0c1b      	lsrs	r3, r3, #16
 800306e:	eba1 0808 	sub.w	r8, r1, r8
 8003072:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8003076:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800307a:	fa1f f888 	uxth.w	r8, r8
 800307e:	1419      	asrs	r1, r3, #16
 8003080:	454e      	cmp	r6, r9
 8003082:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8003086:	f84a 3b04 	str.w	r3, [sl], #4
 800308a:	d8e7      	bhi.n	800305c <__mdiff+0x80>
 800308c:	1b33      	subs	r3, r6, r4
 800308e:	3b15      	subs	r3, #21
 8003090:	f023 0303 	bic.w	r3, r3, #3
 8003094:	3304      	adds	r3, #4
 8003096:	3415      	adds	r4, #21
 8003098:	42a6      	cmp	r6, r4
 800309a:	bf38      	it	cc
 800309c:	2304      	movcc	r3, #4
 800309e:	441d      	add	r5, r3
 80030a0:	4473      	add	r3, lr
 80030a2:	469e      	mov	lr, r3
 80030a4:	462e      	mov	r6, r5
 80030a6:	4566      	cmp	r6, ip
 80030a8:	d30e      	bcc.n	80030c8 <__mdiff+0xec>
 80030aa:	f10c 0203 	add.w	r2, ip, #3
 80030ae:	1b52      	subs	r2, r2, r5
 80030b0:	f022 0203 	bic.w	r2, r2, #3
 80030b4:	3d03      	subs	r5, #3
 80030b6:	45ac      	cmp	ip, r5
 80030b8:	bf38      	it	cc
 80030ba:	2200      	movcc	r2, #0
 80030bc:	441a      	add	r2, r3
 80030be:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 80030c2:	b17b      	cbz	r3, 80030e4 <__mdiff+0x108>
 80030c4:	6107      	str	r7, [r0, #16]
 80030c6:	e7a3      	b.n	8003010 <__mdiff+0x34>
 80030c8:	f856 8b04 	ldr.w	r8, [r6], #4
 80030cc:	fa11 f288 	uxtah	r2, r1, r8
 80030d0:	1414      	asrs	r4, r2, #16
 80030d2:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 80030d6:	b292      	uxth	r2, r2
 80030d8:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80030dc:	f84e 2b04 	str.w	r2, [lr], #4
 80030e0:	1421      	asrs	r1, r4, #16
 80030e2:	e7e0      	b.n	80030a6 <__mdiff+0xca>
 80030e4:	3f01      	subs	r7, #1
 80030e6:	e7ea      	b.n	80030be <__mdiff+0xe2>
 80030e8:	08003f9f 	.word	0x08003f9f
 80030ec:	08003fb0 	.word	0x08003fb0

080030f0 <__d2b>:
 80030f0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80030f4:	4689      	mov	r9, r1
 80030f6:	2101      	movs	r1, #1
 80030f8:	ec57 6b10 	vmov	r6, r7, d0
 80030fc:	4690      	mov	r8, r2
 80030fe:	f7ff fccf 	bl	8002aa0 <_Balloc>
 8003102:	4604      	mov	r4, r0
 8003104:	b930      	cbnz	r0, 8003114 <__d2b+0x24>
 8003106:	4602      	mov	r2, r0
 8003108:	4b25      	ldr	r3, [pc, #148]	; (80031a0 <__d2b+0xb0>)
 800310a:	4826      	ldr	r0, [pc, #152]	; (80031a4 <__d2b+0xb4>)
 800310c:	f240 310a 	movw	r1, #778	; 0x30a
 8003110:	f000 f950 	bl	80033b4 <__assert_func>
 8003114:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8003118:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800311c:	bb35      	cbnz	r5, 800316c <__d2b+0x7c>
 800311e:	2e00      	cmp	r6, #0
 8003120:	9301      	str	r3, [sp, #4]
 8003122:	d028      	beq.n	8003176 <__d2b+0x86>
 8003124:	4668      	mov	r0, sp
 8003126:	9600      	str	r6, [sp, #0]
 8003128:	f7ff fd82 	bl	8002c30 <__lo0bits>
 800312c:	9900      	ldr	r1, [sp, #0]
 800312e:	b300      	cbz	r0, 8003172 <__d2b+0x82>
 8003130:	9a01      	ldr	r2, [sp, #4]
 8003132:	f1c0 0320 	rsb	r3, r0, #32
 8003136:	fa02 f303 	lsl.w	r3, r2, r3
 800313a:	430b      	orrs	r3, r1
 800313c:	40c2      	lsrs	r2, r0
 800313e:	6163      	str	r3, [r4, #20]
 8003140:	9201      	str	r2, [sp, #4]
 8003142:	9b01      	ldr	r3, [sp, #4]
 8003144:	61a3      	str	r3, [r4, #24]
 8003146:	2b00      	cmp	r3, #0
 8003148:	bf14      	ite	ne
 800314a:	2202      	movne	r2, #2
 800314c:	2201      	moveq	r2, #1
 800314e:	6122      	str	r2, [r4, #16]
 8003150:	b1d5      	cbz	r5, 8003188 <__d2b+0x98>
 8003152:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8003156:	4405      	add	r5, r0
 8003158:	f8c9 5000 	str.w	r5, [r9]
 800315c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003160:	f8c8 0000 	str.w	r0, [r8]
 8003164:	4620      	mov	r0, r4
 8003166:	b003      	add	sp, #12
 8003168:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800316c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003170:	e7d5      	b.n	800311e <__d2b+0x2e>
 8003172:	6161      	str	r1, [r4, #20]
 8003174:	e7e5      	b.n	8003142 <__d2b+0x52>
 8003176:	a801      	add	r0, sp, #4
 8003178:	f7ff fd5a 	bl	8002c30 <__lo0bits>
 800317c:	9b01      	ldr	r3, [sp, #4]
 800317e:	6163      	str	r3, [r4, #20]
 8003180:	2201      	movs	r2, #1
 8003182:	6122      	str	r2, [r4, #16]
 8003184:	3020      	adds	r0, #32
 8003186:	e7e3      	b.n	8003150 <__d2b+0x60>
 8003188:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800318c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003190:	f8c9 0000 	str.w	r0, [r9]
 8003194:	6918      	ldr	r0, [r3, #16]
 8003196:	f7ff fd2b 	bl	8002bf0 <__hi0bits>
 800319a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800319e:	e7df      	b.n	8003160 <__d2b+0x70>
 80031a0:	08003f9f 	.word	0x08003f9f
 80031a4:	08003fb0 	.word	0x08003fb0

080031a8 <_calloc_r>:
 80031a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80031aa:	fba1 2402 	umull	r2, r4, r1, r2
 80031ae:	b94c      	cbnz	r4, 80031c4 <_calloc_r+0x1c>
 80031b0:	4611      	mov	r1, r2
 80031b2:	9201      	str	r2, [sp, #4]
 80031b4:	f000 f87a 	bl	80032ac <_malloc_r>
 80031b8:	9a01      	ldr	r2, [sp, #4]
 80031ba:	4605      	mov	r5, r0
 80031bc:	b930      	cbnz	r0, 80031cc <_calloc_r+0x24>
 80031be:	4628      	mov	r0, r5
 80031c0:	b003      	add	sp, #12
 80031c2:	bd30      	pop	{r4, r5, pc}
 80031c4:	220c      	movs	r2, #12
 80031c6:	6002      	str	r2, [r0, #0]
 80031c8:	2500      	movs	r5, #0
 80031ca:	e7f8      	b.n	80031be <_calloc_r+0x16>
 80031cc:	4621      	mov	r1, r4
 80031ce:	f7fe f95f 	bl	8001490 <memset>
 80031d2:	e7f4      	b.n	80031be <_calloc_r+0x16>

080031d4 <_free_r>:
 80031d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80031d6:	2900      	cmp	r1, #0
 80031d8:	d044      	beq.n	8003264 <_free_r+0x90>
 80031da:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80031de:	9001      	str	r0, [sp, #4]
 80031e0:	2b00      	cmp	r3, #0
 80031e2:	f1a1 0404 	sub.w	r4, r1, #4
 80031e6:	bfb8      	it	lt
 80031e8:	18e4      	addlt	r4, r4, r3
 80031ea:	f000 f925 	bl	8003438 <__malloc_lock>
 80031ee:	4a1e      	ldr	r2, [pc, #120]	; (8003268 <_free_r+0x94>)
 80031f0:	9801      	ldr	r0, [sp, #4]
 80031f2:	6813      	ldr	r3, [r2, #0]
 80031f4:	b933      	cbnz	r3, 8003204 <_free_r+0x30>
 80031f6:	6063      	str	r3, [r4, #4]
 80031f8:	6014      	str	r4, [r2, #0]
 80031fa:	b003      	add	sp, #12
 80031fc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003200:	f000 b920 	b.w	8003444 <__malloc_unlock>
 8003204:	42a3      	cmp	r3, r4
 8003206:	d908      	bls.n	800321a <_free_r+0x46>
 8003208:	6825      	ldr	r5, [r4, #0]
 800320a:	1961      	adds	r1, r4, r5
 800320c:	428b      	cmp	r3, r1
 800320e:	bf01      	itttt	eq
 8003210:	6819      	ldreq	r1, [r3, #0]
 8003212:	685b      	ldreq	r3, [r3, #4]
 8003214:	1949      	addeq	r1, r1, r5
 8003216:	6021      	streq	r1, [r4, #0]
 8003218:	e7ed      	b.n	80031f6 <_free_r+0x22>
 800321a:	461a      	mov	r2, r3
 800321c:	685b      	ldr	r3, [r3, #4]
 800321e:	b10b      	cbz	r3, 8003224 <_free_r+0x50>
 8003220:	42a3      	cmp	r3, r4
 8003222:	d9fa      	bls.n	800321a <_free_r+0x46>
 8003224:	6811      	ldr	r1, [r2, #0]
 8003226:	1855      	adds	r5, r2, r1
 8003228:	42a5      	cmp	r5, r4
 800322a:	d10b      	bne.n	8003244 <_free_r+0x70>
 800322c:	6824      	ldr	r4, [r4, #0]
 800322e:	4421      	add	r1, r4
 8003230:	1854      	adds	r4, r2, r1
 8003232:	42a3      	cmp	r3, r4
 8003234:	6011      	str	r1, [r2, #0]
 8003236:	d1e0      	bne.n	80031fa <_free_r+0x26>
 8003238:	681c      	ldr	r4, [r3, #0]
 800323a:	685b      	ldr	r3, [r3, #4]
 800323c:	6053      	str	r3, [r2, #4]
 800323e:	4421      	add	r1, r4
 8003240:	6011      	str	r1, [r2, #0]
 8003242:	e7da      	b.n	80031fa <_free_r+0x26>
 8003244:	d902      	bls.n	800324c <_free_r+0x78>
 8003246:	230c      	movs	r3, #12
 8003248:	6003      	str	r3, [r0, #0]
 800324a:	e7d6      	b.n	80031fa <_free_r+0x26>
 800324c:	6825      	ldr	r5, [r4, #0]
 800324e:	1961      	adds	r1, r4, r5
 8003250:	428b      	cmp	r3, r1
 8003252:	bf04      	itt	eq
 8003254:	6819      	ldreq	r1, [r3, #0]
 8003256:	685b      	ldreq	r3, [r3, #4]
 8003258:	6063      	str	r3, [r4, #4]
 800325a:	bf04      	itt	eq
 800325c:	1949      	addeq	r1, r1, r5
 800325e:	6021      	streq	r1, [r4, #0]
 8003260:	6054      	str	r4, [r2, #4]
 8003262:	e7ca      	b.n	80031fa <_free_r+0x26>
 8003264:	b003      	add	sp, #12
 8003266:	bd30      	pop	{r4, r5, pc}
 8003268:	200001f0 	.word	0x200001f0

0800326c <sbrk_aligned>:
 800326c:	b570      	push	{r4, r5, r6, lr}
 800326e:	4e0e      	ldr	r6, [pc, #56]	; (80032a8 <sbrk_aligned+0x3c>)
 8003270:	460c      	mov	r4, r1
 8003272:	6831      	ldr	r1, [r6, #0]
 8003274:	4605      	mov	r5, r0
 8003276:	b911      	cbnz	r1, 800327e <sbrk_aligned+0x12>
 8003278:	f000 f88c 	bl	8003394 <_sbrk_r>
 800327c:	6030      	str	r0, [r6, #0]
 800327e:	4621      	mov	r1, r4
 8003280:	4628      	mov	r0, r5
 8003282:	f000 f887 	bl	8003394 <_sbrk_r>
 8003286:	1c43      	adds	r3, r0, #1
 8003288:	d00a      	beq.n	80032a0 <sbrk_aligned+0x34>
 800328a:	1cc4      	adds	r4, r0, #3
 800328c:	f024 0403 	bic.w	r4, r4, #3
 8003290:	42a0      	cmp	r0, r4
 8003292:	d007      	beq.n	80032a4 <sbrk_aligned+0x38>
 8003294:	1a21      	subs	r1, r4, r0
 8003296:	4628      	mov	r0, r5
 8003298:	f000 f87c 	bl	8003394 <_sbrk_r>
 800329c:	3001      	adds	r0, #1
 800329e:	d101      	bne.n	80032a4 <sbrk_aligned+0x38>
 80032a0:	f04f 34ff 	mov.w	r4, #4294967295
 80032a4:	4620      	mov	r0, r4
 80032a6:	bd70      	pop	{r4, r5, r6, pc}
 80032a8:	200001f4 	.word	0x200001f4

080032ac <_malloc_r>:
 80032ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80032b0:	1ccd      	adds	r5, r1, #3
 80032b2:	f025 0503 	bic.w	r5, r5, #3
 80032b6:	3508      	adds	r5, #8
 80032b8:	2d0c      	cmp	r5, #12
 80032ba:	bf38      	it	cc
 80032bc:	250c      	movcc	r5, #12
 80032be:	2d00      	cmp	r5, #0
 80032c0:	4607      	mov	r7, r0
 80032c2:	db01      	blt.n	80032c8 <_malloc_r+0x1c>
 80032c4:	42a9      	cmp	r1, r5
 80032c6:	d905      	bls.n	80032d4 <_malloc_r+0x28>
 80032c8:	230c      	movs	r3, #12
 80032ca:	603b      	str	r3, [r7, #0]
 80032cc:	2600      	movs	r6, #0
 80032ce:	4630      	mov	r0, r6
 80032d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80032d4:	4e2e      	ldr	r6, [pc, #184]	; (8003390 <_malloc_r+0xe4>)
 80032d6:	f000 f8af 	bl	8003438 <__malloc_lock>
 80032da:	6833      	ldr	r3, [r6, #0]
 80032dc:	461c      	mov	r4, r3
 80032de:	bb34      	cbnz	r4, 800332e <_malloc_r+0x82>
 80032e0:	4629      	mov	r1, r5
 80032e2:	4638      	mov	r0, r7
 80032e4:	f7ff ffc2 	bl	800326c <sbrk_aligned>
 80032e8:	1c43      	adds	r3, r0, #1
 80032ea:	4604      	mov	r4, r0
 80032ec:	d14d      	bne.n	800338a <_malloc_r+0xde>
 80032ee:	6834      	ldr	r4, [r6, #0]
 80032f0:	4626      	mov	r6, r4
 80032f2:	2e00      	cmp	r6, #0
 80032f4:	d140      	bne.n	8003378 <_malloc_r+0xcc>
 80032f6:	6823      	ldr	r3, [r4, #0]
 80032f8:	4631      	mov	r1, r6
 80032fa:	4638      	mov	r0, r7
 80032fc:	eb04 0803 	add.w	r8, r4, r3
 8003300:	f000 f848 	bl	8003394 <_sbrk_r>
 8003304:	4580      	cmp	r8, r0
 8003306:	d13a      	bne.n	800337e <_malloc_r+0xd2>
 8003308:	6821      	ldr	r1, [r4, #0]
 800330a:	3503      	adds	r5, #3
 800330c:	1a6d      	subs	r5, r5, r1
 800330e:	f025 0503 	bic.w	r5, r5, #3
 8003312:	3508      	adds	r5, #8
 8003314:	2d0c      	cmp	r5, #12
 8003316:	bf38      	it	cc
 8003318:	250c      	movcc	r5, #12
 800331a:	4629      	mov	r1, r5
 800331c:	4638      	mov	r0, r7
 800331e:	f7ff ffa5 	bl	800326c <sbrk_aligned>
 8003322:	3001      	adds	r0, #1
 8003324:	d02b      	beq.n	800337e <_malloc_r+0xd2>
 8003326:	6823      	ldr	r3, [r4, #0]
 8003328:	442b      	add	r3, r5
 800332a:	6023      	str	r3, [r4, #0]
 800332c:	e00e      	b.n	800334c <_malloc_r+0xa0>
 800332e:	6822      	ldr	r2, [r4, #0]
 8003330:	1b52      	subs	r2, r2, r5
 8003332:	d41e      	bmi.n	8003372 <_malloc_r+0xc6>
 8003334:	2a0b      	cmp	r2, #11
 8003336:	d916      	bls.n	8003366 <_malloc_r+0xba>
 8003338:	1961      	adds	r1, r4, r5
 800333a:	42a3      	cmp	r3, r4
 800333c:	6025      	str	r5, [r4, #0]
 800333e:	bf18      	it	ne
 8003340:	6059      	strne	r1, [r3, #4]
 8003342:	6863      	ldr	r3, [r4, #4]
 8003344:	bf08      	it	eq
 8003346:	6031      	streq	r1, [r6, #0]
 8003348:	5162      	str	r2, [r4, r5]
 800334a:	604b      	str	r3, [r1, #4]
 800334c:	4638      	mov	r0, r7
 800334e:	f104 060b 	add.w	r6, r4, #11
 8003352:	f000 f877 	bl	8003444 <__malloc_unlock>
 8003356:	f026 0607 	bic.w	r6, r6, #7
 800335a:	1d23      	adds	r3, r4, #4
 800335c:	1af2      	subs	r2, r6, r3
 800335e:	d0b6      	beq.n	80032ce <_malloc_r+0x22>
 8003360:	1b9b      	subs	r3, r3, r6
 8003362:	50a3      	str	r3, [r4, r2]
 8003364:	e7b3      	b.n	80032ce <_malloc_r+0x22>
 8003366:	6862      	ldr	r2, [r4, #4]
 8003368:	42a3      	cmp	r3, r4
 800336a:	bf0c      	ite	eq
 800336c:	6032      	streq	r2, [r6, #0]
 800336e:	605a      	strne	r2, [r3, #4]
 8003370:	e7ec      	b.n	800334c <_malloc_r+0xa0>
 8003372:	4623      	mov	r3, r4
 8003374:	6864      	ldr	r4, [r4, #4]
 8003376:	e7b2      	b.n	80032de <_malloc_r+0x32>
 8003378:	4634      	mov	r4, r6
 800337a:	6876      	ldr	r6, [r6, #4]
 800337c:	e7b9      	b.n	80032f2 <_malloc_r+0x46>
 800337e:	230c      	movs	r3, #12
 8003380:	603b      	str	r3, [r7, #0]
 8003382:	4638      	mov	r0, r7
 8003384:	f000 f85e 	bl	8003444 <__malloc_unlock>
 8003388:	e7a1      	b.n	80032ce <_malloc_r+0x22>
 800338a:	6025      	str	r5, [r4, #0]
 800338c:	e7de      	b.n	800334c <_malloc_r+0xa0>
 800338e:	bf00      	nop
 8003390:	200001f0 	.word	0x200001f0

08003394 <_sbrk_r>:
 8003394:	b538      	push	{r3, r4, r5, lr}
 8003396:	4d06      	ldr	r5, [pc, #24]	; (80033b0 <_sbrk_r+0x1c>)
 8003398:	2300      	movs	r3, #0
 800339a:	4604      	mov	r4, r0
 800339c:	4608      	mov	r0, r1
 800339e:	602b      	str	r3, [r5, #0]
 80033a0:	f7fd fd04 	bl	8000dac <_sbrk>
 80033a4:	1c43      	adds	r3, r0, #1
 80033a6:	d102      	bne.n	80033ae <_sbrk_r+0x1a>
 80033a8:	682b      	ldr	r3, [r5, #0]
 80033aa:	b103      	cbz	r3, 80033ae <_sbrk_r+0x1a>
 80033ac:	6023      	str	r3, [r4, #0]
 80033ae:	bd38      	pop	{r3, r4, r5, pc}
 80033b0:	200001f8 	.word	0x200001f8

080033b4 <__assert_func>:
 80033b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80033b6:	4614      	mov	r4, r2
 80033b8:	461a      	mov	r2, r3
 80033ba:	4b09      	ldr	r3, [pc, #36]	; (80033e0 <__assert_func+0x2c>)
 80033bc:	681b      	ldr	r3, [r3, #0]
 80033be:	4605      	mov	r5, r0
 80033c0:	68d8      	ldr	r0, [r3, #12]
 80033c2:	b14c      	cbz	r4, 80033d8 <__assert_func+0x24>
 80033c4:	4b07      	ldr	r3, [pc, #28]	; (80033e4 <__assert_func+0x30>)
 80033c6:	9100      	str	r1, [sp, #0]
 80033c8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80033cc:	4906      	ldr	r1, [pc, #24]	; (80033e8 <__assert_func+0x34>)
 80033ce:	462b      	mov	r3, r5
 80033d0:	f000 f80e 	bl	80033f0 <fiprintf>
 80033d4:	f000 fa64 	bl	80038a0 <abort>
 80033d8:	4b04      	ldr	r3, [pc, #16]	; (80033ec <__assert_func+0x38>)
 80033da:	461c      	mov	r4, r3
 80033dc:	e7f3      	b.n	80033c6 <__assert_func+0x12>
 80033de:	bf00      	nop
 80033e0:	20000000 	.word	0x20000000
 80033e4:	0800410c 	.word	0x0800410c
 80033e8:	08004119 	.word	0x08004119
 80033ec:	08004147 	.word	0x08004147

080033f0 <fiprintf>:
 80033f0:	b40e      	push	{r1, r2, r3}
 80033f2:	b503      	push	{r0, r1, lr}
 80033f4:	4601      	mov	r1, r0
 80033f6:	ab03      	add	r3, sp, #12
 80033f8:	4805      	ldr	r0, [pc, #20]	; (8003410 <fiprintf+0x20>)
 80033fa:	f853 2b04 	ldr.w	r2, [r3], #4
 80033fe:	6800      	ldr	r0, [r0, #0]
 8003400:	9301      	str	r3, [sp, #4]
 8003402:	f000 f84f 	bl	80034a4 <_vfiprintf_r>
 8003406:	b002      	add	sp, #8
 8003408:	f85d eb04 	ldr.w	lr, [sp], #4
 800340c:	b003      	add	sp, #12
 800340e:	4770      	bx	lr
 8003410:	20000000 	.word	0x20000000

08003414 <__ascii_mbtowc>:
 8003414:	b082      	sub	sp, #8
 8003416:	b901      	cbnz	r1, 800341a <__ascii_mbtowc+0x6>
 8003418:	a901      	add	r1, sp, #4
 800341a:	b142      	cbz	r2, 800342e <__ascii_mbtowc+0x1a>
 800341c:	b14b      	cbz	r3, 8003432 <__ascii_mbtowc+0x1e>
 800341e:	7813      	ldrb	r3, [r2, #0]
 8003420:	600b      	str	r3, [r1, #0]
 8003422:	7812      	ldrb	r2, [r2, #0]
 8003424:	1e10      	subs	r0, r2, #0
 8003426:	bf18      	it	ne
 8003428:	2001      	movne	r0, #1
 800342a:	b002      	add	sp, #8
 800342c:	4770      	bx	lr
 800342e:	4610      	mov	r0, r2
 8003430:	e7fb      	b.n	800342a <__ascii_mbtowc+0x16>
 8003432:	f06f 0001 	mvn.w	r0, #1
 8003436:	e7f8      	b.n	800342a <__ascii_mbtowc+0x16>

08003438 <__malloc_lock>:
 8003438:	4801      	ldr	r0, [pc, #4]	; (8003440 <__malloc_lock+0x8>)
 800343a:	f000 bbf1 	b.w	8003c20 <__retarget_lock_acquire_recursive>
 800343e:	bf00      	nop
 8003440:	200001fc 	.word	0x200001fc

08003444 <__malloc_unlock>:
 8003444:	4801      	ldr	r0, [pc, #4]	; (800344c <__malloc_unlock+0x8>)
 8003446:	f000 bbec 	b.w	8003c22 <__retarget_lock_release_recursive>
 800344a:	bf00      	nop
 800344c:	200001fc 	.word	0x200001fc

08003450 <__sfputc_r>:
 8003450:	6893      	ldr	r3, [r2, #8]
 8003452:	3b01      	subs	r3, #1
 8003454:	2b00      	cmp	r3, #0
 8003456:	b410      	push	{r4}
 8003458:	6093      	str	r3, [r2, #8]
 800345a:	da08      	bge.n	800346e <__sfputc_r+0x1e>
 800345c:	6994      	ldr	r4, [r2, #24]
 800345e:	42a3      	cmp	r3, r4
 8003460:	db01      	blt.n	8003466 <__sfputc_r+0x16>
 8003462:	290a      	cmp	r1, #10
 8003464:	d103      	bne.n	800346e <__sfputc_r+0x1e>
 8003466:	f85d 4b04 	ldr.w	r4, [sp], #4
 800346a:	f000 b94b 	b.w	8003704 <__swbuf_r>
 800346e:	6813      	ldr	r3, [r2, #0]
 8003470:	1c58      	adds	r0, r3, #1
 8003472:	6010      	str	r0, [r2, #0]
 8003474:	7019      	strb	r1, [r3, #0]
 8003476:	4608      	mov	r0, r1
 8003478:	f85d 4b04 	ldr.w	r4, [sp], #4
 800347c:	4770      	bx	lr

0800347e <__sfputs_r>:
 800347e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003480:	4606      	mov	r6, r0
 8003482:	460f      	mov	r7, r1
 8003484:	4614      	mov	r4, r2
 8003486:	18d5      	adds	r5, r2, r3
 8003488:	42ac      	cmp	r4, r5
 800348a:	d101      	bne.n	8003490 <__sfputs_r+0x12>
 800348c:	2000      	movs	r0, #0
 800348e:	e007      	b.n	80034a0 <__sfputs_r+0x22>
 8003490:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003494:	463a      	mov	r2, r7
 8003496:	4630      	mov	r0, r6
 8003498:	f7ff ffda 	bl	8003450 <__sfputc_r>
 800349c:	1c43      	adds	r3, r0, #1
 800349e:	d1f3      	bne.n	8003488 <__sfputs_r+0xa>
 80034a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080034a4 <_vfiprintf_r>:
 80034a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80034a8:	460d      	mov	r5, r1
 80034aa:	b09d      	sub	sp, #116	; 0x74
 80034ac:	4614      	mov	r4, r2
 80034ae:	4698      	mov	r8, r3
 80034b0:	4606      	mov	r6, r0
 80034b2:	b118      	cbz	r0, 80034bc <_vfiprintf_r+0x18>
 80034b4:	6983      	ldr	r3, [r0, #24]
 80034b6:	b90b      	cbnz	r3, 80034bc <_vfiprintf_r+0x18>
 80034b8:	f000 fb14 	bl	8003ae4 <__sinit>
 80034bc:	4b89      	ldr	r3, [pc, #548]	; (80036e4 <_vfiprintf_r+0x240>)
 80034be:	429d      	cmp	r5, r3
 80034c0:	d11b      	bne.n	80034fa <_vfiprintf_r+0x56>
 80034c2:	6875      	ldr	r5, [r6, #4]
 80034c4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80034c6:	07d9      	lsls	r1, r3, #31
 80034c8:	d405      	bmi.n	80034d6 <_vfiprintf_r+0x32>
 80034ca:	89ab      	ldrh	r3, [r5, #12]
 80034cc:	059a      	lsls	r2, r3, #22
 80034ce:	d402      	bmi.n	80034d6 <_vfiprintf_r+0x32>
 80034d0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80034d2:	f000 fba5 	bl	8003c20 <__retarget_lock_acquire_recursive>
 80034d6:	89ab      	ldrh	r3, [r5, #12]
 80034d8:	071b      	lsls	r3, r3, #28
 80034da:	d501      	bpl.n	80034e0 <_vfiprintf_r+0x3c>
 80034dc:	692b      	ldr	r3, [r5, #16]
 80034de:	b9eb      	cbnz	r3, 800351c <_vfiprintf_r+0x78>
 80034e0:	4629      	mov	r1, r5
 80034e2:	4630      	mov	r0, r6
 80034e4:	f000 f96e 	bl	80037c4 <__swsetup_r>
 80034e8:	b1c0      	cbz	r0, 800351c <_vfiprintf_r+0x78>
 80034ea:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80034ec:	07dc      	lsls	r4, r3, #31
 80034ee:	d50e      	bpl.n	800350e <_vfiprintf_r+0x6a>
 80034f0:	f04f 30ff 	mov.w	r0, #4294967295
 80034f4:	b01d      	add	sp, #116	; 0x74
 80034f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80034fa:	4b7b      	ldr	r3, [pc, #492]	; (80036e8 <_vfiprintf_r+0x244>)
 80034fc:	429d      	cmp	r5, r3
 80034fe:	d101      	bne.n	8003504 <_vfiprintf_r+0x60>
 8003500:	68b5      	ldr	r5, [r6, #8]
 8003502:	e7df      	b.n	80034c4 <_vfiprintf_r+0x20>
 8003504:	4b79      	ldr	r3, [pc, #484]	; (80036ec <_vfiprintf_r+0x248>)
 8003506:	429d      	cmp	r5, r3
 8003508:	bf08      	it	eq
 800350a:	68f5      	ldreq	r5, [r6, #12]
 800350c:	e7da      	b.n	80034c4 <_vfiprintf_r+0x20>
 800350e:	89ab      	ldrh	r3, [r5, #12]
 8003510:	0598      	lsls	r0, r3, #22
 8003512:	d4ed      	bmi.n	80034f0 <_vfiprintf_r+0x4c>
 8003514:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003516:	f000 fb84 	bl	8003c22 <__retarget_lock_release_recursive>
 800351a:	e7e9      	b.n	80034f0 <_vfiprintf_r+0x4c>
 800351c:	2300      	movs	r3, #0
 800351e:	9309      	str	r3, [sp, #36]	; 0x24
 8003520:	2320      	movs	r3, #32
 8003522:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003526:	f8cd 800c 	str.w	r8, [sp, #12]
 800352a:	2330      	movs	r3, #48	; 0x30
 800352c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80036f0 <_vfiprintf_r+0x24c>
 8003530:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003534:	f04f 0901 	mov.w	r9, #1
 8003538:	4623      	mov	r3, r4
 800353a:	469a      	mov	sl, r3
 800353c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003540:	b10a      	cbz	r2, 8003546 <_vfiprintf_r+0xa2>
 8003542:	2a25      	cmp	r2, #37	; 0x25
 8003544:	d1f9      	bne.n	800353a <_vfiprintf_r+0x96>
 8003546:	ebba 0b04 	subs.w	fp, sl, r4
 800354a:	d00b      	beq.n	8003564 <_vfiprintf_r+0xc0>
 800354c:	465b      	mov	r3, fp
 800354e:	4622      	mov	r2, r4
 8003550:	4629      	mov	r1, r5
 8003552:	4630      	mov	r0, r6
 8003554:	f7ff ff93 	bl	800347e <__sfputs_r>
 8003558:	3001      	adds	r0, #1
 800355a:	f000 80aa 	beq.w	80036b2 <_vfiprintf_r+0x20e>
 800355e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003560:	445a      	add	r2, fp
 8003562:	9209      	str	r2, [sp, #36]	; 0x24
 8003564:	f89a 3000 	ldrb.w	r3, [sl]
 8003568:	2b00      	cmp	r3, #0
 800356a:	f000 80a2 	beq.w	80036b2 <_vfiprintf_r+0x20e>
 800356e:	2300      	movs	r3, #0
 8003570:	f04f 32ff 	mov.w	r2, #4294967295
 8003574:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003578:	f10a 0a01 	add.w	sl, sl, #1
 800357c:	9304      	str	r3, [sp, #16]
 800357e:	9307      	str	r3, [sp, #28]
 8003580:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003584:	931a      	str	r3, [sp, #104]	; 0x68
 8003586:	4654      	mov	r4, sl
 8003588:	2205      	movs	r2, #5
 800358a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800358e:	4858      	ldr	r0, [pc, #352]	; (80036f0 <_vfiprintf_r+0x24c>)
 8003590:	f7fc fe2e 	bl	80001f0 <memchr>
 8003594:	9a04      	ldr	r2, [sp, #16]
 8003596:	b9d8      	cbnz	r0, 80035d0 <_vfiprintf_r+0x12c>
 8003598:	06d1      	lsls	r1, r2, #27
 800359a:	bf44      	itt	mi
 800359c:	2320      	movmi	r3, #32
 800359e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80035a2:	0713      	lsls	r3, r2, #28
 80035a4:	bf44      	itt	mi
 80035a6:	232b      	movmi	r3, #43	; 0x2b
 80035a8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80035ac:	f89a 3000 	ldrb.w	r3, [sl]
 80035b0:	2b2a      	cmp	r3, #42	; 0x2a
 80035b2:	d015      	beq.n	80035e0 <_vfiprintf_r+0x13c>
 80035b4:	9a07      	ldr	r2, [sp, #28]
 80035b6:	4654      	mov	r4, sl
 80035b8:	2000      	movs	r0, #0
 80035ba:	f04f 0c0a 	mov.w	ip, #10
 80035be:	4621      	mov	r1, r4
 80035c0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80035c4:	3b30      	subs	r3, #48	; 0x30
 80035c6:	2b09      	cmp	r3, #9
 80035c8:	d94e      	bls.n	8003668 <_vfiprintf_r+0x1c4>
 80035ca:	b1b0      	cbz	r0, 80035fa <_vfiprintf_r+0x156>
 80035cc:	9207      	str	r2, [sp, #28]
 80035ce:	e014      	b.n	80035fa <_vfiprintf_r+0x156>
 80035d0:	eba0 0308 	sub.w	r3, r0, r8
 80035d4:	fa09 f303 	lsl.w	r3, r9, r3
 80035d8:	4313      	orrs	r3, r2
 80035da:	9304      	str	r3, [sp, #16]
 80035dc:	46a2      	mov	sl, r4
 80035de:	e7d2      	b.n	8003586 <_vfiprintf_r+0xe2>
 80035e0:	9b03      	ldr	r3, [sp, #12]
 80035e2:	1d19      	adds	r1, r3, #4
 80035e4:	681b      	ldr	r3, [r3, #0]
 80035e6:	9103      	str	r1, [sp, #12]
 80035e8:	2b00      	cmp	r3, #0
 80035ea:	bfbb      	ittet	lt
 80035ec:	425b      	neglt	r3, r3
 80035ee:	f042 0202 	orrlt.w	r2, r2, #2
 80035f2:	9307      	strge	r3, [sp, #28]
 80035f4:	9307      	strlt	r3, [sp, #28]
 80035f6:	bfb8      	it	lt
 80035f8:	9204      	strlt	r2, [sp, #16]
 80035fa:	7823      	ldrb	r3, [r4, #0]
 80035fc:	2b2e      	cmp	r3, #46	; 0x2e
 80035fe:	d10c      	bne.n	800361a <_vfiprintf_r+0x176>
 8003600:	7863      	ldrb	r3, [r4, #1]
 8003602:	2b2a      	cmp	r3, #42	; 0x2a
 8003604:	d135      	bne.n	8003672 <_vfiprintf_r+0x1ce>
 8003606:	9b03      	ldr	r3, [sp, #12]
 8003608:	1d1a      	adds	r2, r3, #4
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	9203      	str	r2, [sp, #12]
 800360e:	2b00      	cmp	r3, #0
 8003610:	bfb8      	it	lt
 8003612:	f04f 33ff 	movlt.w	r3, #4294967295
 8003616:	3402      	adds	r4, #2
 8003618:	9305      	str	r3, [sp, #20]
 800361a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8003700 <_vfiprintf_r+0x25c>
 800361e:	7821      	ldrb	r1, [r4, #0]
 8003620:	2203      	movs	r2, #3
 8003622:	4650      	mov	r0, sl
 8003624:	f7fc fde4 	bl	80001f0 <memchr>
 8003628:	b140      	cbz	r0, 800363c <_vfiprintf_r+0x198>
 800362a:	2340      	movs	r3, #64	; 0x40
 800362c:	eba0 000a 	sub.w	r0, r0, sl
 8003630:	fa03 f000 	lsl.w	r0, r3, r0
 8003634:	9b04      	ldr	r3, [sp, #16]
 8003636:	4303      	orrs	r3, r0
 8003638:	3401      	adds	r4, #1
 800363a:	9304      	str	r3, [sp, #16]
 800363c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003640:	482c      	ldr	r0, [pc, #176]	; (80036f4 <_vfiprintf_r+0x250>)
 8003642:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003646:	2206      	movs	r2, #6
 8003648:	f7fc fdd2 	bl	80001f0 <memchr>
 800364c:	2800      	cmp	r0, #0
 800364e:	d03f      	beq.n	80036d0 <_vfiprintf_r+0x22c>
 8003650:	4b29      	ldr	r3, [pc, #164]	; (80036f8 <_vfiprintf_r+0x254>)
 8003652:	bb1b      	cbnz	r3, 800369c <_vfiprintf_r+0x1f8>
 8003654:	9b03      	ldr	r3, [sp, #12]
 8003656:	3307      	adds	r3, #7
 8003658:	f023 0307 	bic.w	r3, r3, #7
 800365c:	3308      	adds	r3, #8
 800365e:	9303      	str	r3, [sp, #12]
 8003660:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003662:	443b      	add	r3, r7
 8003664:	9309      	str	r3, [sp, #36]	; 0x24
 8003666:	e767      	b.n	8003538 <_vfiprintf_r+0x94>
 8003668:	fb0c 3202 	mla	r2, ip, r2, r3
 800366c:	460c      	mov	r4, r1
 800366e:	2001      	movs	r0, #1
 8003670:	e7a5      	b.n	80035be <_vfiprintf_r+0x11a>
 8003672:	2300      	movs	r3, #0
 8003674:	3401      	adds	r4, #1
 8003676:	9305      	str	r3, [sp, #20]
 8003678:	4619      	mov	r1, r3
 800367a:	f04f 0c0a 	mov.w	ip, #10
 800367e:	4620      	mov	r0, r4
 8003680:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003684:	3a30      	subs	r2, #48	; 0x30
 8003686:	2a09      	cmp	r2, #9
 8003688:	d903      	bls.n	8003692 <_vfiprintf_r+0x1ee>
 800368a:	2b00      	cmp	r3, #0
 800368c:	d0c5      	beq.n	800361a <_vfiprintf_r+0x176>
 800368e:	9105      	str	r1, [sp, #20]
 8003690:	e7c3      	b.n	800361a <_vfiprintf_r+0x176>
 8003692:	fb0c 2101 	mla	r1, ip, r1, r2
 8003696:	4604      	mov	r4, r0
 8003698:	2301      	movs	r3, #1
 800369a:	e7f0      	b.n	800367e <_vfiprintf_r+0x1da>
 800369c:	ab03      	add	r3, sp, #12
 800369e:	9300      	str	r3, [sp, #0]
 80036a0:	462a      	mov	r2, r5
 80036a2:	4b16      	ldr	r3, [pc, #88]	; (80036fc <_vfiprintf_r+0x258>)
 80036a4:	a904      	add	r1, sp, #16
 80036a6:	4630      	mov	r0, r6
 80036a8:	f7fd ff9a 	bl	80015e0 <_printf_float>
 80036ac:	4607      	mov	r7, r0
 80036ae:	1c78      	adds	r0, r7, #1
 80036b0:	d1d6      	bne.n	8003660 <_vfiprintf_r+0x1bc>
 80036b2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80036b4:	07d9      	lsls	r1, r3, #31
 80036b6:	d405      	bmi.n	80036c4 <_vfiprintf_r+0x220>
 80036b8:	89ab      	ldrh	r3, [r5, #12]
 80036ba:	059a      	lsls	r2, r3, #22
 80036bc:	d402      	bmi.n	80036c4 <_vfiprintf_r+0x220>
 80036be:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80036c0:	f000 faaf 	bl	8003c22 <__retarget_lock_release_recursive>
 80036c4:	89ab      	ldrh	r3, [r5, #12]
 80036c6:	065b      	lsls	r3, r3, #25
 80036c8:	f53f af12 	bmi.w	80034f0 <_vfiprintf_r+0x4c>
 80036cc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80036ce:	e711      	b.n	80034f4 <_vfiprintf_r+0x50>
 80036d0:	ab03      	add	r3, sp, #12
 80036d2:	9300      	str	r3, [sp, #0]
 80036d4:	462a      	mov	r2, r5
 80036d6:	4b09      	ldr	r3, [pc, #36]	; (80036fc <_vfiprintf_r+0x258>)
 80036d8:	a904      	add	r1, sp, #16
 80036da:	4630      	mov	r0, r6
 80036dc:	f7fe fa24 	bl	8001b28 <_printf_i>
 80036e0:	e7e4      	b.n	80036ac <_vfiprintf_r+0x208>
 80036e2:	bf00      	nop
 80036e4:	08004284 	.word	0x08004284
 80036e8:	080042a4 	.word	0x080042a4
 80036ec:	08004264 	.word	0x08004264
 80036f0:	08004152 	.word	0x08004152
 80036f4:	0800415c 	.word	0x0800415c
 80036f8:	080015e1 	.word	0x080015e1
 80036fc:	0800347f 	.word	0x0800347f
 8003700:	08004158 	.word	0x08004158

08003704 <__swbuf_r>:
 8003704:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003706:	460e      	mov	r6, r1
 8003708:	4614      	mov	r4, r2
 800370a:	4605      	mov	r5, r0
 800370c:	b118      	cbz	r0, 8003716 <__swbuf_r+0x12>
 800370e:	6983      	ldr	r3, [r0, #24]
 8003710:	b90b      	cbnz	r3, 8003716 <__swbuf_r+0x12>
 8003712:	f000 f9e7 	bl	8003ae4 <__sinit>
 8003716:	4b21      	ldr	r3, [pc, #132]	; (800379c <__swbuf_r+0x98>)
 8003718:	429c      	cmp	r4, r3
 800371a:	d12b      	bne.n	8003774 <__swbuf_r+0x70>
 800371c:	686c      	ldr	r4, [r5, #4]
 800371e:	69a3      	ldr	r3, [r4, #24]
 8003720:	60a3      	str	r3, [r4, #8]
 8003722:	89a3      	ldrh	r3, [r4, #12]
 8003724:	071a      	lsls	r2, r3, #28
 8003726:	d52f      	bpl.n	8003788 <__swbuf_r+0x84>
 8003728:	6923      	ldr	r3, [r4, #16]
 800372a:	b36b      	cbz	r3, 8003788 <__swbuf_r+0x84>
 800372c:	6923      	ldr	r3, [r4, #16]
 800372e:	6820      	ldr	r0, [r4, #0]
 8003730:	1ac0      	subs	r0, r0, r3
 8003732:	6963      	ldr	r3, [r4, #20]
 8003734:	b2f6      	uxtb	r6, r6
 8003736:	4283      	cmp	r3, r0
 8003738:	4637      	mov	r7, r6
 800373a:	dc04      	bgt.n	8003746 <__swbuf_r+0x42>
 800373c:	4621      	mov	r1, r4
 800373e:	4628      	mov	r0, r5
 8003740:	f000 f93c 	bl	80039bc <_fflush_r>
 8003744:	bb30      	cbnz	r0, 8003794 <__swbuf_r+0x90>
 8003746:	68a3      	ldr	r3, [r4, #8]
 8003748:	3b01      	subs	r3, #1
 800374a:	60a3      	str	r3, [r4, #8]
 800374c:	6823      	ldr	r3, [r4, #0]
 800374e:	1c5a      	adds	r2, r3, #1
 8003750:	6022      	str	r2, [r4, #0]
 8003752:	701e      	strb	r6, [r3, #0]
 8003754:	6963      	ldr	r3, [r4, #20]
 8003756:	3001      	adds	r0, #1
 8003758:	4283      	cmp	r3, r0
 800375a:	d004      	beq.n	8003766 <__swbuf_r+0x62>
 800375c:	89a3      	ldrh	r3, [r4, #12]
 800375e:	07db      	lsls	r3, r3, #31
 8003760:	d506      	bpl.n	8003770 <__swbuf_r+0x6c>
 8003762:	2e0a      	cmp	r6, #10
 8003764:	d104      	bne.n	8003770 <__swbuf_r+0x6c>
 8003766:	4621      	mov	r1, r4
 8003768:	4628      	mov	r0, r5
 800376a:	f000 f927 	bl	80039bc <_fflush_r>
 800376e:	b988      	cbnz	r0, 8003794 <__swbuf_r+0x90>
 8003770:	4638      	mov	r0, r7
 8003772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003774:	4b0a      	ldr	r3, [pc, #40]	; (80037a0 <__swbuf_r+0x9c>)
 8003776:	429c      	cmp	r4, r3
 8003778:	d101      	bne.n	800377e <__swbuf_r+0x7a>
 800377a:	68ac      	ldr	r4, [r5, #8]
 800377c:	e7cf      	b.n	800371e <__swbuf_r+0x1a>
 800377e:	4b09      	ldr	r3, [pc, #36]	; (80037a4 <__swbuf_r+0xa0>)
 8003780:	429c      	cmp	r4, r3
 8003782:	bf08      	it	eq
 8003784:	68ec      	ldreq	r4, [r5, #12]
 8003786:	e7ca      	b.n	800371e <__swbuf_r+0x1a>
 8003788:	4621      	mov	r1, r4
 800378a:	4628      	mov	r0, r5
 800378c:	f000 f81a 	bl	80037c4 <__swsetup_r>
 8003790:	2800      	cmp	r0, #0
 8003792:	d0cb      	beq.n	800372c <__swbuf_r+0x28>
 8003794:	f04f 37ff 	mov.w	r7, #4294967295
 8003798:	e7ea      	b.n	8003770 <__swbuf_r+0x6c>
 800379a:	bf00      	nop
 800379c:	08004284 	.word	0x08004284
 80037a0:	080042a4 	.word	0x080042a4
 80037a4:	08004264 	.word	0x08004264

080037a8 <__ascii_wctomb>:
 80037a8:	b149      	cbz	r1, 80037be <__ascii_wctomb+0x16>
 80037aa:	2aff      	cmp	r2, #255	; 0xff
 80037ac:	bf85      	ittet	hi
 80037ae:	238a      	movhi	r3, #138	; 0x8a
 80037b0:	6003      	strhi	r3, [r0, #0]
 80037b2:	700a      	strbls	r2, [r1, #0]
 80037b4:	f04f 30ff 	movhi.w	r0, #4294967295
 80037b8:	bf98      	it	ls
 80037ba:	2001      	movls	r0, #1
 80037bc:	4770      	bx	lr
 80037be:	4608      	mov	r0, r1
 80037c0:	4770      	bx	lr
	...

080037c4 <__swsetup_r>:
 80037c4:	4b32      	ldr	r3, [pc, #200]	; (8003890 <__swsetup_r+0xcc>)
 80037c6:	b570      	push	{r4, r5, r6, lr}
 80037c8:	681d      	ldr	r5, [r3, #0]
 80037ca:	4606      	mov	r6, r0
 80037cc:	460c      	mov	r4, r1
 80037ce:	b125      	cbz	r5, 80037da <__swsetup_r+0x16>
 80037d0:	69ab      	ldr	r3, [r5, #24]
 80037d2:	b913      	cbnz	r3, 80037da <__swsetup_r+0x16>
 80037d4:	4628      	mov	r0, r5
 80037d6:	f000 f985 	bl	8003ae4 <__sinit>
 80037da:	4b2e      	ldr	r3, [pc, #184]	; (8003894 <__swsetup_r+0xd0>)
 80037dc:	429c      	cmp	r4, r3
 80037de:	d10f      	bne.n	8003800 <__swsetup_r+0x3c>
 80037e0:	686c      	ldr	r4, [r5, #4]
 80037e2:	89a3      	ldrh	r3, [r4, #12]
 80037e4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80037e8:	0719      	lsls	r1, r3, #28
 80037ea:	d42c      	bmi.n	8003846 <__swsetup_r+0x82>
 80037ec:	06dd      	lsls	r5, r3, #27
 80037ee:	d411      	bmi.n	8003814 <__swsetup_r+0x50>
 80037f0:	2309      	movs	r3, #9
 80037f2:	6033      	str	r3, [r6, #0]
 80037f4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80037f8:	81a3      	strh	r3, [r4, #12]
 80037fa:	f04f 30ff 	mov.w	r0, #4294967295
 80037fe:	e03e      	b.n	800387e <__swsetup_r+0xba>
 8003800:	4b25      	ldr	r3, [pc, #148]	; (8003898 <__swsetup_r+0xd4>)
 8003802:	429c      	cmp	r4, r3
 8003804:	d101      	bne.n	800380a <__swsetup_r+0x46>
 8003806:	68ac      	ldr	r4, [r5, #8]
 8003808:	e7eb      	b.n	80037e2 <__swsetup_r+0x1e>
 800380a:	4b24      	ldr	r3, [pc, #144]	; (800389c <__swsetup_r+0xd8>)
 800380c:	429c      	cmp	r4, r3
 800380e:	bf08      	it	eq
 8003810:	68ec      	ldreq	r4, [r5, #12]
 8003812:	e7e6      	b.n	80037e2 <__swsetup_r+0x1e>
 8003814:	0758      	lsls	r0, r3, #29
 8003816:	d512      	bpl.n	800383e <__swsetup_r+0x7a>
 8003818:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800381a:	b141      	cbz	r1, 800382e <__swsetup_r+0x6a>
 800381c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003820:	4299      	cmp	r1, r3
 8003822:	d002      	beq.n	800382a <__swsetup_r+0x66>
 8003824:	4630      	mov	r0, r6
 8003826:	f7ff fcd5 	bl	80031d4 <_free_r>
 800382a:	2300      	movs	r3, #0
 800382c:	6363      	str	r3, [r4, #52]	; 0x34
 800382e:	89a3      	ldrh	r3, [r4, #12]
 8003830:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003834:	81a3      	strh	r3, [r4, #12]
 8003836:	2300      	movs	r3, #0
 8003838:	6063      	str	r3, [r4, #4]
 800383a:	6923      	ldr	r3, [r4, #16]
 800383c:	6023      	str	r3, [r4, #0]
 800383e:	89a3      	ldrh	r3, [r4, #12]
 8003840:	f043 0308 	orr.w	r3, r3, #8
 8003844:	81a3      	strh	r3, [r4, #12]
 8003846:	6923      	ldr	r3, [r4, #16]
 8003848:	b94b      	cbnz	r3, 800385e <__swsetup_r+0x9a>
 800384a:	89a3      	ldrh	r3, [r4, #12]
 800384c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8003850:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003854:	d003      	beq.n	800385e <__swsetup_r+0x9a>
 8003856:	4621      	mov	r1, r4
 8003858:	4630      	mov	r0, r6
 800385a:	f000 fa09 	bl	8003c70 <__smakebuf_r>
 800385e:	89a0      	ldrh	r0, [r4, #12]
 8003860:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003864:	f010 0301 	ands.w	r3, r0, #1
 8003868:	d00a      	beq.n	8003880 <__swsetup_r+0xbc>
 800386a:	2300      	movs	r3, #0
 800386c:	60a3      	str	r3, [r4, #8]
 800386e:	6963      	ldr	r3, [r4, #20]
 8003870:	425b      	negs	r3, r3
 8003872:	61a3      	str	r3, [r4, #24]
 8003874:	6923      	ldr	r3, [r4, #16]
 8003876:	b943      	cbnz	r3, 800388a <__swsetup_r+0xc6>
 8003878:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800387c:	d1ba      	bne.n	80037f4 <__swsetup_r+0x30>
 800387e:	bd70      	pop	{r4, r5, r6, pc}
 8003880:	0781      	lsls	r1, r0, #30
 8003882:	bf58      	it	pl
 8003884:	6963      	ldrpl	r3, [r4, #20]
 8003886:	60a3      	str	r3, [r4, #8]
 8003888:	e7f4      	b.n	8003874 <__swsetup_r+0xb0>
 800388a:	2000      	movs	r0, #0
 800388c:	e7f7      	b.n	800387e <__swsetup_r+0xba>
 800388e:	bf00      	nop
 8003890:	20000000 	.word	0x20000000
 8003894:	08004284 	.word	0x08004284
 8003898:	080042a4 	.word	0x080042a4
 800389c:	08004264 	.word	0x08004264

080038a0 <abort>:
 80038a0:	b508      	push	{r3, lr}
 80038a2:	2006      	movs	r0, #6
 80038a4:	f000 fa4c 	bl	8003d40 <raise>
 80038a8:	2001      	movs	r0, #1
 80038aa:	f7fd fa07 	bl	8000cbc <_exit>
	...

080038b0 <__sflush_r>:
 80038b0:	898a      	ldrh	r2, [r1, #12]
 80038b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80038b6:	4605      	mov	r5, r0
 80038b8:	0710      	lsls	r0, r2, #28
 80038ba:	460c      	mov	r4, r1
 80038bc:	d458      	bmi.n	8003970 <__sflush_r+0xc0>
 80038be:	684b      	ldr	r3, [r1, #4]
 80038c0:	2b00      	cmp	r3, #0
 80038c2:	dc05      	bgt.n	80038d0 <__sflush_r+0x20>
 80038c4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80038c6:	2b00      	cmp	r3, #0
 80038c8:	dc02      	bgt.n	80038d0 <__sflush_r+0x20>
 80038ca:	2000      	movs	r0, #0
 80038cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80038d0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80038d2:	2e00      	cmp	r6, #0
 80038d4:	d0f9      	beq.n	80038ca <__sflush_r+0x1a>
 80038d6:	2300      	movs	r3, #0
 80038d8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80038dc:	682f      	ldr	r7, [r5, #0]
 80038de:	602b      	str	r3, [r5, #0]
 80038e0:	d032      	beq.n	8003948 <__sflush_r+0x98>
 80038e2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80038e4:	89a3      	ldrh	r3, [r4, #12]
 80038e6:	075a      	lsls	r2, r3, #29
 80038e8:	d505      	bpl.n	80038f6 <__sflush_r+0x46>
 80038ea:	6863      	ldr	r3, [r4, #4]
 80038ec:	1ac0      	subs	r0, r0, r3
 80038ee:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80038f0:	b10b      	cbz	r3, 80038f6 <__sflush_r+0x46>
 80038f2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80038f4:	1ac0      	subs	r0, r0, r3
 80038f6:	2300      	movs	r3, #0
 80038f8:	4602      	mov	r2, r0
 80038fa:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80038fc:	6a21      	ldr	r1, [r4, #32]
 80038fe:	4628      	mov	r0, r5
 8003900:	47b0      	blx	r6
 8003902:	1c43      	adds	r3, r0, #1
 8003904:	89a3      	ldrh	r3, [r4, #12]
 8003906:	d106      	bne.n	8003916 <__sflush_r+0x66>
 8003908:	6829      	ldr	r1, [r5, #0]
 800390a:	291d      	cmp	r1, #29
 800390c:	d82c      	bhi.n	8003968 <__sflush_r+0xb8>
 800390e:	4a2a      	ldr	r2, [pc, #168]	; (80039b8 <__sflush_r+0x108>)
 8003910:	40ca      	lsrs	r2, r1
 8003912:	07d6      	lsls	r6, r2, #31
 8003914:	d528      	bpl.n	8003968 <__sflush_r+0xb8>
 8003916:	2200      	movs	r2, #0
 8003918:	6062      	str	r2, [r4, #4]
 800391a:	04d9      	lsls	r1, r3, #19
 800391c:	6922      	ldr	r2, [r4, #16]
 800391e:	6022      	str	r2, [r4, #0]
 8003920:	d504      	bpl.n	800392c <__sflush_r+0x7c>
 8003922:	1c42      	adds	r2, r0, #1
 8003924:	d101      	bne.n	800392a <__sflush_r+0x7a>
 8003926:	682b      	ldr	r3, [r5, #0]
 8003928:	b903      	cbnz	r3, 800392c <__sflush_r+0x7c>
 800392a:	6560      	str	r0, [r4, #84]	; 0x54
 800392c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800392e:	602f      	str	r7, [r5, #0]
 8003930:	2900      	cmp	r1, #0
 8003932:	d0ca      	beq.n	80038ca <__sflush_r+0x1a>
 8003934:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003938:	4299      	cmp	r1, r3
 800393a:	d002      	beq.n	8003942 <__sflush_r+0x92>
 800393c:	4628      	mov	r0, r5
 800393e:	f7ff fc49 	bl	80031d4 <_free_r>
 8003942:	2000      	movs	r0, #0
 8003944:	6360      	str	r0, [r4, #52]	; 0x34
 8003946:	e7c1      	b.n	80038cc <__sflush_r+0x1c>
 8003948:	6a21      	ldr	r1, [r4, #32]
 800394a:	2301      	movs	r3, #1
 800394c:	4628      	mov	r0, r5
 800394e:	47b0      	blx	r6
 8003950:	1c41      	adds	r1, r0, #1
 8003952:	d1c7      	bne.n	80038e4 <__sflush_r+0x34>
 8003954:	682b      	ldr	r3, [r5, #0]
 8003956:	2b00      	cmp	r3, #0
 8003958:	d0c4      	beq.n	80038e4 <__sflush_r+0x34>
 800395a:	2b1d      	cmp	r3, #29
 800395c:	d001      	beq.n	8003962 <__sflush_r+0xb2>
 800395e:	2b16      	cmp	r3, #22
 8003960:	d101      	bne.n	8003966 <__sflush_r+0xb6>
 8003962:	602f      	str	r7, [r5, #0]
 8003964:	e7b1      	b.n	80038ca <__sflush_r+0x1a>
 8003966:	89a3      	ldrh	r3, [r4, #12]
 8003968:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800396c:	81a3      	strh	r3, [r4, #12]
 800396e:	e7ad      	b.n	80038cc <__sflush_r+0x1c>
 8003970:	690f      	ldr	r7, [r1, #16]
 8003972:	2f00      	cmp	r7, #0
 8003974:	d0a9      	beq.n	80038ca <__sflush_r+0x1a>
 8003976:	0793      	lsls	r3, r2, #30
 8003978:	680e      	ldr	r6, [r1, #0]
 800397a:	bf08      	it	eq
 800397c:	694b      	ldreq	r3, [r1, #20]
 800397e:	600f      	str	r7, [r1, #0]
 8003980:	bf18      	it	ne
 8003982:	2300      	movne	r3, #0
 8003984:	eba6 0807 	sub.w	r8, r6, r7
 8003988:	608b      	str	r3, [r1, #8]
 800398a:	f1b8 0f00 	cmp.w	r8, #0
 800398e:	dd9c      	ble.n	80038ca <__sflush_r+0x1a>
 8003990:	6a21      	ldr	r1, [r4, #32]
 8003992:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003994:	4643      	mov	r3, r8
 8003996:	463a      	mov	r2, r7
 8003998:	4628      	mov	r0, r5
 800399a:	47b0      	blx	r6
 800399c:	2800      	cmp	r0, #0
 800399e:	dc06      	bgt.n	80039ae <__sflush_r+0xfe>
 80039a0:	89a3      	ldrh	r3, [r4, #12]
 80039a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80039a6:	81a3      	strh	r3, [r4, #12]
 80039a8:	f04f 30ff 	mov.w	r0, #4294967295
 80039ac:	e78e      	b.n	80038cc <__sflush_r+0x1c>
 80039ae:	4407      	add	r7, r0
 80039b0:	eba8 0800 	sub.w	r8, r8, r0
 80039b4:	e7e9      	b.n	800398a <__sflush_r+0xda>
 80039b6:	bf00      	nop
 80039b8:	20400001 	.word	0x20400001

080039bc <_fflush_r>:
 80039bc:	b538      	push	{r3, r4, r5, lr}
 80039be:	690b      	ldr	r3, [r1, #16]
 80039c0:	4605      	mov	r5, r0
 80039c2:	460c      	mov	r4, r1
 80039c4:	b913      	cbnz	r3, 80039cc <_fflush_r+0x10>
 80039c6:	2500      	movs	r5, #0
 80039c8:	4628      	mov	r0, r5
 80039ca:	bd38      	pop	{r3, r4, r5, pc}
 80039cc:	b118      	cbz	r0, 80039d6 <_fflush_r+0x1a>
 80039ce:	6983      	ldr	r3, [r0, #24]
 80039d0:	b90b      	cbnz	r3, 80039d6 <_fflush_r+0x1a>
 80039d2:	f000 f887 	bl	8003ae4 <__sinit>
 80039d6:	4b14      	ldr	r3, [pc, #80]	; (8003a28 <_fflush_r+0x6c>)
 80039d8:	429c      	cmp	r4, r3
 80039da:	d11b      	bne.n	8003a14 <_fflush_r+0x58>
 80039dc:	686c      	ldr	r4, [r5, #4]
 80039de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80039e2:	2b00      	cmp	r3, #0
 80039e4:	d0ef      	beq.n	80039c6 <_fflush_r+0xa>
 80039e6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80039e8:	07d0      	lsls	r0, r2, #31
 80039ea:	d404      	bmi.n	80039f6 <_fflush_r+0x3a>
 80039ec:	0599      	lsls	r1, r3, #22
 80039ee:	d402      	bmi.n	80039f6 <_fflush_r+0x3a>
 80039f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80039f2:	f000 f915 	bl	8003c20 <__retarget_lock_acquire_recursive>
 80039f6:	4628      	mov	r0, r5
 80039f8:	4621      	mov	r1, r4
 80039fa:	f7ff ff59 	bl	80038b0 <__sflush_r>
 80039fe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003a00:	07da      	lsls	r2, r3, #31
 8003a02:	4605      	mov	r5, r0
 8003a04:	d4e0      	bmi.n	80039c8 <_fflush_r+0xc>
 8003a06:	89a3      	ldrh	r3, [r4, #12]
 8003a08:	059b      	lsls	r3, r3, #22
 8003a0a:	d4dd      	bmi.n	80039c8 <_fflush_r+0xc>
 8003a0c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003a0e:	f000 f908 	bl	8003c22 <__retarget_lock_release_recursive>
 8003a12:	e7d9      	b.n	80039c8 <_fflush_r+0xc>
 8003a14:	4b05      	ldr	r3, [pc, #20]	; (8003a2c <_fflush_r+0x70>)
 8003a16:	429c      	cmp	r4, r3
 8003a18:	d101      	bne.n	8003a1e <_fflush_r+0x62>
 8003a1a:	68ac      	ldr	r4, [r5, #8]
 8003a1c:	e7df      	b.n	80039de <_fflush_r+0x22>
 8003a1e:	4b04      	ldr	r3, [pc, #16]	; (8003a30 <_fflush_r+0x74>)
 8003a20:	429c      	cmp	r4, r3
 8003a22:	bf08      	it	eq
 8003a24:	68ec      	ldreq	r4, [r5, #12]
 8003a26:	e7da      	b.n	80039de <_fflush_r+0x22>
 8003a28:	08004284 	.word	0x08004284
 8003a2c:	080042a4 	.word	0x080042a4
 8003a30:	08004264 	.word	0x08004264

08003a34 <std>:
 8003a34:	2300      	movs	r3, #0
 8003a36:	b510      	push	{r4, lr}
 8003a38:	4604      	mov	r4, r0
 8003a3a:	e9c0 3300 	strd	r3, r3, [r0]
 8003a3e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003a42:	6083      	str	r3, [r0, #8]
 8003a44:	8181      	strh	r1, [r0, #12]
 8003a46:	6643      	str	r3, [r0, #100]	; 0x64
 8003a48:	81c2      	strh	r2, [r0, #14]
 8003a4a:	6183      	str	r3, [r0, #24]
 8003a4c:	4619      	mov	r1, r3
 8003a4e:	2208      	movs	r2, #8
 8003a50:	305c      	adds	r0, #92	; 0x5c
 8003a52:	f7fd fd1d 	bl	8001490 <memset>
 8003a56:	4b05      	ldr	r3, [pc, #20]	; (8003a6c <std+0x38>)
 8003a58:	6263      	str	r3, [r4, #36]	; 0x24
 8003a5a:	4b05      	ldr	r3, [pc, #20]	; (8003a70 <std+0x3c>)
 8003a5c:	62a3      	str	r3, [r4, #40]	; 0x28
 8003a5e:	4b05      	ldr	r3, [pc, #20]	; (8003a74 <std+0x40>)
 8003a60:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003a62:	4b05      	ldr	r3, [pc, #20]	; (8003a78 <std+0x44>)
 8003a64:	6224      	str	r4, [r4, #32]
 8003a66:	6323      	str	r3, [r4, #48]	; 0x30
 8003a68:	bd10      	pop	{r4, pc}
 8003a6a:	bf00      	nop
 8003a6c:	08003d79 	.word	0x08003d79
 8003a70:	08003d9b 	.word	0x08003d9b
 8003a74:	08003dd3 	.word	0x08003dd3
 8003a78:	08003df7 	.word	0x08003df7

08003a7c <_cleanup_r>:
 8003a7c:	4901      	ldr	r1, [pc, #4]	; (8003a84 <_cleanup_r+0x8>)
 8003a7e:	f000 b8af 	b.w	8003be0 <_fwalk_reent>
 8003a82:	bf00      	nop
 8003a84:	080039bd 	.word	0x080039bd

08003a88 <__sfmoreglue>:
 8003a88:	b570      	push	{r4, r5, r6, lr}
 8003a8a:	2268      	movs	r2, #104	; 0x68
 8003a8c:	1e4d      	subs	r5, r1, #1
 8003a8e:	4355      	muls	r5, r2
 8003a90:	460e      	mov	r6, r1
 8003a92:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8003a96:	f7ff fc09 	bl	80032ac <_malloc_r>
 8003a9a:	4604      	mov	r4, r0
 8003a9c:	b140      	cbz	r0, 8003ab0 <__sfmoreglue+0x28>
 8003a9e:	2100      	movs	r1, #0
 8003aa0:	e9c0 1600 	strd	r1, r6, [r0]
 8003aa4:	300c      	adds	r0, #12
 8003aa6:	60a0      	str	r0, [r4, #8]
 8003aa8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8003aac:	f7fd fcf0 	bl	8001490 <memset>
 8003ab0:	4620      	mov	r0, r4
 8003ab2:	bd70      	pop	{r4, r5, r6, pc}

08003ab4 <__sfp_lock_acquire>:
 8003ab4:	4801      	ldr	r0, [pc, #4]	; (8003abc <__sfp_lock_acquire+0x8>)
 8003ab6:	f000 b8b3 	b.w	8003c20 <__retarget_lock_acquire_recursive>
 8003aba:	bf00      	nop
 8003abc:	200001fd 	.word	0x200001fd

08003ac0 <__sfp_lock_release>:
 8003ac0:	4801      	ldr	r0, [pc, #4]	; (8003ac8 <__sfp_lock_release+0x8>)
 8003ac2:	f000 b8ae 	b.w	8003c22 <__retarget_lock_release_recursive>
 8003ac6:	bf00      	nop
 8003ac8:	200001fd 	.word	0x200001fd

08003acc <__sinit_lock_acquire>:
 8003acc:	4801      	ldr	r0, [pc, #4]	; (8003ad4 <__sinit_lock_acquire+0x8>)
 8003ace:	f000 b8a7 	b.w	8003c20 <__retarget_lock_acquire_recursive>
 8003ad2:	bf00      	nop
 8003ad4:	200001fe 	.word	0x200001fe

08003ad8 <__sinit_lock_release>:
 8003ad8:	4801      	ldr	r0, [pc, #4]	; (8003ae0 <__sinit_lock_release+0x8>)
 8003ada:	f000 b8a2 	b.w	8003c22 <__retarget_lock_release_recursive>
 8003ade:	bf00      	nop
 8003ae0:	200001fe 	.word	0x200001fe

08003ae4 <__sinit>:
 8003ae4:	b510      	push	{r4, lr}
 8003ae6:	4604      	mov	r4, r0
 8003ae8:	f7ff fff0 	bl	8003acc <__sinit_lock_acquire>
 8003aec:	69a3      	ldr	r3, [r4, #24]
 8003aee:	b11b      	cbz	r3, 8003af8 <__sinit+0x14>
 8003af0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003af4:	f7ff bff0 	b.w	8003ad8 <__sinit_lock_release>
 8003af8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8003afc:	6523      	str	r3, [r4, #80]	; 0x50
 8003afe:	4b13      	ldr	r3, [pc, #76]	; (8003b4c <__sinit+0x68>)
 8003b00:	4a13      	ldr	r2, [pc, #76]	; (8003b50 <__sinit+0x6c>)
 8003b02:	681b      	ldr	r3, [r3, #0]
 8003b04:	62a2      	str	r2, [r4, #40]	; 0x28
 8003b06:	42a3      	cmp	r3, r4
 8003b08:	bf04      	itt	eq
 8003b0a:	2301      	moveq	r3, #1
 8003b0c:	61a3      	streq	r3, [r4, #24]
 8003b0e:	4620      	mov	r0, r4
 8003b10:	f000 f820 	bl	8003b54 <__sfp>
 8003b14:	6060      	str	r0, [r4, #4]
 8003b16:	4620      	mov	r0, r4
 8003b18:	f000 f81c 	bl	8003b54 <__sfp>
 8003b1c:	60a0      	str	r0, [r4, #8]
 8003b1e:	4620      	mov	r0, r4
 8003b20:	f000 f818 	bl	8003b54 <__sfp>
 8003b24:	2200      	movs	r2, #0
 8003b26:	60e0      	str	r0, [r4, #12]
 8003b28:	2104      	movs	r1, #4
 8003b2a:	6860      	ldr	r0, [r4, #4]
 8003b2c:	f7ff ff82 	bl	8003a34 <std>
 8003b30:	68a0      	ldr	r0, [r4, #8]
 8003b32:	2201      	movs	r2, #1
 8003b34:	2109      	movs	r1, #9
 8003b36:	f7ff ff7d 	bl	8003a34 <std>
 8003b3a:	68e0      	ldr	r0, [r4, #12]
 8003b3c:	2202      	movs	r2, #2
 8003b3e:	2112      	movs	r1, #18
 8003b40:	f7ff ff78 	bl	8003a34 <std>
 8003b44:	2301      	movs	r3, #1
 8003b46:	61a3      	str	r3, [r4, #24]
 8003b48:	e7d2      	b.n	8003af0 <__sinit+0xc>
 8003b4a:	bf00      	nop
 8003b4c:	08003ee8 	.word	0x08003ee8
 8003b50:	08003a7d 	.word	0x08003a7d

08003b54 <__sfp>:
 8003b54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b56:	4607      	mov	r7, r0
 8003b58:	f7ff ffac 	bl	8003ab4 <__sfp_lock_acquire>
 8003b5c:	4b1e      	ldr	r3, [pc, #120]	; (8003bd8 <__sfp+0x84>)
 8003b5e:	681e      	ldr	r6, [r3, #0]
 8003b60:	69b3      	ldr	r3, [r6, #24]
 8003b62:	b913      	cbnz	r3, 8003b6a <__sfp+0x16>
 8003b64:	4630      	mov	r0, r6
 8003b66:	f7ff ffbd 	bl	8003ae4 <__sinit>
 8003b6a:	3648      	adds	r6, #72	; 0x48
 8003b6c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8003b70:	3b01      	subs	r3, #1
 8003b72:	d503      	bpl.n	8003b7c <__sfp+0x28>
 8003b74:	6833      	ldr	r3, [r6, #0]
 8003b76:	b30b      	cbz	r3, 8003bbc <__sfp+0x68>
 8003b78:	6836      	ldr	r6, [r6, #0]
 8003b7a:	e7f7      	b.n	8003b6c <__sfp+0x18>
 8003b7c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8003b80:	b9d5      	cbnz	r5, 8003bb8 <__sfp+0x64>
 8003b82:	4b16      	ldr	r3, [pc, #88]	; (8003bdc <__sfp+0x88>)
 8003b84:	60e3      	str	r3, [r4, #12]
 8003b86:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8003b8a:	6665      	str	r5, [r4, #100]	; 0x64
 8003b8c:	f000 f847 	bl	8003c1e <__retarget_lock_init_recursive>
 8003b90:	f7ff ff96 	bl	8003ac0 <__sfp_lock_release>
 8003b94:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8003b98:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8003b9c:	6025      	str	r5, [r4, #0]
 8003b9e:	61a5      	str	r5, [r4, #24]
 8003ba0:	2208      	movs	r2, #8
 8003ba2:	4629      	mov	r1, r5
 8003ba4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8003ba8:	f7fd fc72 	bl	8001490 <memset>
 8003bac:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8003bb0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8003bb4:	4620      	mov	r0, r4
 8003bb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003bb8:	3468      	adds	r4, #104	; 0x68
 8003bba:	e7d9      	b.n	8003b70 <__sfp+0x1c>
 8003bbc:	2104      	movs	r1, #4
 8003bbe:	4638      	mov	r0, r7
 8003bc0:	f7ff ff62 	bl	8003a88 <__sfmoreglue>
 8003bc4:	4604      	mov	r4, r0
 8003bc6:	6030      	str	r0, [r6, #0]
 8003bc8:	2800      	cmp	r0, #0
 8003bca:	d1d5      	bne.n	8003b78 <__sfp+0x24>
 8003bcc:	f7ff ff78 	bl	8003ac0 <__sfp_lock_release>
 8003bd0:	230c      	movs	r3, #12
 8003bd2:	603b      	str	r3, [r7, #0]
 8003bd4:	e7ee      	b.n	8003bb4 <__sfp+0x60>
 8003bd6:	bf00      	nop
 8003bd8:	08003ee8 	.word	0x08003ee8
 8003bdc:	ffff0001 	.word	0xffff0001

08003be0 <_fwalk_reent>:
 8003be0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003be4:	4606      	mov	r6, r0
 8003be6:	4688      	mov	r8, r1
 8003be8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8003bec:	2700      	movs	r7, #0
 8003bee:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8003bf2:	f1b9 0901 	subs.w	r9, r9, #1
 8003bf6:	d505      	bpl.n	8003c04 <_fwalk_reent+0x24>
 8003bf8:	6824      	ldr	r4, [r4, #0]
 8003bfa:	2c00      	cmp	r4, #0
 8003bfc:	d1f7      	bne.n	8003bee <_fwalk_reent+0xe>
 8003bfe:	4638      	mov	r0, r7
 8003c00:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003c04:	89ab      	ldrh	r3, [r5, #12]
 8003c06:	2b01      	cmp	r3, #1
 8003c08:	d907      	bls.n	8003c1a <_fwalk_reent+0x3a>
 8003c0a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003c0e:	3301      	adds	r3, #1
 8003c10:	d003      	beq.n	8003c1a <_fwalk_reent+0x3a>
 8003c12:	4629      	mov	r1, r5
 8003c14:	4630      	mov	r0, r6
 8003c16:	47c0      	blx	r8
 8003c18:	4307      	orrs	r7, r0
 8003c1a:	3568      	adds	r5, #104	; 0x68
 8003c1c:	e7e9      	b.n	8003bf2 <_fwalk_reent+0x12>

08003c1e <__retarget_lock_init_recursive>:
 8003c1e:	4770      	bx	lr

08003c20 <__retarget_lock_acquire_recursive>:
 8003c20:	4770      	bx	lr

08003c22 <__retarget_lock_release_recursive>:
 8003c22:	4770      	bx	lr

08003c24 <__swhatbuf_r>:
 8003c24:	b570      	push	{r4, r5, r6, lr}
 8003c26:	460e      	mov	r6, r1
 8003c28:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003c2c:	2900      	cmp	r1, #0
 8003c2e:	b096      	sub	sp, #88	; 0x58
 8003c30:	4614      	mov	r4, r2
 8003c32:	461d      	mov	r5, r3
 8003c34:	da08      	bge.n	8003c48 <__swhatbuf_r+0x24>
 8003c36:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8003c3a:	2200      	movs	r2, #0
 8003c3c:	602a      	str	r2, [r5, #0]
 8003c3e:	061a      	lsls	r2, r3, #24
 8003c40:	d410      	bmi.n	8003c64 <__swhatbuf_r+0x40>
 8003c42:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003c46:	e00e      	b.n	8003c66 <__swhatbuf_r+0x42>
 8003c48:	466a      	mov	r2, sp
 8003c4a:	f000 f8fb 	bl	8003e44 <_fstat_r>
 8003c4e:	2800      	cmp	r0, #0
 8003c50:	dbf1      	blt.n	8003c36 <__swhatbuf_r+0x12>
 8003c52:	9a01      	ldr	r2, [sp, #4]
 8003c54:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8003c58:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8003c5c:	425a      	negs	r2, r3
 8003c5e:	415a      	adcs	r2, r3
 8003c60:	602a      	str	r2, [r5, #0]
 8003c62:	e7ee      	b.n	8003c42 <__swhatbuf_r+0x1e>
 8003c64:	2340      	movs	r3, #64	; 0x40
 8003c66:	2000      	movs	r0, #0
 8003c68:	6023      	str	r3, [r4, #0]
 8003c6a:	b016      	add	sp, #88	; 0x58
 8003c6c:	bd70      	pop	{r4, r5, r6, pc}
	...

08003c70 <__smakebuf_r>:
 8003c70:	898b      	ldrh	r3, [r1, #12]
 8003c72:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003c74:	079d      	lsls	r5, r3, #30
 8003c76:	4606      	mov	r6, r0
 8003c78:	460c      	mov	r4, r1
 8003c7a:	d507      	bpl.n	8003c8c <__smakebuf_r+0x1c>
 8003c7c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003c80:	6023      	str	r3, [r4, #0]
 8003c82:	6123      	str	r3, [r4, #16]
 8003c84:	2301      	movs	r3, #1
 8003c86:	6163      	str	r3, [r4, #20]
 8003c88:	b002      	add	sp, #8
 8003c8a:	bd70      	pop	{r4, r5, r6, pc}
 8003c8c:	ab01      	add	r3, sp, #4
 8003c8e:	466a      	mov	r2, sp
 8003c90:	f7ff ffc8 	bl	8003c24 <__swhatbuf_r>
 8003c94:	9900      	ldr	r1, [sp, #0]
 8003c96:	4605      	mov	r5, r0
 8003c98:	4630      	mov	r0, r6
 8003c9a:	f7ff fb07 	bl	80032ac <_malloc_r>
 8003c9e:	b948      	cbnz	r0, 8003cb4 <__smakebuf_r+0x44>
 8003ca0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003ca4:	059a      	lsls	r2, r3, #22
 8003ca6:	d4ef      	bmi.n	8003c88 <__smakebuf_r+0x18>
 8003ca8:	f023 0303 	bic.w	r3, r3, #3
 8003cac:	f043 0302 	orr.w	r3, r3, #2
 8003cb0:	81a3      	strh	r3, [r4, #12]
 8003cb2:	e7e3      	b.n	8003c7c <__smakebuf_r+0xc>
 8003cb4:	4b0d      	ldr	r3, [pc, #52]	; (8003cec <__smakebuf_r+0x7c>)
 8003cb6:	62b3      	str	r3, [r6, #40]	; 0x28
 8003cb8:	89a3      	ldrh	r3, [r4, #12]
 8003cba:	6020      	str	r0, [r4, #0]
 8003cbc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003cc0:	81a3      	strh	r3, [r4, #12]
 8003cc2:	9b00      	ldr	r3, [sp, #0]
 8003cc4:	6163      	str	r3, [r4, #20]
 8003cc6:	9b01      	ldr	r3, [sp, #4]
 8003cc8:	6120      	str	r0, [r4, #16]
 8003cca:	b15b      	cbz	r3, 8003ce4 <__smakebuf_r+0x74>
 8003ccc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003cd0:	4630      	mov	r0, r6
 8003cd2:	f000 f8c9 	bl	8003e68 <_isatty_r>
 8003cd6:	b128      	cbz	r0, 8003ce4 <__smakebuf_r+0x74>
 8003cd8:	89a3      	ldrh	r3, [r4, #12]
 8003cda:	f023 0303 	bic.w	r3, r3, #3
 8003cde:	f043 0301 	orr.w	r3, r3, #1
 8003ce2:	81a3      	strh	r3, [r4, #12]
 8003ce4:	89a0      	ldrh	r0, [r4, #12]
 8003ce6:	4305      	orrs	r5, r0
 8003ce8:	81a5      	strh	r5, [r4, #12]
 8003cea:	e7cd      	b.n	8003c88 <__smakebuf_r+0x18>
 8003cec:	08003a7d 	.word	0x08003a7d

08003cf0 <_raise_r>:
 8003cf0:	291f      	cmp	r1, #31
 8003cf2:	b538      	push	{r3, r4, r5, lr}
 8003cf4:	4604      	mov	r4, r0
 8003cf6:	460d      	mov	r5, r1
 8003cf8:	d904      	bls.n	8003d04 <_raise_r+0x14>
 8003cfa:	2316      	movs	r3, #22
 8003cfc:	6003      	str	r3, [r0, #0]
 8003cfe:	f04f 30ff 	mov.w	r0, #4294967295
 8003d02:	bd38      	pop	{r3, r4, r5, pc}
 8003d04:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8003d06:	b112      	cbz	r2, 8003d0e <_raise_r+0x1e>
 8003d08:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003d0c:	b94b      	cbnz	r3, 8003d22 <_raise_r+0x32>
 8003d0e:	4620      	mov	r0, r4
 8003d10:	f000 f830 	bl	8003d74 <_getpid_r>
 8003d14:	462a      	mov	r2, r5
 8003d16:	4601      	mov	r1, r0
 8003d18:	4620      	mov	r0, r4
 8003d1a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003d1e:	f000 b817 	b.w	8003d50 <_kill_r>
 8003d22:	2b01      	cmp	r3, #1
 8003d24:	d00a      	beq.n	8003d3c <_raise_r+0x4c>
 8003d26:	1c59      	adds	r1, r3, #1
 8003d28:	d103      	bne.n	8003d32 <_raise_r+0x42>
 8003d2a:	2316      	movs	r3, #22
 8003d2c:	6003      	str	r3, [r0, #0]
 8003d2e:	2001      	movs	r0, #1
 8003d30:	e7e7      	b.n	8003d02 <_raise_r+0x12>
 8003d32:	2400      	movs	r4, #0
 8003d34:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8003d38:	4628      	mov	r0, r5
 8003d3a:	4798      	blx	r3
 8003d3c:	2000      	movs	r0, #0
 8003d3e:	e7e0      	b.n	8003d02 <_raise_r+0x12>

08003d40 <raise>:
 8003d40:	4b02      	ldr	r3, [pc, #8]	; (8003d4c <raise+0xc>)
 8003d42:	4601      	mov	r1, r0
 8003d44:	6818      	ldr	r0, [r3, #0]
 8003d46:	f7ff bfd3 	b.w	8003cf0 <_raise_r>
 8003d4a:	bf00      	nop
 8003d4c:	20000000 	.word	0x20000000

08003d50 <_kill_r>:
 8003d50:	b538      	push	{r3, r4, r5, lr}
 8003d52:	4d07      	ldr	r5, [pc, #28]	; (8003d70 <_kill_r+0x20>)
 8003d54:	2300      	movs	r3, #0
 8003d56:	4604      	mov	r4, r0
 8003d58:	4608      	mov	r0, r1
 8003d5a:	4611      	mov	r1, r2
 8003d5c:	602b      	str	r3, [r5, #0]
 8003d5e:	f7fc ff9d 	bl	8000c9c <_kill>
 8003d62:	1c43      	adds	r3, r0, #1
 8003d64:	d102      	bne.n	8003d6c <_kill_r+0x1c>
 8003d66:	682b      	ldr	r3, [r5, #0]
 8003d68:	b103      	cbz	r3, 8003d6c <_kill_r+0x1c>
 8003d6a:	6023      	str	r3, [r4, #0]
 8003d6c:	bd38      	pop	{r3, r4, r5, pc}
 8003d6e:	bf00      	nop
 8003d70:	200001f8 	.word	0x200001f8

08003d74 <_getpid_r>:
 8003d74:	f7fc bf8a 	b.w	8000c8c <_getpid>

08003d78 <__sread>:
 8003d78:	b510      	push	{r4, lr}
 8003d7a:	460c      	mov	r4, r1
 8003d7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003d80:	f000 f894 	bl	8003eac <_read_r>
 8003d84:	2800      	cmp	r0, #0
 8003d86:	bfab      	itete	ge
 8003d88:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8003d8a:	89a3      	ldrhlt	r3, [r4, #12]
 8003d8c:	181b      	addge	r3, r3, r0
 8003d8e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8003d92:	bfac      	ite	ge
 8003d94:	6563      	strge	r3, [r4, #84]	; 0x54
 8003d96:	81a3      	strhlt	r3, [r4, #12]
 8003d98:	bd10      	pop	{r4, pc}

08003d9a <__swrite>:
 8003d9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d9e:	461f      	mov	r7, r3
 8003da0:	898b      	ldrh	r3, [r1, #12]
 8003da2:	05db      	lsls	r3, r3, #23
 8003da4:	4605      	mov	r5, r0
 8003da6:	460c      	mov	r4, r1
 8003da8:	4616      	mov	r6, r2
 8003daa:	d505      	bpl.n	8003db8 <__swrite+0x1e>
 8003dac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003db0:	2302      	movs	r3, #2
 8003db2:	2200      	movs	r2, #0
 8003db4:	f000 f868 	bl	8003e88 <_lseek_r>
 8003db8:	89a3      	ldrh	r3, [r4, #12]
 8003dba:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003dbe:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003dc2:	81a3      	strh	r3, [r4, #12]
 8003dc4:	4632      	mov	r2, r6
 8003dc6:	463b      	mov	r3, r7
 8003dc8:	4628      	mov	r0, r5
 8003dca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003dce:	f000 b817 	b.w	8003e00 <_write_r>

08003dd2 <__sseek>:
 8003dd2:	b510      	push	{r4, lr}
 8003dd4:	460c      	mov	r4, r1
 8003dd6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003dda:	f000 f855 	bl	8003e88 <_lseek_r>
 8003dde:	1c43      	adds	r3, r0, #1
 8003de0:	89a3      	ldrh	r3, [r4, #12]
 8003de2:	bf15      	itete	ne
 8003de4:	6560      	strne	r0, [r4, #84]	; 0x54
 8003de6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8003dea:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8003dee:	81a3      	strheq	r3, [r4, #12]
 8003df0:	bf18      	it	ne
 8003df2:	81a3      	strhne	r3, [r4, #12]
 8003df4:	bd10      	pop	{r4, pc}

08003df6 <__sclose>:
 8003df6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003dfa:	f000 b813 	b.w	8003e24 <_close_r>
	...

08003e00 <_write_r>:
 8003e00:	b538      	push	{r3, r4, r5, lr}
 8003e02:	4d07      	ldr	r5, [pc, #28]	; (8003e20 <_write_r+0x20>)
 8003e04:	4604      	mov	r4, r0
 8003e06:	4608      	mov	r0, r1
 8003e08:	4611      	mov	r1, r2
 8003e0a:	2200      	movs	r2, #0
 8003e0c:	602a      	str	r2, [r5, #0]
 8003e0e:	461a      	mov	r2, r3
 8003e10:	f7fc ff7b 	bl	8000d0a <_write>
 8003e14:	1c43      	adds	r3, r0, #1
 8003e16:	d102      	bne.n	8003e1e <_write_r+0x1e>
 8003e18:	682b      	ldr	r3, [r5, #0]
 8003e1a:	b103      	cbz	r3, 8003e1e <_write_r+0x1e>
 8003e1c:	6023      	str	r3, [r4, #0]
 8003e1e:	bd38      	pop	{r3, r4, r5, pc}
 8003e20:	200001f8 	.word	0x200001f8

08003e24 <_close_r>:
 8003e24:	b538      	push	{r3, r4, r5, lr}
 8003e26:	4d06      	ldr	r5, [pc, #24]	; (8003e40 <_close_r+0x1c>)
 8003e28:	2300      	movs	r3, #0
 8003e2a:	4604      	mov	r4, r0
 8003e2c:	4608      	mov	r0, r1
 8003e2e:	602b      	str	r3, [r5, #0]
 8003e30:	f7fc ff87 	bl	8000d42 <_close>
 8003e34:	1c43      	adds	r3, r0, #1
 8003e36:	d102      	bne.n	8003e3e <_close_r+0x1a>
 8003e38:	682b      	ldr	r3, [r5, #0]
 8003e3a:	b103      	cbz	r3, 8003e3e <_close_r+0x1a>
 8003e3c:	6023      	str	r3, [r4, #0]
 8003e3e:	bd38      	pop	{r3, r4, r5, pc}
 8003e40:	200001f8 	.word	0x200001f8

08003e44 <_fstat_r>:
 8003e44:	b538      	push	{r3, r4, r5, lr}
 8003e46:	4d07      	ldr	r5, [pc, #28]	; (8003e64 <_fstat_r+0x20>)
 8003e48:	2300      	movs	r3, #0
 8003e4a:	4604      	mov	r4, r0
 8003e4c:	4608      	mov	r0, r1
 8003e4e:	4611      	mov	r1, r2
 8003e50:	602b      	str	r3, [r5, #0]
 8003e52:	f7fc ff82 	bl	8000d5a <_fstat>
 8003e56:	1c43      	adds	r3, r0, #1
 8003e58:	d102      	bne.n	8003e60 <_fstat_r+0x1c>
 8003e5a:	682b      	ldr	r3, [r5, #0]
 8003e5c:	b103      	cbz	r3, 8003e60 <_fstat_r+0x1c>
 8003e5e:	6023      	str	r3, [r4, #0]
 8003e60:	bd38      	pop	{r3, r4, r5, pc}
 8003e62:	bf00      	nop
 8003e64:	200001f8 	.word	0x200001f8

08003e68 <_isatty_r>:
 8003e68:	b538      	push	{r3, r4, r5, lr}
 8003e6a:	4d06      	ldr	r5, [pc, #24]	; (8003e84 <_isatty_r+0x1c>)
 8003e6c:	2300      	movs	r3, #0
 8003e6e:	4604      	mov	r4, r0
 8003e70:	4608      	mov	r0, r1
 8003e72:	602b      	str	r3, [r5, #0]
 8003e74:	f7fc ff81 	bl	8000d7a <_isatty>
 8003e78:	1c43      	adds	r3, r0, #1
 8003e7a:	d102      	bne.n	8003e82 <_isatty_r+0x1a>
 8003e7c:	682b      	ldr	r3, [r5, #0]
 8003e7e:	b103      	cbz	r3, 8003e82 <_isatty_r+0x1a>
 8003e80:	6023      	str	r3, [r4, #0]
 8003e82:	bd38      	pop	{r3, r4, r5, pc}
 8003e84:	200001f8 	.word	0x200001f8

08003e88 <_lseek_r>:
 8003e88:	b538      	push	{r3, r4, r5, lr}
 8003e8a:	4d07      	ldr	r5, [pc, #28]	; (8003ea8 <_lseek_r+0x20>)
 8003e8c:	4604      	mov	r4, r0
 8003e8e:	4608      	mov	r0, r1
 8003e90:	4611      	mov	r1, r2
 8003e92:	2200      	movs	r2, #0
 8003e94:	602a      	str	r2, [r5, #0]
 8003e96:	461a      	mov	r2, r3
 8003e98:	f7fc ff7a 	bl	8000d90 <_lseek>
 8003e9c:	1c43      	adds	r3, r0, #1
 8003e9e:	d102      	bne.n	8003ea6 <_lseek_r+0x1e>
 8003ea0:	682b      	ldr	r3, [r5, #0]
 8003ea2:	b103      	cbz	r3, 8003ea6 <_lseek_r+0x1e>
 8003ea4:	6023      	str	r3, [r4, #0]
 8003ea6:	bd38      	pop	{r3, r4, r5, pc}
 8003ea8:	200001f8 	.word	0x200001f8

08003eac <_read_r>:
 8003eac:	b538      	push	{r3, r4, r5, lr}
 8003eae:	4d07      	ldr	r5, [pc, #28]	; (8003ecc <_read_r+0x20>)
 8003eb0:	4604      	mov	r4, r0
 8003eb2:	4608      	mov	r0, r1
 8003eb4:	4611      	mov	r1, r2
 8003eb6:	2200      	movs	r2, #0
 8003eb8:	602a      	str	r2, [r5, #0]
 8003eba:	461a      	mov	r2, r3
 8003ebc:	f7fc ff08 	bl	8000cd0 <_read>
 8003ec0:	1c43      	adds	r3, r0, #1
 8003ec2:	d102      	bne.n	8003eca <_read_r+0x1e>
 8003ec4:	682b      	ldr	r3, [r5, #0]
 8003ec6:	b103      	cbz	r3, 8003eca <_read_r+0x1e>
 8003ec8:	6023      	str	r3, [r4, #0]
 8003eca:	bd38      	pop	{r3, r4, r5, pc}
 8003ecc:	200001f8 	.word	0x200001f8

08003ed0 <_init>:
 8003ed0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003ed2:	bf00      	nop
 8003ed4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003ed6:	bc08      	pop	{r3}
 8003ed8:	469e      	mov	lr, r3
 8003eda:	4770      	bx	lr

08003edc <_fini>:
 8003edc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003ede:	bf00      	nop
 8003ee0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003ee2:	bc08      	pop	{r3}
 8003ee4:	469e      	mov	lr, r3
 8003ee6:	4770      	bx	lr
